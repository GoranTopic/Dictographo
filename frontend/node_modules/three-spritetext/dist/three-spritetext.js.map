{"version":3,"file":"three-spritetext.js","sources":["../src/index.js"],"sourcesContent":["import {\n  LinearFilter,\n  Sprite,\n  SpriteMaterial,\n  Texture\n} from 'three';\n\nconst three = typeof window !== 'undefined' && window.THREE\n  ? window.THREE // Prefer consumption from global THREE, if exists\n  : {\n  LinearFilter,\n  Sprite,\n  SpriteMaterial,\n  Texture\n};\n\nexport default class extends three.Sprite {\n  constructor(text = '', textHeight = 10, color = 'rgba(255, 255, 255, 1)') {\n    super(new three.SpriteMaterial({ map: new three.Texture() }));\n\n    this._text = `${text}`;\n    this._textHeight = textHeight;\n    this._color = color;\n    this._backgroundColor = false; // no background color\n\n    this._padding = 0;\n    this._borderWidth = 0;\n    this._borderColor = 'white';\n\n    this._strokeWidth = 0;\n    this._strokeColor = 'white';\n\n    this._fontFace = 'Arial';\n    this._fontSize = 90; // defines text resolution\n    this._fontWeight = 'normal';\n\n    this._canvas = document.createElement('canvas');\n    this._texture = this.material.map;\n    this._texture.minFilter = three.LinearFilter;\n\n    this._genCanvas();\n  }\n\n  get text() { return this._text; }\n  set text(text) { this._text = text; this._genCanvas(); }\n  get textHeight() { return this._textHeight; }\n  set textHeight(textHeight) { this._textHeight = textHeight; this._genCanvas(); }\n  get color() { return this._color; }\n  set color(color) { this._color = color; this._genCanvas(); }\n  get backgroundColor() { return this._backgroundColor; }\n  set backgroundColor(color) { this._backgroundColor = color; this._genCanvas(); }\n  get padding() { return this._padding; }\n  set padding(padding) { this._padding = padding; this._genCanvas(); }\n  get borderWidth() { return this._borderWidth; }\n  set borderWidth(borderWidth) { this._borderWidth = borderWidth; this._genCanvas(); }\n  get borderColor() { return this._borderColor; }\n  set borderColor(borderColor) { this._borderColor = borderColor; this._genCanvas(); }\n  get fontFace() { return this._fontFace; }\n  set fontFace(fontFace) { this._fontFace = fontFace; this._genCanvas(); }\n  get fontSize() { return this._fontSize; }\n  set fontSize(fontSize) { this._fontSize = fontSize; this._genCanvas(); }\n  get fontWeight() { return this._fontWeight; }\n  set fontWeight(fontWeight) { this._fontWeight = fontWeight; this._genCanvas(); }\n  get strokeWidth() { return this._strokeWidth; }\n  set strokeWidth(strokeWidth) { this._strokeWidth = strokeWidth; this._genCanvas(); }\n  get strokeColor() { return this._strokeColor; }\n  set strokeColor(strokeColor) { this._strokeColor = strokeColor; this._genCanvas(); }\n\n  _genCanvas() {\n    const canvas = this._canvas;\n    const ctx = canvas.getContext('2d');\n\n    const border = Array.isArray(this.borderWidth) ? this.borderWidth : [this.borderWidth, this.borderWidth]; // x,y border\n    const relBorder = border.map(b => b * this.fontSize * 0.1); // border in canvas units\n\n    const padding = Array.isArray(this.padding) ? this.padding : [this.padding, this.padding]; // x,y padding\n    const relPadding = padding.map(p => p * this.fontSize * 0.1); // padding in canvas units\n\n    const lines = this.text.split('\\n');\n    const font = `${this.fontWeight} ${this.fontSize}px ${this.fontFace}`;\n\n    ctx.font = font; // measure canvas with appropriate font\n    const innerWidth = Math.max(...lines.map(line => ctx.measureText(line).width));\n    const innerHeight = this.fontSize * lines.length;\n    canvas.width = innerWidth + relBorder[0] * 2 + relPadding[0] * 2;\n    canvas.height = innerHeight + relBorder[1] * 2 + relPadding[1] * 2;\n\n    // paint border\n    if (this.borderWidth) {\n      ctx.strokeStyle = this.borderColor;\n\n      if (relBorder[0]) {\n        ctx.lineWidth = relBorder[0] * 2;\n        ctx.beginPath();\n        ctx.moveTo(0, 0);\n        ctx.lineTo(0, canvas.height);\n        ctx.moveTo(canvas.width, 0);\n        ctx.lineTo(canvas.width, canvas.height);\n        ctx.stroke();\n      }\n\n      if (relBorder[1]) {\n        ctx.lineWidth = relBorder[1] * 2;\n        ctx.beginPath();\n        ctx.moveTo(relBorder[0], 0);\n        ctx.lineTo(canvas.width - relBorder[0], 0);\n        ctx.moveTo(relBorder[0], canvas.height);\n        ctx.lineTo(canvas.width - relBorder[0], canvas.height);\n        ctx.stroke();\n      }\n    }\n\n    ctx.translate(...relBorder);\n\n    // paint background\n    if (this.backgroundColor) {\n      ctx.fillStyle = this.backgroundColor;\n      ctx.fillRect(0, 0, canvas.width - relBorder[0] * 2, canvas.height - relBorder[1] * 2);\n    }\n\n    ctx.translate(...relPadding);\n\n    // paint text\n    ctx.font = font; // Set font again after canvas is resized, as context properties are reset\n    ctx.fillStyle = this.color;\n    ctx.textBaseline = 'bottom';\n\n    const drawTextStroke = this.strokeWidth > 0;\n    if (drawTextStroke) {\n      ctx.lineWidth = this.strokeWidth * this.fontSize / 10;\n      ctx.strokeStyle = this.strokeColor;\n    }\n\n    lines.forEach((line, index) => {\n      const lineX = (innerWidth - ctx.measureText(line).width) / 2;\n      const lineY = (index + 1) * this.fontSize;\n\n      drawTextStroke && ctx.strokeText(line, lineX, lineY);\n      ctx.fillText(line, lineX, lineY);\n    });\n\n    // Inject canvas into sprite\n    this._texture.image = canvas;\n    this._texture.needsUpdate = true;\n\n    const yScale = this.textHeight * lines.length + border[1] * 2 + padding[1] * 2;\n    this.scale.set(yScale * canvas.width / canvas.height, yScale, 0);\n  }\n\n  clone() {\n    return new this.constructor(this.text, this.textHeight, this.color).copy(this);\n  }\n\n  copy(source) {\n    three.Sprite.prototype.copy.call(this, source);\n\n    this.color = source.color;\n    this.backgroundColor = source.backgroundColor;\n    this.padding = source.padding;\n    this.borderWidth = source.borderWidth;\n    this.borderColor = source.borderColor;\n    this.fontFace = source.fontFace;\n    this.fontSize = source.fontSize;\n    this.fontWeight = source.fontWeight;\n    this.strokeWidth = source.strokeWidth;\n    this.strokeColor = source.strokeColor;\n\n    return this;\n  }\n}\n"],"names":["three","window","THREE","LinearFilter","Sprite","SpriteMaterial","Texture","text","textHeight","color","map","_text","_textHeight","_color","_backgroundColor","_padding","_borderWidth","_borderColor","_strokeWidth","_strokeColor","_fontFace","_fontSize","_fontWeight","_canvas","document","createElement","_texture","material","minFilter","_genCanvas","canvas","ctx","getContext","border","Array","isArray","borderWidth","relBorder","b","fontSize","padding","relPadding","p","lines","split","font","fontWeight","fontFace","innerWidth","Math","max","line","measureText","width","innerHeight","length","height","strokeStyle","borderColor","lineWidth","beginPath","moveTo","lineTo","stroke","translate","backgroundColor","fillStyle","fillRect","textBaseline","drawTextStroke","strokeWidth","strokeColor","forEach","index","lineX","lineY","strokeText","fillText","image","needsUpdate","yScale","scale","set","constructor","copy","source","prototype","call"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAOA,IAAMA,KAAK,GAAG,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,KAAxC,GACVD,MAAM,CAACC,KADG;EAAA,EAEV;EACFC,EAAAA,YAAY,EAAZA,oBADE;EAEFC,EAAAA,MAAM,EAANA,cAFE;EAGFC,EAAAA,cAAc,EAAdA,sBAHE;EAIFC,EAAAA,OAAO,EAAPA;EAJE,CAFJ;;;;;;;EAUE,sBAA0E;EAAA;;EAAA,QAA9DC,IAA8D,uEAAvD,EAAuD;EAAA,QAAnDC,UAAmD,uEAAtC,EAAsC;EAAA,QAAlCC,KAAkC,uEAA1B,wBAA0B;;EAAA;;EACxE,8BAAM,IAAIT,KAAK,CAACK,cAAV,CAAyB;EAAEK,MAAAA,GAAG,EAAE,IAAIV,KAAK,CAACM,OAAV;EAAP,KAAzB,CAAN;EAEA,UAAKK,KAAL,aAAgBJ,IAAhB;EACA,UAAKK,WAAL,GAAmBJ,UAAnB;EACA,UAAKK,MAAL,GAAcJ,KAAd;EACA,UAAKK,gBAAL,GAAwB,KAAxB,CANwE;;EAQxE,UAAKC,QAAL,GAAgB,CAAhB;EACA,UAAKC,YAAL,GAAoB,CAApB;EACA,UAAKC,YAAL,GAAoB,OAApB;EAEA,UAAKC,YAAL,GAAoB,CAApB;EACA,UAAKC,YAAL,GAAoB,OAApB;EAEA,UAAKC,SAAL,GAAiB,OAAjB;EACA,UAAKC,SAAL,GAAiB,EAAjB,CAhBwE;;EAiBxE,UAAKC,WAAL,GAAmB,QAAnB;EAEA,UAAKC,OAAL,GAAeC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;EACA,UAAKC,QAAL,GAAgB,MAAKC,QAAL,CAAcjB,GAA9B;EACA,UAAKgB,QAAL,CAAcE,SAAd,GAA0B5B,KAAK,CAACG,YAAhC;;EAEA,UAAK0B,UAAL;;EAvBwE;EAwBzE;;;;mCA2BY;EAAA;;EACX,UAAMC,MAAM,GAAG,KAAKP,OAApB;EACA,UAAMQ,GAAG,GAAGD,MAAM,CAACE,UAAP,CAAkB,IAAlB,CAAZ;EAEA,UAAMC,MAAM,GAAGC,KAAK,CAACC,OAAN,CAAc,KAAKC,WAAnB,IAAkC,KAAKA,WAAvC,GAAqD,CAAC,KAAKA,WAAN,EAAmB,KAAKA,WAAxB,CAApE,CAJW;;EAKX,UAAMC,SAAS,GAAGJ,MAAM,CAACvB,GAAP,CAAW,UAAA4B,CAAC;EAAA,eAAIA,CAAC,GAAG,MAAI,CAACC,QAAT,GAAoB,GAAxB;EAAA,OAAZ,CAAlB,CALW;;EAOX,UAAMC,OAAO,GAAGN,KAAK,CAACC,OAAN,CAAc,KAAKK,OAAnB,IAA8B,KAAKA,OAAnC,GAA6C,CAAC,KAAKA,OAAN,EAAe,KAAKA,OAApB,CAA7D,CAPW;;EAQX,UAAMC,UAAU,GAAGD,OAAO,CAAC9B,GAAR,CAAY,UAAAgC,CAAC;EAAA,eAAIA,CAAC,GAAG,MAAI,CAACH,QAAT,GAAoB,GAAxB;EAAA,OAAb,CAAnB,CARW;;EAUX,UAAMI,KAAK,GAAG,KAAKpC,IAAL,CAAUqC,KAAV,CAAgB,IAAhB,CAAd;EACA,UAAMC,IAAI,aAAM,KAAKC,UAAX,cAAyB,KAAKP,QAA9B,gBAA4C,KAAKQ,QAAjD,CAAV;EAEAhB,MAAAA,GAAG,CAACc,IAAJ,GAAWA,IAAX,CAbW;;EAcX,UAAMG,UAAU,GAAGC,IAAI,CAACC,GAAL,OAAAD,IAAI,qBAAQN,KAAK,CAACjC,GAAN,CAAU,UAAAyC,IAAI;EAAA,eAAIpB,GAAG,CAACqB,WAAJ,CAAgBD,IAAhB,EAAsBE,KAA1B;EAAA,OAAd,CAAR,EAAvB;EACA,UAAMC,WAAW,GAAG,KAAKf,QAAL,GAAgBI,KAAK,CAACY,MAA1C;EACAzB,MAAAA,MAAM,CAACuB,KAAP,GAAeL,UAAU,GAAGX,SAAS,CAAC,CAAD,CAAT,GAAe,CAA5B,GAAgCI,UAAU,CAAC,CAAD,CAAV,GAAgB,CAA/D;EACAX,MAAAA,MAAM,CAAC0B,MAAP,GAAgBF,WAAW,GAAGjB,SAAS,CAAC,CAAD,CAAT,GAAe,CAA7B,GAAiCI,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAjE,CAjBW;;EAoBX,UAAI,KAAKL,WAAT,EAAsB;EACpBL,QAAAA,GAAG,CAAC0B,WAAJ,GAAkB,KAAKC,WAAvB;;EAEA,YAAIrB,SAAS,CAAC,CAAD,CAAb,EAAkB;EAChBN,UAAAA,GAAG,CAAC4B,SAAJ,GAAgBtB,SAAS,CAAC,CAAD,CAAT,GAAe,CAA/B;EACAN,UAAAA,GAAG,CAAC6B,SAAJ;EACA7B,UAAAA,GAAG,CAAC8B,MAAJ,CAAW,CAAX,EAAc,CAAd;EACA9B,UAAAA,GAAG,CAAC+B,MAAJ,CAAW,CAAX,EAAchC,MAAM,CAAC0B,MAArB;EACAzB,UAAAA,GAAG,CAAC8B,MAAJ,CAAW/B,MAAM,CAACuB,KAAlB,EAAyB,CAAzB;EACAtB,UAAAA,GAAG,CAAC+B,MAAJ,CAAWhC,MAAM,CAACuB,KAAlB,EAAyBvB,MAAM,CAAC0B,MAAhC;EACAzB,UAAAA,GAAG,CAACgC,MAAJ;EACD;;EAED,YAAI1B,SAAS,CAAC,CAAD,CAAb,EAAkB;EAChBN,UAAAA,GAAG,CAAC4B,SAAJ,GAAgBtB,SAAS,CAAC,CAAD,CAAT,GAAe,CAA/B;EACAN,UAAAA,GAAG,CAAC6B,SAAJ;EACA7B,UAAAA,GAAG,CAAC8B,MAAJ,CAAWxB,SAAS,CAAC,CAAD,CAApB,EAAyB,CAAzB;EACAN,UAAAA,GAAG,CAAC+B,MAAJ,CAAWhC,MAAM,CAACuB,KAAP,GAAehB,SAAS,CAAC,CAAD,CAAnC,EAAwC,CAAxC;EACAN,UAAAA,GAAG,CAAC8B,MAAJ,CAAWxB,SAAS,CAAC,CAAD,CAApB,EAAyBP,MAAM,CAAC0B,MAAhC;EACAzB,UAAAA,GAAG,CAAC+B,MAAJ,CAAWhC,MAAM,CAACuB,KAAP,GAAehB,SAAS,CAAC,CAAD,CAAnC,EAAwCP,MAAM,CAAC0B,MAA/C;EACAzB,UAAAA,GAAG,CAACgC,MAAJ;EACD;EACF;;EAEDhC,MAAAA,GAAG,CAACiC,SAAJ,OAAAjC,GAAG,qBAAcM,SAAd,EAAH,CA5CW;;EA+CX,UAAI,KAAK4B,eAAT,EAA0B;EACxBlC,QAAAA,GAAG,CAACmC,SAAJ,GAAgB,KAAKD,eAArB;EACAlC,QAAAA,GAAG,CAACoC,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmBrC,MAAM,CAACuB,KAAP,GAAehB,SAAS,CAAC,CAAD,CAAT,GAAe,CAAjD,EAAoDP,MAAM,CAAC0B,MAAP,GAAgBnB,SAAS,CAAC,CAAD,CAAT,GAAe,CAAnF;EACD;;EAEDN,MAAAA,GAAG,CAACiC,SAAJ,OAAAjC,GAAG,qBAAcU,UAAd,EAAH,CApDW;;EAuDXV,MAAAA,GAAG,CAACc,IAAJ,GAAWA,IAAX,CAvDW;;EAwDXd,MAAAA,GAAG,CAACmC,SAAJ,GAAgB,KAAKzD,KAArB;EACAsB,MAAAA,GAAG,CAACqC,YAAJ,GAAmB,QAAnB;EAEA,UAAMC,cAAc,GAAG,KAAKC,WAAL,GAAmB,CAA1C;;EACA,UAAID,cAAJ,EAAoB;EAClBtC,QAAAA,GAAG,CAAC4B,SAAJ,GAAgB,KAAKW,WAAL,GAAmB,KAAK/B,QAAxB,GAAmC,EAAnD;EACAR,QAAAA,GAAG,CAAC0B,WAAJ,GAAkB,KAAKc,WAAvB;EACD;;EAED5B,MAAAA,KAAK,CAAC6B,OAAN,CAAc,UAACrB,IAAD,EAAOsB,KAAP,EAAiB;EAC7B,YAAMC,KAAK,GAAG,CAAC1B,UAAU,GAAGjB,GAAG,CAACqB,WAAJ,CAAgBD,IAAhB,EAAsBE,KAApC,IAA6C,CAA3D;EACA,YAAMsB,KAAK,GAAG,CAACF,KAAK,GAAG,CAAT,IAAc,MAAI,CAAClC,QAAjC;EAEA8B,QAAAA,cAAc,IAAItC,GAAG,CAAC6C,UAAJ,CAAezB,IAAf,EAAqBuB,KAArB,EAA4BC,KAA5B,CAAlB;EACA5C,QAAAA,GAAG,CAAC8C,QAAJ,CAAa1B,IAAb,EAAmBuB,KAAnB,EAA0BC,KAA1B;EACD,OAND,EAjEW;;EA0EX,WAAKjD,QAAL,CAAcoD,KAAd,GAAsBhD,MAAtB;EACA,WAAKJ,QAAL,CAAcqD,WAAd,GAA4B,IAA5B;EAEA,UAAMC,MAAM,GAAG,KAAKxE,UAAL,GAAkBmC,KAAK,CAACY,MAAxB,GAAiCtB,MAAM,CAAC,CAAD,CAAN,GAAY,CAA7C,GAAiDO,OAAO,CAAC,CAAD,CAAP,GAAa,CAA7E;EACA,WAAKyC,KAAL,CAAWC,GAAX,CAAeF,MAAM,GAAGlD,MAAM,CAACuB,KAAhB,GAAwBvB,MAAM,CAAC0B,MAA9C,EAAsDwB,MAAtD,EAA8D,CAA9D;EACD;;;8BAEO;EACN,aAAO,IAAI,KAAKG,WAAT,CAAqB,KAAK5E,IAA1B,EAAgC,KAAKC,UAArC,EAAiD,KAAKC,KAAtD,EAA6D2E,IAA7D,CAAkE,IAAlE,CAAP;EACD;;;2BAEIC,QAAQ;EACXrF,MAAAA,KAAK,CAACI,MAAN,CAAakF,SAAb,CAAuBF,IAAvB,CAA4BG,IAA5B,CAAiC,IAAjC,EAAuCF,MAAvC;EAEA,WAAK5E,KAAL,GAAa4E,MAAM,CAAC5E,KAApB;EACA,WAAKwD,eAAL,GAAuBoB,MAAM,CAACpB,eAA9B;EACA,WAAKzB,OAAL,GAAe6C,MAAM,CAAC7C,OAAtB;EACA,WAAKJ,WAAL,GAAmBiD,MAAM,CAACjD,WAA1B;EACA,WAAKsB,WAAL,GAAmB2B,MAAM,CAAC3B,WAA1B;EACA,WAAKX,QAAL,GAAgBsC,MAAM,CAACtC,QAAvB;EACA,WAAKR,QAAL,GAAgB8C,MAAM,CAAC9C,QAAvB;EACA,WAAKO,UAAL,GAAkBuC,MAAM,CAACvC,UAAzB;EACA,WAAKwB,WAAL,GAAmBe,MAAM,CAACf,WAA1B;EACA,WAAKC,WAAL,GAAmBc,MAAM,CAACd,WAA1B;EAEA,aAAO,IAAP;EACD;;;0BA7HU;EAAE,aAAO,KAAK5D,KAAZ;EAAoB;wBACxBJ,MAAM;EAAE,WAAKI,KAAL,GAAaJ,IAAb;;EAAmB,WAAKsB,UAAL;EAAoB;;;0BACvC;EAAE,aAAO,KAAKjB,WAAZ;EAA0B;wBAC9BJ,YAAY;EAAE,WAAKI,WAAL,GAAmBJ,UAAnB;;EAA+B,WAAKqB,UAAL;EAAoB;;;0BACpE;EAAE,aAAO,KAAKhB,MAAZ;EAAqB;wBACzBJ,OAAO;EAAE,WAAKI,MAAL,GAAcJ,KAAd;;EAAqB,WAAKoB,UAAL;EAAoB;;;0BACtC;EAAE,aAAO,KAAKf,gBAAZ;EAA+B;wBACnCL,OAAO;EAAE,WAAKK,gBAAL,GAAwBL,KAAxB;;EAA+B,WAAKoB,UAAL;EAAoB;;;0BAClE;EAAE,aAAO,KAAKd,QAAZ;EAAuB;wBAC3ByB,SAAS;EAAE,WAAKzB,QAAL,GAAgByB,OAAhB;;EAAyB,WAAKX,UAAL;EAAoB;;;0BAClD;EAAE,aAAO,KAAKb,YAAZ;EAA2B;wBAC/BoB,aAAa;EAAE,WAAKpB,YAAL,GAAoBoB,WAApB;;EAAiC,WAAKP,UAAL;EAAoB;;;0BAClE;EAAE,aAAO,KAAKZ,YAAZ;EAA2B;wBAC/ByC,aAAa;EAAE,WAAKzC,YAAL,GAAoByC,WAApB;;EAAiC,WAAK7B,UAAL;EAAoB;;;0BACrE;EAAE,aAAO,KAAKT,SAAZ;EAAwB;wBAC5B2B,UAAU;EAAE,WAAK3B,SAAL,GAAiB2B,QAAjB;;EAA2B,WAAKlB,UAAL;EAAoB;;;0BACzD;EAAE,aAAO,KAAKR,SAAZ;EAAwB;wBAC5BkB,UAAU;EAAE,WAAKlB,SAAL,GAAiBkB,QAAjB;;EAA2B,WAAKV,UAAL;EAAoB;;;0BACvD;EAAE,aAAO,KAAKP,WAAZ;EAA0B;wBAC9BwB,YAAY;EAAE,WAAKxB,WAAL,GAAmBwB,UAAnB;;EAA+B,WAAKjB,UAAL;EAAoB;;;0BAC9D;EAAE,aAAO,KAAKX,YAAZ;EAA2B;wBAC/BoD,aAAa;EAAE,WAAKpD,YAAL,GAAoBoD,WAApB;;EAAiC,WAAKzC,UAAL;EAAoB;;;0BAClE;EAAE,aAAO,KAAKV,YAAZ;EAA2B;wBAC/BoD,aAAa;EAAE,WAAKpD,YAAL,GAAoBoD,WAApB;;EAAiC,WAAK1C,UAAL;EAAoB;;;;IAlDzD7B,KAAK,CAACI;;;;;;;;"}