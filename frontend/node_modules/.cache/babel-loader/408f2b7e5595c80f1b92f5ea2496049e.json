{"ast":null,"code":"var _jsxFileName = \"/home/telix/dictographo/frontend/src/Components/Graph.js\";\nimport React from 'react'; //import { Graph } from \"react-d3-graph\";\n\nimport { onClickNode } from '../node_functions'; //import { graphConfig }  from \"../myConfig\";\n\nimport ForceGraph2D from 'react-force-graph-2d'; //import ForceGraph3D from 'react-force-graph-3d';\n//import ForceGraphVR from 'react-force-graph-vr';\n//import ForceGraphAR from 'react-force-graph-ar';\n\n/*\n * =======================================\n *      Graph Componente for React \n * =======================================\n */\n\nfunction GraphContainer({\n  state,\n  dispatchState\n}) {\n  const {\n    //useState,\n    //useEffect, \n    useCallback\n  } = React;\n\n  const DynamicGraph = () => {\n    const handleClick = useCallback(nodeId => onClickNode(nodeId, state, dispatchState), []);\n    return /*#__PURE__*/React.createElement(ForceGraph2D, {\n      enableNodeDrag: true,\n      onNodeClick: handleClick,\n      graphData: state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 12\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundImage: 'url(./grid.png)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DynamicGraph, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), \",\");\n}\n\nexport default GraphContainer; // redifine the function inside this context \n\n/*\nlet onClickNode_func =\n\t\t(nodeId) => onClickNode(nodeId, state, dispatchState);\nreturn(\n\t\t<div style={{backgroundImage: 'url(./grid.png)'}} >\n\t\t\t\t<Graph \n\t\t\t\t\t\tid=\"graph-id\" // id is mandatory, if no id is defined rd3g will throw an error\n\t\t\t\t\t\tdata={state}\n\t\t\t\t\t\tconfig={graphConfig}\n\t\t\t\t\t\tonClickNode={onClickNode_func}\n\t\t\t\t\t\tbackgroundColor=\"black\"\n\t\t\t\t/>\n\t\t</div>\n)\n*/","map":{"version":3,"sources":["/home/telix/dictographo/frontend/src/Components/Graph.js"],"names":["React","onClickNode","ForceGraph2D","GraphContainer","state","dispatchState","useCallback","DynamicGraph","handleClick","nodeId","backgroundImage"],"mappings":";AAAA,OAAOA,KAAP,MAAmB,OAAnB,C,CACA;;AACA,SAASC,WAAT,QAA4B,mBAA5B,C,CACA;;AACA,OAAOC,YAAP,MAAyB,sBAAzB,C,CACA;AACA;AACA;;AAEA;;;;;;AAMA,SAASC,cAAT,CAAwB;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAxB,EAA+C;AAE7C,QAAM;AACJ;AACA;AACAC,IAAAA;AAHI,MAIFN,KAJJ;;AAMA,QAAMO,YAAY,GAAG,MAAM;AAGzB,UAAMC,WAAW,GAAGF,WAAW,CAC5BG,MAAD,IAAYR,WAAW,CAACQ,MAAD,EAASL,KAAT,EAAgBC,aAAhB,CADM,EAE3B,EAF2B,CAA/B;AAIA,wBAAO,oBAAC,YAAD;AACL,MAAA,cAAc,EAAE,IADX;AAEL,MAAA,WAAW,EAAEG,WAFR;AAGL,MAAA,SAAS,EAAEJ,KAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAKD,GAZD;;AAaA,sBACE;AAAK,IAAA,KAAK,EAAE;AAACM,MAAAA,eAAe,EAAE;AAAlB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,MADF;AAKD;;AACD,eAAeP,cAAf,C,CAEE;;AACA","sourcesContent":["import React  from 'react';\n//import { Graph } from \"react-d3-graph\";\nimport { onClickNode } from '../node_functions';\n//import { graphConfig }  from \"../myConfig\";\nimport ForceGraph2D from 'react-force-graph-2d';\n//import ForceGraph3D from 'react-force-graph-3d';\n//import ForceGraphVR from 'react-force-graph-vr';\n//import ForceGraphAR from 'react-force-graph-ar';\n\n/*\n * =======================================\n *      Graph Componente for React \n * =======================================\n */\n\nfunction GraphContainer({state, dispatchState}){\n\n\t\tconst { \n\t\t\t\t//useState,\n\t\t\t\t//useEffect, \n\t\t\t\tuseCallback\n\t\t} = React;\n\n\t\tconst DynamicGraph = () => {\n\n\n\t\t\t\tconst handleClick = useCallback(\n\t\t\t\t\t\t(nodeId) => onClickNode(nodeId, state, dispatchState)\n\t\t\t\t\t\t, []);\n\t\t\t\t\t\t\t\t\n\t\t\t\treturn <ForceGraph2D\n\t\t\t\t\t\tenableNodeDrag={true}\n\t\t\t\t\t\tonNodeClick={handleClick}\n\t\t\t\t\t\tgraphData={state}\n\t\t\t\t/>;\n\t\t};\n\t\treturn (\n\t\t\t\t<div style={{backgroundImage: 'url(./grid.png)'}} >\n\t\t\t\t\t\t<DynamicGraph />,\n\t\t\t\t</div>\n\t\t)\n}\nexport default GraphContainer;\n\n\t\t// redifine the function inside this context \n\t\t/*\n\t\tlet onClickNode_func =\n\t\t\t\t(nodeId) => onClickNode(nodeId, state, dispatchState);\n\t\treturn(\n\t\t\t\t<div style={{backgroundImage: 'url(./grid.png)'}} >\n\t\t\t\t\t\t<Graph \n\t\t\t\t\t\t\t\tid=\"graph-id\" // id is mandatory, if no id is defined rd3g will throw an error\n\t\t\t\t\t\t\t\tdata={state}\n\t\t\t\t\t\t\t\tconfig={graphConfig}\n\t\t\t\t\t\t\t\tonClickNode={onClickNode_func}\n\t\t\t\t\t\t\t\tbackgroundColor=\"black\"\n\t\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t)\n\t\t*/\n"]},"metadata":{},"sourceType":"module"}