{"ast":null,"code":"import _toConsumableArray from\"/home/telix/dictographo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/telix/dictographo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/telix/dictographo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useEffect,useState}from'react';import{Graph}from\"react-d3-graph\";import{onClickNode}from'../../node_functions';import{colors,graphConfig}from\"../../myConfig\";//import d3Switcher from \"./d3Switcher\";\nimport ForceGraph2D from'react-force-graph-2d';import ForceGraph3D from'react-force-graph-3d';import SpriteText from'three-spritetext';//import ForceGraphVR from 'react-force-graph-vr';\n//import ForceGraphAR from 'react-force-graph-ar';\n/*\n * =======================================\n *      Graph Componente for React \n * =======================================\n */function GraphContainer(_ref){var state=_ref.state,dispatchState=_ref.dispatchState;var handleClick=useCallback(function(nodeId){//  handle click of node\nonClickNode(nodeId,state,dispatchState);},[state,dispatchState]);var _useState=useState({height:window.innerHeight-87,width:window.innerWidth-15}),_useState2=_slicedToArray(_useState,2),dimensions=_useState2[0],setDimensions=_useState2[1];useEffect(function(){function handleResize(){setDimensions({height:window.innerHeight-87,width:window.innerWidth-15});}window.addEventListener('resize',handleResize);return function(_){window.removeEventListener('resize',handleResize);};});var chosenGraph=function chosenGraph(type){switch(type){case'd3':return/*#__PURE__*/React.createElement(Graph,{id:\"graph-id\"// id is mandatory, \n// if no id is defined rd3g will throw an error\n,data:state.d3Data,onClickNode:handleClick,config:_objectSpread(_objectSpread({},graphConfig),{},{height:dimensions.height,width:dimensions.width})});case'2D':return/*#__PURE__*/React.createElement(ForceGraph2D,{graphData:state.forceData,onNodeClick:handleClick,nodeLabel:\"id\",height:dimensions.height,width:dimensions.width,nodeRelSize:5,enableNodeDrag:true,linkDirectionalArrowLength:1,linkDirectionalArrowRelPos:1,linkDirectionalParticles:0.5,linkDirectionalParticleSpeed:0.003,linkDirectionalParticleWidth:3,linkWidth:1.8,onNodeDragEnd:function onNodeDragEnd(node){node.fx=node.x;node.fy=node.y;node.fz=node.z;},nodeCanvasObject:function nodeCanvasObject(node,ctx,globalScale){var label=node.id;var fontSize=15/globalScale;ctx.font=\"\".concat(fontSize,\"px Sans-Serif\");var textWidth=ctx.measureText(label).width;var bckgDimensions=[textWidth,fontSize].map(function(n){return n+fontSize*0.3;});// some padding\nctx.fillStyle='rgba(255, 255, 255, 0.8)';ctx.fillRect.apply(ctx,[node.x-bckgDimensions[0]/2,node.y-bckgDimensions[1]/2].concat(_toConsumableArray(bckgDimensions)));ctx.textAlign='center';ctx.textBaseline='middle';ctx.fillStyle=node.color;ctx.fillText(label,node.x,node.y);}});case'3D':return/*#__PURE__*/React.createElement(ForceGraph3D,{graphData:state.forceData,onNodeClick:handleClick,nodeLabel:\"id\",height:dimensions.height,width:dimensions.width,enableNodeDrag:true,linkDirectionalArrowRelPos:1,linkDirectionalArrowLength:1,backgroundColor:'black',linkDirectionalParticles:1.5,linkDirectionalParticleSpeed:0.005,linkDirectionalParticleWidth:1,linkWidth:0.5,onNodeDragEnd:function onNodeDragEnd(node){node.fx=node.x;node.fy=node.y;node.fz=node.z;},nodeThreeObject:function nodeThreeObject(node){var sprite=new SpriteText(node.id);sprite.color=node.color===colors.node.selected?node.color:node.color===colors.node.done?colors.node.default:colors.node.done;sprite.textHeight=8;return sprite;}});default://console.log(state)\nreturn/*#__PURE__*/React.createElement(Graph,{id:\"graph-id\"// id is mandatory, \n// if no id is defined rd3g will throw an error\n,data:state,onClickNode:handleClick,config:_objectSpread(_objectSpread({},graphConfig),{},{height:dimensions.height,width:dimensions.width})});}};return/*#__PURE__*/React.createElement(\"div\",{style:{backgroundImage:'url(./grid.png)'}},chosenGraph(state.graphType));}export default GraphContainer;","map":{"version":3,"sources":["/home/telix/dictographo/frontend/src/Components/Graph/Graph.js"],"names":["React","useCallback","useEffect","useState","Graph","onClickNode","colors","graphConfig","ForceGraph2D","ForceGraph3D","SpriteText","GraphContainer","state","dispatchState","handleClick","nodeId","height","window","innerHeight","width","innerWidth","dimensions","setDimensions","handleResize","addEventListener","_","removeEventListener","chosenGraph","type","d3Data","forceData","node","fx","x","fy","y","fz","z","ctx","globalScale","label","id","fontSize","font","textWidth","measureText","bckgDimensions","map","n","fillStyle","fillRect","textAlign","textBaseline","color","fillText","sprite","selected","done","default","textHeight","backgroundImage","graphType"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState }  from 'react';\nimport { Graph } from \"react-d3-graph\";\nimport { onClickNode } from '../../node_functions';\nimport { colors, graphConfig }  from \"../../myConfig\";\n//import d3Switcher from \"./d3Switcher\";\nimport ForceGraph2D from 'react-force-graph-2d';\nimport ForceGraph3D from 'react-force-graph-3d';\nimport SpriteText from 'three-spritetext';\n//import ForceGraphVR from 'react-force-graph-vr';\n//import ForceGraphAR from 'react-force-graph-ar';\n\n/*\n * =======================================\n *      Graph Componente for React \n * =======================================\n */\n\nfunction GraphContainer({state, dispatchState}){\n\n\t\tconst handleClick = useCallback((nodeId) => {  //  handle click of node\n\t\t\t\tonClickNode(nodeId, state, dispatchState)\n\t\t}, [state, dispatchState]);\n\n\t\tconst [dimensions, setDimensions] = useState({ \n\t\t\t\theight: window.innerHeight - 87,\n\t\t\t\twidth: window.innerWidth - 15,\n\t\t})\n\n\t\tuseEffect(() => {\n\t\t\t\tfunction handleResize(){\n\t\t\t\t\t\tsetDimensions({\n\t\t\t\t\t\t\t\theight: window.innerHeight - 87,\n\t\t\t\t\t\t\t\twidth: window.innerWidth - 15,\n\t\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\twindow.addEventListener('resize', handleResize)\n\t\t\t\treturn _ => {\n\t\t\t\t\t\twindow.removeEventListener('resize', handleResize)\n\t\t\t\t}\n\t\t});\n\n\t\tconst chosenGraph = (type) =>{ \n\t\t\t\tswitch(type) {\n\t\t\t\t\t\tcase 'd3':\n\t\t\t\t\t\t\t\treturn <Graph \n\t\t\t\t\t\t\t\t\t\tid=\"graph-id\" \n\t\t\t\t\t\t\t\t\t\t// id is mandatory, \n\t\t\t\t\t\t\t\t\t\t// if no id is defined rd3g will throw an error\n\t\t\t\t\t\t\t\t\t\tdata={state.d3Data}\n\t\t\t\t\t\t\t\t\t\tonClickNode={handleClick}\n\t\t\t\t\t\t\t\t\t\tconfig={ {...graphConfig, height: dimensions.height, width: dimensions.width}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\tcase '2D':\n\t\t\t\t\t\t\t\treturn <ForceGraph2D\n\t\t\t\t\t\t\t\t\t\tgraphData={state.forceData}\n\t\t\t\t\t\t\t\t\t\tonNodeClick={handleClick}\n\t\t\t\t\t\t\t\t\t\tnodeLabel=\"id\"\n\t\t\t\t\t\t\t\t\t\theight={dimensions.height}\n\t\t\t\t\t\t\t\t\t\twidth={dimensions.width}\n\t\t\t\t\t\t\t\t\t\tnodeRelSize={5}\n\t\t\t\t\t\t\t\t\t\tenableNodeDrag={true}\n\t\t\t\t\t\t\t\t\t\tlinkDirectionalArrowLength={1}\n\t\t\t\t\t\t\t\t\t\tlinkDirectionalArrowRelPos={1}\n\t\t\t\t\t\t\t\t\t\tlinkDirectionalParticles={0.5}\n\t\t\t\t\t\t\t\t\t\tlinkDirectionalParticleSpeed={0.003}\n\t\t\t\t\t\t\t\t\t\tlinkDirectionalParticleWidth={3}\n\t\t\t\t\t\t\t\t\t\tlinkWidth={1.8}\n\t\t\t\t\t\t\t\t\t\tonNodeDragEnd={node => {\n\t\t\t\t\t\t\t\t\t\t\t\tnode.fx = node.x;\n\t\t\t\t\t\t\t\t\t\t\t\tnode.fy = node.y;\n\t\t\t\t\t\t\t\t\t\t\t\tnode.fz = node.z;\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tnodeCanvasObject={(node, ctx, globalScale) => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst label = node.id;\n\t\t\t\t\t\t\t\t\t\t\t\tconst fontSize = 15/(globalScale);\n\t\t\t\t\t\t\t\t\t\t\t\tctx.font = `${fontSize}px Sans-Serif`;\n\t\t\t\t\t\t\t\t\t\t\t\tconst textWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\t\t\t\t\tconst bckgDimensions = [textWidth, fontSize].map(n => \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tn + fontSize * 0.3); // some padding\n\t\t\t\t\t\t\t\t\t\t\t\tctx.fillStyle = 'rgba(255, 255, 255, 0.8)';\n\t\t\t\t\t\t\t\t\t\t\t\tctx.fillRect(node.x - bckgDimensions[0]/2, node.y - bckgDimensions[1]/2, ...bckgDimensions);\n\t\t\t\t\t\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t\t\t\t\t\t\tctx.fillStyle = node.color;\n\t\t\t\t\t\t\t\t\t\t\t\tctx.fillText(label, node.x, node.y);\n\t\t\t\t\t\t\t\t\t\t\t\t          \n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>;\n\t\t\t\t\t\tcase '3D':\n\t\t\t\t\t\t\t\treturn <ForceGraph3D\n\t\t\t\t\t\t\t\t\t\tgraphData={state.forceData}\n\t\t\t\t\t\t\t\t\t\tonNodeClick={handleClick}\n\t\t\t\t\t\t\t\t\t\tnodeLabel=\"id\"\n\t\t\t\t\t\t\t\t\t\theight={dimensions.height}\n\t\t\t\t\t\t\t\t\t\twidth={dimensions.width}\n\t\t\t\t\t\t\t\t\t\tenableNodeDrag={true}\n\t\t\t\t\t\t\t\t\t\tlinkDirectionalArrowRelPos={1}\n\t\t\t\t\t\t\t\t\t\tlinkDirectionalArrowLength={1}\n\t\t\t\t\t\t\t\t\t\tbackgroundColor={'black'}\n\t\t\t\t\t\t\t\t\t\tlinkDirectionalParticles={1.5}\n\t\t\t\t\t\t\t\t\t\tlinkDirectionalParticleSpeed={0.005}\n\t\t\t\t\t\t\t\t\t\tlinkDirectionalParticleWidth={1}\n\t\t\t\t\t\t\t\t\t\tlinkWidth={0.5}\n\t\t\t\t\t\t\t\t\t\tonNodeDragEnd={node => {\n\t\t\t\t\t\t\t\t\t\t\t\tnode.fx = node.x;\n\t\t\t\t\t\t\t\t\t\t\t\tnode.fy = node.y;\n\t\t\t\t\t\t\t\t\t\t\t\tnode.fz = node.z;\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tnodeThreeObject={node => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst sprite = new SpriteText(node.id);\n\t\t\t\t\t\t\t\t\t\t\t\tsprite.color = (node.color === colors.node.selected)? node.color : (node.color === colors.node.done)? colors.node.default : colors.node.done;\n\t\t\t\t\t\t\t\t\t\t\t\tsprite.textHeight = 8;\n\t\t\t\t\t\t\t\t\t\t\t\treturn sprite;\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t//console.log(state)\n\t\t\t\t\t\t\t\treturn <Graph \n\t\t\t\t\t\t\t\t\t\tid=\"graph-id\" \n\t\t\t\t\t\t\t\t\t\t// id is mandatory, \n\t\t\t\t\t\t\t\t\t\t// if no id is defined rd3g will throw an error\n\t\t\t\t\t\t\t\t\t\tdata={state}\n\t\t\t\t\t\t\t\t\t\tonClickNode={handleClick}\n\t\t\t\t\t\t\t\t\t\tconfig={ {...graphConfig, height: dimensions.height, width: dimensions.width}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t} \n\t\t}\n\n\n\t\treturn <div style={{backgroundImage: 'url(./grid.png)'}} >\n\t\t\t\t{chosenGraph(state.graphType)}\n\t\t</div>\n\t\t\n}\n\nexport default GraphContainer;\n"]},"metadata":{},"sourceType":"module"}