{"ast":null,"code":"var _jsxFileName = \"/home/telix/dictio-grapho/frontend/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { Graph } from \"react-d3-graph\";\nimport { myConfig, colors } from \"./myConfig\";\nimport Modal from 'react-modal';\nimport { ProSidebar, Menu, MenuItem, SubMenu } from 'react-pro-sidebar';\nimport 'react-pro-sidebar/dist/css/styles.css';\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\nconst API_ENDPOINT = 'http://127.0.0.1:8000/api/v1/'; // graph payload (with minimalist structure)\n\nconst initial_state = {\n  nodes: [],\n  links: [],\n  selected: {},\n  isError: false,\n  isWordNoTFound: false,\n  isEmpty: true,\n  isLoading: true,\n  searchTerm: '',\n  DestinationTerm: '',\n  showModal: false\n};\n\nfunction App() {\n  // make reducer for the words data and internal state \n  const stateReducer = (state, action) => {\n    let node;\n\n    switch (action.type) {\n      case 'SET_NEW_NODES':\n        return { ...state,\n          nodes: [...state.nodes, ...action.payload]\n        };\n\n      case 'SET_NEW_LINKS':\n        return { ...state,\n          links: [...state.links, ...action.payload]\n        };\n\n      case 'SET_NODE_LINK':\n        return { ...state,\n          nodes: [...state.nodes, action.payload.node],\n          links: [...state.links, action.payload.link]\n        };\n\n      case 'SET_STATE':\n        return { ...state,\n          nodes: [...state.nodes, ...action.payload.nodes],\n          links: [...state.links, ...action.payload.links]\n        };\n\n      case 'SET_SEARCH_NODE':\n        return { ...state,\n          nodes: [{ ...action.payload,\n            selected: true,\n            color: colors.node.selected\n          }],\n          links: [],\n          selected: action.payload,\n          // save as selected\n          isEmpty: false\n        };\n\n      case 'SET_NODE_DONE':\n        node = state.nodes.filter(node => node.id === action.payload)[0];\n        return { ...state,\n          nodes: [...state.nodes, { ...node,\n            color: colors.node.done\n          }],\n          isEmpty: false\n        };\n\n      case 'ERASE_NODES':\n        return { ...state,\n          nodes: [],\n          links: []\n        };\n\n      case 'SET_SEARCH_TERM':\n        return { ...state,\n          searchTerm: action.payload\n        };\n\n      case 'SET_DEST_TERM':\n        return { ...state,\n          destinationTerm: action.payload\n        };\n\n      case 'SET_NODE_SELECTED':\n        return { ...state,\n          nodes: [...state.nodes, { ...action.payload,\n            color: colors.node.selected\n          }],\n          // change color\n          selected: action.payload\n        };\n\n      case 'SWITCH_SELECTED_NODE':\n        node = state.nodes.filter(node => node.id === action.payload)[0];\n        return { ...state,\n          nodes: [...state.nodes, { ...state.selected,\n            color: colors.node.done\n          }, { ...node,\n            color: colors.node.selected\n          }],\n          selected: node\n        };\n\n      case 'TOGGEL_MODAL':\n        return { ...state,\n          showModal: !state.showModal\n        };\n\n      case 'SET_SHOW_MODAL':\n        return { ...state,\n          showModal: action.payload\n        };\n\n      case 'SET_FETCH_FAILED':\n        return { ...state,\n          isError: true\n        };\n\n      default:\n        throw new Error();\n    }\n  };\n  /* define dispatcher for the Internal data */\n\n\n  const [state, dispatchState] = React.useReducer(stateReducer, initial_state);\n\n  const processNode = node => {\n    /* process a node from the api into one for the dispatcher\n     * it changes title for id, for instance */\n    node['id'] = node.title;\n    node['isSelected'] = false;\n    node['color'] = colors.node.default;\n    return node;\n  }; // handle the change by seting the state variable to \n\n\n  const handleSearchChange = change => dispatchState({\n    type: 'SET_SEARCH_TERM',\n    payload: change.target.value\n  }); // handle the change by seting the state variable to \n\n\n  const handleDestinationChange = change => dispatchState({\n    type: 'SET_DEST_TERM',\n    payload: change.target.value\n  }); // get node with given node id from state \n\n\n  const getNode = nodeId => state.nodes.filter(node => node.id === nodeId)[0]; // attemps to return true id node is not in state\n\n\n  const isNotInState = nodeId => state.nodes.every(node => node.id !== nodeId);\n\n  const requestSynonymNodes = node => {\n    /* for every node request the adjecent node to it */\n    node.synonyms.forEach(synonym => {\n      if (isNotInState(synonym['synonym'])) {\n        fetch(API_ENDPOINT + synonym[\"synonym\"]).then(result => result.json()).then(result => processNode(result)).then(adjNode => {\n          dispatchState({\n            type: 'SET_NODE_LINK',\n            payload: {\n              node: adjNode,\n              link: {\n                source: node.id,\n                target: adjNode.id\n              }\n            }\n          });\n        }).catch(() => dispatchState({\n          type: 'SET_FETCH_FAILED'\n        }));\n      }\n    });\n  }; // handle submit search button\n\n\n  const handleSearchSubmit = () => {\n    fetch(API_ENDPOINT + state.searchTerm).then(result => result.json()).then(result => processNode(result)).then(node => {\n      dispatchState({\n        type: 'SET_SEARCH_NODE',\n        payload: node\n      });\n      return node;\n    }).then(node => requestSynonymNodes(node)).catch(() => dispatchState({\n      type: 'SET_FETCH_FAILED'\n    }));\n  }; // handle path button\n\n\n  const handlePathSubmit = () => dispatchState({\n    type: 'RESET_NODE'\n  });\n\n  const closeModal = () => {\n    dispatchState({\n      type: 'SET_SHOW_MODAL',\n      payload: false\n    });\n  };\n\n  const onClickNode = function (nodeId) {\n    console.log(`clicked node ${nodeId}`);\n    requestSynonymNodes(getNode(nodeId));\n    dispatchState({\n      type: 'SWITCH_SELECTED_NODE',\n      payload: nodeId\n    });\n  };\n\n  const onRightClickNode = function (event, nodeId) {\n    window.alert(`Right clicked node ${nodeId}`);\n  };\n\n  const onClickLink = function (source, target) {\n    window.alert(`Clicked link between ${source} and ${target}`);\n  };\n\n  const onRightClickLink = function (event, source, target) {\n    window.alert(`Right clicked link between ${source} and ${target}`);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputWithLabel, {\n    id: \"search\",\n    type: \"text\",\n    isFocuse: true,\n    value: state.searchTerm,\n    onInputChange: handleSearchChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  }, \"Search:\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    disable: !state.searchTerm,\n    onClick: handleSearchSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, \"Search\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputWithLabel, {\n    id: \"destination\",\n    type: \"text\",\n    value: state.destinationTerm,\n    onInputChange: handleDestinationChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 11\n    }\n  }, \"Destination:\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    disable: !state.destinationTerm,\n    onClick: handlePathSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }\n  }, \"Get path\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'inline'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      float: 'right',\n      height: \"100%\",\n      position: 'absolute',\n      top: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ProSidebar, {\n    width: \"600px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    iconShape: \"square\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 15\n    }\n  }, \"Dashboard\"), /*#__PURE__*/React.createElement(SubMenu, {\n    title: \"Components\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }\n  }, \"Component 1\"), /*#__PURE__*/React.createElement(MenuItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 17\n    }\n  }, \"Component 2\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }\n  }, state.isEmpty ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }\n  }, \"Search a word\") : /*#__PURE__*/React.createElement(Graph, {\n    id: \"graph-id\" // id is mandatory, if no id is defined rd3g will throw an error\n    ,\n    data: state,\n    config: myConfig,\n    onClickNode: onClickNode,\n    onRightClickNode: onRightClickNode,\n    onClickLink: onClickLink,\n    onRightClickLink: onRightClickLink,\n    backgroundColor: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: state.showModal,\n    onAfterOpen: () => console.log(\"models was opend\"),\n    onRequestClose: closeModal,\n    style: customStyles,\n    contentLabel: \"Example Modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 11\n    }\n  }, \"I am a modal\"))));\n}\n\nconst InputWithLabel = ({\n  id,\n  type,\n  value,\n  onInputChange,\n  isFocused,\n  children\n}) => {\n  /* A component with the Input and a Label */\n  // Define an input ref for passing to input component\n  const inputRef = React.useRef(); // set up a side effect it is updates if the focus changes\n\n  React.useEffect(() => {\n    if (isFocused && inputRef.current) inputRef.current.focused();\n  }, [isFocused]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 5\n    }\n  }, \" \", children, \" \"), \"\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    id: id,\n    ref: inputRef,\n    type: type,\n    value: value,\n    onChange: onInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/telix/dictio-grapho/frontend/src/App.js"],"names":["React","Graph","myConfig","colors","Modal","ProSidebar","Menu","MenuItem","SubMenu","customStyles","content","top","left","right","bottom","marginRight","transform","API_ENDPOINT","initial_state","nodes","links","selected","isError","isWordNoTFound","isEmpty","isLoading","searchTerm","DestinationTerm","showModal","App","stateReducer","state","action","node","type","payload","link","color","filter","id","done","destinationTerm","Error","dispatchState","useReducer","processNode","title","default","handleSearchChange","change","target","value","handleDestinationChange","getNode","nodeId","isNotInState","every","requestSynonymNodes","synonyms","forEach","synonym","fetch","then","result","json","adjNode","source","catch","handleSearchSubmit","handlePathSubmit","closeModal","onClickNode","console","log","onRightClickNode","event","window","alert","onClickLink","onRightClickLink","display","float","height","position","InputWithLabel","onInputChange","isFocused","children","inputRef","useRef","useEffect","current","focused"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { Graph } from \"react-d3-graph\";\nimport { myConfig, colors }  from \"./myConfig\";\nimport Modal from 'react-modal';\nimport { ProSidebar, Menu, MenuItem, SubMenu  } from 'react-pro-sidebar';\nimport 'react-pro-sidebar/dist/css/styles.css';\n\nconst customStyles = {\n\t\tcontent : {\n\t\t\t\ttop          : '50%',\n\t\t\t\tleft         : '50%',\n\t\t\t\tright        : 'auto',\n\t\t\t\tbottom       : 'auto',\n\t\t\t\tmarginRight  : '-50%',\n\t\t\t\ttransform    : 'translate(-50%, -50%)'\n\t\t}\n};\n\nconst API_ENDPOINT = 'http://127.0.0.1:8000/api/v1/'\n\n// graph payload (with minimalist structure)\nconst initial_state = {\n\t\tnodes: [],\n\t\tlinks: [],\n\t\tselected:{},\n\t\tisError: false,\n\t\tisWordNoTFound: false,\n\t\tisEmpty: true,\n\t\tisLoading: true,\n\t\tsearchTerm: '',\n\t\tDestinationTerm: '',\n\t\tshowModal: false,\n};\n\nfunction App() {\n\t\t// make reducer for the words data and internal state \n\t\tconst stateReducer = (state, action) =>{\n\t\t\t\tlet node;\n\t\t\t\tswitch (action.type){\n\t\t\t\t\t\tcase 'SET_NEW_NODES':\n\t\t\t\t\t\t\t\treturn { \n\t\t\t\t\t\t\t\t\t\t...state, \n\t\t\t\t\t\t\t\t\t\tnodes: [ ...state.nodes, ...action.payload ],\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'SET_NEW_LINKS':\n\t\t\t\t\t\t\t\treturn { \n\t\t\t\t\t\t\t\t\t\t...state, \n\t\t\t\t\t\t\t\t\t\tlinks: [ ...state.links, ...action.payload ]\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'SET_NODE_LINK':\n\t\t\t\t\t\t\t\treturn { \n\t\t\t\t\t\t\t\t\t\t...state, \n\t\t\t\t\t\t\t\t\t\tnodes: [ ...state.nodes, action.payload.node ],\n\t\t\t\t\t\t\t\t\t\tlinks: [ ...state.links, action.payload.link ]\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'SET_STATE':\n\t\t\t\t\t\t\t\treturn { \n\t\t\t\t\t\t\t\t\t\t...state, \n\t\t\t\t\t\t\t\t\t\tnodes: [ ...state.nodes, ...action.payload.nodes ],\n\t\t\t\t\t\t\t\t\t\tlinks: [ ...state.links, ...action.payload.links ]\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'SET_SEARCH_NODE':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\t\t\tnodes: [ { ...action.payload, selected: true, color: colors.node.selected  } ],\n\t\t\t\t\t\t\t\t\t\tlinks: [],\n\t\t\t\t\t\t\t\t\t\tselected: action.payload, // save as selected\n\t\t\t\t\t\t\t\t\t\tisEmpty: false,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'SET_NODE_DONE':\n\t\t\t\t\t\t\t\tnode = state.nodes.filter( node => node.id === action.payload )[0];\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\t\t\tnodes: [ ...state.nodes, { ...node, color: colors.node.done }], \n\t\t\t\t\t\t\t\t\t\tisEmpty: false,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'ERASE_NODES':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\t\t\tnodes: [],\n\t\t\t\t\t\t\t\t\t\tlinks: [],\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'SET_SEARCH_TERM':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\t\t\tsearchTerm: action.payload,\t\t\t\t\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'SET_DEST_TERM':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\t\t\tdestinationTerm: action.payload,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'SET_NODE_SELECTED':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\t\t\tnodes: [ ...state.nodes, { ...action.payload, color: colors.node.selected }], // change color\n\t\t\t\t\t\t\t\t\t\tselected: action.payload,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'SWITCH_SELECTED_NODE':\n\t\t\t\t\t\t\t\tnode = state.nodes.filter( node => node.id === action.payload )[0];\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\t\t\tnodes: [ \n\t\t\t\t\t\t\t\t\t\t\t\t...state.nodes, \n\t\t\t\t\t\t\t\t\t\t\t\t{ ...state.selected, color: colors.node.done,  }, \n\t\t\t\t\t\t\t\t\t\t\t\t{ ...node, color: colors.node.selected },\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tselected: node,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'TOGGEL_MODAL':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\t\t\tshowModal: !state.showModal,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'SET_SHOW_MODAL':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\t\t\tshowModal: action.payload,\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\tcase 'SET_FETCH_FAILED':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\t\t\tisError: true,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tthrow new Error();\n\t\t\t\t}\n\t\t}\n\n\t\t/* define dispatcher for the Internal data */\n\t\tconst [state, dispatchState] = React.useReducer( stateReducer, initial_state );\n\n\t\tconst processNode = (node) =>{\n\t\t\t\t/* process a node from the api into one for the dispatcher\n\t\t\t\t * it changes title for id, for instance */\n\t\t\t\tnode['id'] = node.title;\n\t\t\t\tnode['isSelected'] = false;\n\t\t\t\tnode['color'] = colors.node.default;\n\t\t\t\treturn node\n\t\t}\n\n\n\t\t// handle the change by seting the state variable to \n\t\tconst handleSearchChange = change => dispatchState({ type: 'SET_SEARCH_TERM', payload: change.target.value });\n\t\t// handle the change by seting the state variable to \n\t\tconst handleDestinationChange = change => dispatchState({ type: 'SET_DEST_TERM', payload: change.target.value });\n\n\t\t// get node with given node id from state \n\t\tconst getNode = (nodeId) => state.nodes.filter( node => node.id === nodeId )[0]\n\n\t\t// attemps to return true id node is not in state\n\t\tconst isNotInState = (nodeId) => state.nodes.every( node => node.id !== nodeId )\n\n\t\tconst requestSynonymNodes = (node) => {\n\t\t\t\t/* for every node request the adjecent node to it */\n\t\t\t\tnode.synonyms.forEach(synonym => {\n\t\t\t\t\t\tif(isNotInState(synonym['synonym'])){\n\t\t\t\t\t\t\t\tfetch(API_ENDPOINT + synonym[\"synonym\"])\n\t\t\t\t\t\t\t\t\t\t.then(result => result.json())\n\t\t\t\t\t\t\t\t\t\t.then(result => processNode(result))\n\t\t\t\t\t\t\t\t\t\t.then(adjNode => {\n\t\t\t\t\t\t\t\t\t\t\t\tdispatchState({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'SET_NODE_LINK', \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpayload: { \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnode: adjNode,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlink: { \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsource: node.id ,  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarget: adjNode.id \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t.catch(() => dispatchState({type:'SET_FETCH_FAILED'}))\n\t\t\t\t\t\t}\n\t\t\t\t})\n\t\t}\n\n\t\t// handle submit search button\n\t\tconst handleSearchSubmit = () =>  {\n\t\t\t\tfetch(API_ENDPOINT + state.searchTerm)\n\t\t\t\t\t\t.then(result => result.json())\n\t\t\t\t\t\t.then(result => processNode(result))\n\t\t\t\t\t\t.then(node => { \n\t\t\t\t\t\t\t\tdispatchState({type: 'SET_SEARCH_NODE', payload: node});\n\t\t\t\t\t\t\t\treturn node;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.then(node => requestSynonymNodes(node))\n\t\t\t\t\t\t.catch(() => dispatchState({type:'SET_FETCH_FAILED'}));\n\t\t}\n\n\t\t// handle path button\n\t\tconst handlePathSubmit = () => dispatchState({ type: 'RESET_NODE' });\n\n\t\tconst closeModal = () => {\n\t\t\t\tdispatchState({type: 'SET_SHOW_MODAL', payload: false})\n\t\t}\n\n\t\tconst onClickNode = function(nodeId) {\n\t\t\t\tconsole.log(`clicked node ${nodeId}`);\n\t\t\t\trequestSynonymNodes(getNode(nodeId))\n\t\t\t\tdispatchState({type:'SWITCH_SELECTED_NODE', payload: nodeId})  \n\t\t};\n\n\t\tconst onRightClickNode = function(event, nodeId) {\n\t\t\t\twindow.alert(`Right clicked node ${nodeId}`);\n\t\t};\n\n\t\tconst onClickLink = function(source, target) {\n\t\t\t\twindow.alert(`Clicked link between ${source} and ${target}`);\n\t\t};\n\n\t\tconst onRightClickLink = function(event, source, target) {\n\t\t\t\twindow.alert(`Right clicked link between ${source} and ${target}`);\n\t\t};\n\n\t\treturn (\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<InputWithLabel id=\"search\" \n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tisFocuse \n\t\t\t\t\t\t\t\t\t\tvalue={state.searchTerm} \n\t\t\t\t\t\t\t\t\t\tonInputChange={handleSearchChange}>\n\t\t\t\t\t\t\t\t\t\t<strong>Search:</strong>\n\t\t\t\t\t\t\t\t</InputWithLabel>\n\t\t\t\t\t\t\t\t<button type=\"button\" disable={!state.searchTerm} onClick={handleSearchSubmit}>\n\t\t\t\t\t\t\t\t\t\tSearch\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div >\n\t\t\t\t\t\t\t\t<InputWithLabel id=\"destination\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\t\t\t\t\tvalue={state.destinationTerm} \n\t\t\t\t\t\t\t\t\t\tonInputChange={handleDestinationChange}>\n\t\t\t\t\t\t\t\t\t\t<strong>Destination:</strong>\n\t\t\t\t\t\t\t\t</InputWithLabel>\n\t\t\t\t\t\t\t\t<button type=\"button\" disable={!state.destinationTerm} onClick={handlePathSubmit}>\n\t\t\t\t\t\t\t\t\t\tGet path\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div style={{display: 'inline',}}>\n\t\t\t\t\t\t\t\t<div style={{ float:'right', height:\"100%\", position: 'absolute', top: '50px'}}>\n\t\t\t\t\t\t\t\t\t\t<ProSidebar \n\t\t\t\t\t\t\t\t\t\t\t\twidth='600px'\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Menu iconShape=\"square\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem>Dashboard</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<SubMenu title=\"Components\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem>Component 1</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem>Component 2</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</SubMenu>\n\t\t\t\t\t\t\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t\t\t\t\t</ProSidebar>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div >\n\t\t\t\t\t\t\t\t\t\t{ state.isEmpty? \n\t\t\t\t\t\t\t\t\t\t\t\t<p>Search a word</p> \n\t\t\t\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t\t\t<Graph\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"graph-id\" // id is mandatory, if no id is defined rd3g will throw an error\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata={state}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconfig={myConfig}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClickNode={onClickNode}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonRightClickNode={onRightClickNode}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClickLink={onClickLink}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonRightClickLink={onRightClickLink}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor={\"black\"}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\t\t\t\tisOpen={state.showModal}\n\t\t\t\t\t\t\t\t\t\tonAfterOpen={() => console.log(\"models was opend\")}\n\t\t\t\t\t\t\t\t\t\tonRequestClose={closeModal}\n\t\t\t\t\t\t\t\t\t\tstyle={customStyles}\n\t\t\t\t\t\t\t\t\t\tcontentLabel=\"Example Modal\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<div>I am a modal</div>\n\t\t\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t);\n}\n\nconst InputWithLabel = ({ id, type, value, onInputChange, isFocused, children }) => {\n\t\t/* A component with the Input and a Label */\n\t\t// Define an input ref for passing to input component\n\t\tconst inputRef = React.useRef()\n\t\t// set up a side effect it is updates if the focus changes\n\t\tReact.useEffect(() => { if(isFocused && inputRef.current) inputRef.current.focused(); }, [isFocused])\n\t\treturn <>\n\t\t\t\t<label htmlFor={id}> {children} </label>\n\t\t\t\t&nbsp;\n\t\t\t\t<input id={id} ref={inputRef} type={type} value={value} onChange={onInputChange}/>\n\t\t</>\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}