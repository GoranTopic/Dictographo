{"ast":null,"code":"var _jsxFileName = \"/home/telix/dictio-grapho/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { Graph } from \"react-d3-graph\"; // the graph configuration, you only need to pass down properties\n// that you want to override, otherwise default ones will be used\n\nconst myConfig = {\n  \"automaticRearrangeAfterDropNode\": false,\n  \"collapsible\": false,\n  \"directed\": false,\n  \"focusAnimationDuration\": 0.75,\n  \"focusZoom\": 1,\n  \"height\": 400,\n  \"highlightDegree\": 100,\n  \"highlightOpacity\": 100,\n  \"linkHighlightBehavior\": true,\n  \"maxZoom\": 10,\n  \"minZoom\": 0.1,\n  \"nodeHighlightBehavior\": true,\n  \"panAndZoom\": false,\n  \"staticGraph\": false,\n  \"staticGraphWithDragAndDrop\": false,\n  \"width\": 800,\n  \"d3\": {\n    \"alphaTarget\": 0.3,\n    \"gravity\": -150,\n    \"linkLength\": 100,\n    \"linkStrength\": 1,\n    \"disableLinkForce\": false\n  },\n  \"node\": {\n    \"color\": \"#4d0000\",\n    \"fontColor\": \"black\",\n    \"fontSize\": 8,\n    \"fontWeight\": \"normal\",\n    \"highlightColor\": \"Red\",\n    \"highlightFontSize\": 8,\n    \"highlightFontWeight\": \"normal\",\n    \"highlightStrokeColor\": \"SAME\",\n    \"highlightStrokeWidth\": \"SAME\",\n    \"labelProperty\": \"id\",\n    \"mouseCursor\": \"pointer\",\n    \"opacity\": 1,\n    \"renderLabel\": true,\n    \"size\": 200,\n    \"strokeColor\": \"none\",\n    \"strokeWidth\": 1.5,\n    \"svg\": \"\",\n    \"symbolType\": \"circle\"\n  },\n  \"link\": {\n    \"color\": \"#d3d3d3\",\n    \"fontColor\": \"black\",\n    \"fontSize\": 8,\n    \"fontWeight\": \"normal\",\n    \"highlightColor\": \"SAME\",\n    \"highlightFontSize\": 8,\n    \"highlightFontWeight\": \"normal\",\n    \"labelProperty\": \"label\",\n    \"mouseCursor\": \"pointer\",\n    \"opacity\": 1,\n    \"renderLabel\": false,\n    \"semanticStrokeWidth\": false,\n    \"strokeWidth\": 1.5,\n    \"markerHeight\": 6,\n    \"markerWidth\": 6\n  }\n};\n\nfunction App() {\n  // make reducer for the words and internal state \n  const storiesReducer = (state, action) => {\n    switch (action.type) {\n      case 'SET_FETCH_INIT':\n        return { ...state,\n          isLoading: true,\n          isError: false\n        };\n\n      case 'SET_FETCH_SUCCESS':\n        return { ...state,\n          isLoading: false,\n          isError: false,\n          data: action.payload\n        };\n\n      case 'SET_FETCH_FAILED':\n        return { ...state,\n          isLoading: false,\n          isError: true\n        };\n\n      case 'REMOVE_STORIES':\n        console.log(action.payload);\n        return { ...state,\n          data: state.data.filter(story => story.objectID !== action.payload.objectID)\n        };\n\n      default:\n        throw new Error();\n    }\n  }; // define dispatcher for the stories \n\n\n  const [stories, dispatchStories] = React.useReducer(storiesReducer, {\n    data: [],\n    IsLoading: false,\n    isError: false\n  });\n  const responce = fetch(\"https://wordprobe-wordprobe-v1.p.rapidapi.com/translate\", {\n    \"method\": \"POST\",\n    \"headers\": {\n      \"x-rapidapi-host\": \"wordprobe-wordprobe-v1.p.rapidapi.com\",\n      \"x-rapidapi-key\": \"73e5fff5cfmsh0fda3a86ebce802p1ebe6djsnb0012a807d13\",\n      \"content-type\": \"application/x-www-form-urlencoded\"\n    },\n    \"body\": {\n      \"text\": \"Hello World\"\n    }\n  }).then(response => {\n    console.log(response);\n  }).catch(err => {\n    console.log(err);\n  }); // graph payload (with minimalist structure)\n\n  const data = {\n    nodes: [{\n      id: \"Harry\"\n    }, {\n      id: \"Sally\"\n    }, {\n      id: \"Alice\"\n    }],\n    links: [{\n      source: \"Harry\",\n      target: \"Sally\"\n    }, {\n      source: \"Harry\",\n      target: \"Alice\"\n    }]\n  };\n\n  const onClickNode = function (nodeId) {};\n\n  const onRightClickNode = function (event, nodeId) {\n    window.alert(`Right clicked node ${nodeId}`);\n  };\n\n  const onClickLink = function (source, target) {\n    window.alert(`Clicked link between ${source} and ${target}`);\n  };\n\n  const onRightClickLink = function (event, source, target) {\n    window.alert(`Right clicked link between ${source} and ${target}`);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Graph, {\n    id: \"graph-id\" // id is mandatory, if no id is defined rd3g will throw an error\n    ,\n    data: data,\n    config: myConfig,\n    onClickNode: onClickNode,\n    onRightClickNode: onRightClickNode,\n    onClickLink: onClickLink,\n    onRightClickLink: onRightClickLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/telix/dictio-grapho/src/App.js"],"names":["React","Graph","myConfig","App","storiesReducer","state","action","type","isLoading","isError","data","payload","console","log","filter","story","objectID","Error","stories","dispatchStories","useReducer","IsLoading","responce","fetch","then","response","catch","err","nodes","id","links","source","target","onClickNode","nodeId","onRightClickNode","event","window","alert","onClickLink","onRightClickLink"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,KAAT,QAAsB,gBAAtB,C,CAEA;AACA;;AACA,MAAMC,QAAQ,GAAG;AACf,qCAAmC,KADpB;AAEf,iBAAe,KAFA;AAGf,cAAY,KAHG;AAIf,4BAA0B,IAJX;AAKf,eAAa,CALE;AAMf,YAAU,GANK;AAOf,qBAAmB,GAPJ;AAQf,sBAAoB,GARL;AASf,2BAAyB,IATV;AAUf,aAAW,EAVI;AAWf,aAAW,GAXI;AAYf,2BAAyB,IAZV;AAaf,gBAAc,KAbC;AAcf,iBAAe,KAdA;AAef,gCAA8B,KAff;AAgBf,WAAS,GAhBM;AAiBf,QAAM;AACJ,mBAAe,GADX;AAEJ,eAAW,CAAC,GAFR;AAGJ,kBAAc,GAHV;AAIJ,oBAAgB,CAJZ;AAKJ,wBAAoB;AALhB,GAjBS;AAwBf,UAAQ;AACN,aAAS,SADH;AAEN,iBAAa,OAFP;AAGN,gBAAY,CAHN;AAIN,kBAAc,QAJR;AAKN,sBAAkB,KALZ;AAMN,yBAAqB,CANf;AAON,2BAAuB,QAPjB;AAQN,4BAAwB,MARlB;AASN,4BAAwB,MATlB;AAUN,qBAAiB,IAVX;AAWN,mBAAe,SAXT;AAYN,eAAW,CAZL;AAaN,mBAAe,IAbT;AAcN,YAAQ,GAdF;AAeN,mBAAe,MAfT;AAgBN,mBAAe,GAhBT;AAiBN,WAAO,EAjBD;AAkBN,kBAAc;AAlBR,GAxBO;AA4Cf,UAAQ;AACN,aAAS,SADH;AAEN,iBAAa,OAFP;AAGN,gBAAY,CAHN;AAIN,kBAAc,QAJR;AAKN,sBAAkB,MALZ;AAMN,yBAAqB,CANf;AAON,2BAAuB,QAPjB;AAQN,qBAAiB,OARX;AASN,mBAAe,SATT;AAUN,eAAW,CAVL;AAWN,mBAAe,KAXT;AAYN,2BAAuB,KAZjB;AAaN,mBAAe,GAbT;AAcN,oBAAgB,CAdV;AAeN,mBAAe;AAfT;AA5CO,CAAjB;;AA+DA,SAASC,GAAT,GAAe;AAEd;AACC,QAAMC,cAAc,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAkB;AACvC,YAAQA,MAAM,CAACC,IAAf;AACE,WAAK,gBAAL;AACE,eAAO,EACL,GAAGF,KADE;AAELG,UAAAA,SAAS,EAAE,IAFN;AAGLC,UAAAA,OAAO,EAAE;AAHJ,SAAP;;AAKF,WAAK,mBAAL;AACE,eAAO,EACL,GAAGJ,KADE;AAELG,UAAAA,SAAS,EAAE,KAFN;AAGLC,UAAAA,OAAO,EAAE,KAHJ;AAILC,UAAAA,IAAI,EAAEJ,MAAM,CAACK;AAJR,SAAP;;AAMF,WAAK,kBAAL;AACE,eAAO,EACL,GAAGN,KADE;AAELG,UAAAA,SAAS,EAAE,KAFN;AAGLC,UAAAA,OAAO,EAAE;AAHJ,SAAP;;AAKF,WAAK,gBAAL;AACEG,QAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACK,OAAnB;AACA,eAAO,EACL,GAAGN,KADE;AAELK,UAAAA,IAAI,EAAEL,KAAK,CAACK,IAAN,CAAWI,MAAX,CAAmBC,KAAK,IAAIA,KAAK,CAACC,QAAN,KAAmBV,MAAM,CAACK,OAAP,CAAeK,QAA9D;AAFD,SAAP;;AAIF;AACE,cAAM,IAAIC,KAAJ,EAAN;AA3BJ;AA6BD,GA9BD,CAHa,CAmCb;;;AACA,QAAM,CAACC,OAAD,EAAUC,eAAV,IAA6BnB,KAAK,CAACoB,UAAN,CAAkBhB,cAAlB,EAAkC;AAACM,IAAAA,IAAI,EAAE,EAAP;AAAWW,IAAAA,SAAS,EAAE,KAAtB;AAA6BZ,IAAAA,OAAO,EAAE;AAAtC,GAAlC,CAAnC;AAEA,QAAMa,QAAQ,GAAGC,KAAK,CAAC,yDAAD,EAA4D;AAChF,cAAU,MADsE;AAEhF,eAAW;AACT,yBAAmB,uCADV;AAET,wBAAkB,oDAFT;AAGT,sBAAgB;AAHP,KAFqE;AAOhF,YAAQ;AACN,cAAQ;AADF;AAPwE,GAA5D,CAAL,CAUdC,IAVc,CAUTC,QAAQ,IAAI;AAChBb,IAAAA,OAAO,CAACC,GAAR,CAAYY,QAAZ;AACD,GAZc,EAadC,KAbc,CAaRC,GAAG,IAAI;AACZf,IAAAA,OAAO,CAACC,GAAR,CAAYc,GAAZ;AACD,GAfc,CAAjB,CAtCa,CAwDb;;AACA,QAAMjB,IAAI,GAAG;AACXkB,IAAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAD,EAAkB;AAAEA,MAAAA,EAAE,EAAE;AAAN,KAAlB,EAAmC;AAAEA,MAAAA,EAAE,EAAE;AAAN,KAAnC,CADI;AAEXC,IAAAA,KAAK,EAAE,CACL;AAAEC,MAAAA,MAAM,EAAE,OAAV;AAAmBC,MAAAA,MAAM,EAAE;AAA3B,KADK,EAEL;AAAED,MAAAA,MAAM,EAAE,OAAV;AAAmBC,MAAAA,MAAM,EAAE;AAA3B,KAFK;AAFI,GAAb;;AAQA,QAAMC,WAAW,GAAG,UAASC,MAAT,EAAiB,CACpC,CADD;;AAGA,QAAMC,gBAAgB,GAAG,UAASC,KAAT,EAAgBF,MAAhB,EAAwB;AAC/CG,IAAAA,MAAM,CAACC,KAAP,CAAc,sBAAqBJ,MAAO,EAA1C;AACD,GAFD;;AAIA,QAAMK,WAAW,GAAG,UAASR,MAAT,EAAiBC,MAAjB,EAAyB;AAC3CK,IAAAA,MAAM,CAACC,KAAP,CAAc,wBAAuBP,MAAO,QAAOC,MAAO,EAA1D;AACD,GAFD;;AAIA,QAAMQ,gBAAgB,GAAG,UAASJ,KAAT,EAAgBL,MAAhB,EAAwBC,MAAxB,EAAgC;AACvDK,IAAAA,MAAM,CAACC,KAAP,CAAc,8BAA6BP,MAAO,QAAOC,MAAO,EAAhE;AACD,GAFD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD;AACA,IAAA,EAAE,EAAC,UADH,CACc;AADd;AAEA,IAAA,IAAI,EAAEtB,IAFN;AAGA,IAAA,MAAM,EAAER,QAHR;AAIA,IAAA,WAAW,EAAE+B,WAJb;AAKA,IAAA,gBAAgB,EAAEE,gBALlB;AAMA,IAAA,WAAW,EAAEI,WANb;AAOA,IAAA,gBAAgB,EAAEC,gBAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF;AAaD;;AAED,eAAerC,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { Graph } from \"react-d3-graph\";\n\n// the graph configuration, you only need to pass down properties\n// that you want to override, otherwise default ones will be used\nconst myConfig = {\n\t\t\"automaticRearrangeAfterDropNode\": false,\n\t\t\"collapsible\": false,\n\t\t\"directed\": false,\n\t\t\"focusAnimationDuration\": 0.75,\n\t\t\"focusZoom\": 1,\n\t\t\"height\": 400,\n\t\t\"highlightDegree\": 100,\n\t\t\"highlightOpacity\": 100,\n\t\t\"linkHighlightBehavior\": true,\n\t\t\"maxZoom\": 10,\n\t\t\"minZoom\": 0.1,\n\t\t\"nodeHighlightBehavior\": true,\n\t\t\"panAndZoom\": false,\n\t\t\"staticGraph\": false,\n\t\t\"staticGraphWithDragAndDrop\": false,\n\t\t\"width\": 800,\n\t\t\"d3\": {\n\t\t\t\t\"alphaTarget\": 0.3,\n\t\t\t\t\"gravity\": -150,\n\t\t\t\t\"linkLength\": 100,\n\t\t\t\t\"linkStrength\": 1,\n\t\t\t\t\"disableLinkForce\": false\n\t\t},\n\t\t\"node\": {\n\t\t\t\t\"color\": \"#4d0000\",\n\t\t\t\t\"fontColor\": \"black\",\n\t\t\t\t\"fontSize\": 8,\n\t\t\t\t\"fontWeight\": \"normal\",\n\t\t\t\t\"highlightColor\": \"Red\",\n\t\t\t\t\"highlightFontSize\": 8,\n\t\t\t\t\"highlightFontWeight\": \"normal\",\n\t\t\t\t\"highlightStrokeColor\": \"SAME\",\n\t\t\t\t\"highlightStrokeWidth\": \"SAME\",\n\t\t\t\t\"labelProperty\": \"id\",\n\t\t\t\t\"mouseCursor\": \"pointer\",\n\t\t\t\t\"opacity\": 1,\n\t\t\t\t\"renderLabel\": true,\n\t\t\t\t\"size\": 200,\n\t\t\t\t\"strokeColor\": \"none\",\n\t\t\t\t\"strokeWidth\": 1.5,\n\t\t\t\t\"svg\": \"\",\n\t\t\t\t\"symbolType\": \"circle\"\n\t\t},\n\t\t\"link\": {\n\t\t\t\t\"color\": \"#d3d3d3\",\n\t\t\t\t\"fontColor\": \"black\",\n\t\t\t\t\"fontSize\": 8,\n\t\t\t\t\"fontWeight\": \"normal\",\n\t\t\t\t\"highlightColor\": \"SAME\",\n\t\t\t\t\"highlightFontSize\": 8,\n\t\t\t\t\"highlightFontWeight\": \"normal\",\n\t\t\t\t\"labelProperty\": \"label\",\n\t\t\t\t\"mouseCursor\": \"pointer\",\n\t\t\t\t\"opacity\": 1,\n\t\t\t\t\"renderLabel\": false,\n\t\t\t\t\"semanticStrokeWidth\": false,\n\t\t\t\t\"strokeWidth\": 1.5,\n\t\t\t\t\"markerHeight\": 6,\n\t\t\t\t\"markerWidth\": 6\n\t\t}\n};\n\nfunction App() {\n\n\t// make reducer for the words and internal state \n\t\tconst storiesReducer = (state, action) =>{\n\t\t\t\tswitch (action.type){\n\t\t\t\t\t\tcase 'SET_FETCH_INIT':\n\t\t\t\t\t\t\t\treturn { \n\t\t\t\t\t\t\t\t\t\t...state, \n\t\t\t\t\t\t\t\t\t\tisLoading: true,\n\t\t\t\t\t\t\t\t\t\tisError: false \n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'SET_FETCH_SUCCESS':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\t\t\tisLoading: false,\n\t\t\t\t\t\t\t\t\t\tisError: false,\n\t\t\t\t\t\t\t\t\t\tdata: action.payload,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'SET_FETCH_FAILED':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\t\t\tisLoading: false,\n\t\t\t\t\t\t\t\t\t\tisError: true,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'REMOVE_STORIES':\n\t\t\t\t\t\t\t\tconsole.log(action.payload)\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t...state, \n\t\t\t\t\t\t\t\t\t\tdata: state.data.filter( story => story.objectID !== action.payload.objectID ),\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tthrow new Error();\n\t\t\t\t}\n\t\t}\n\n\t\t// define dispatcher for the stories \n\t\tconst [stories, dispatchStories] = React.useReducer( storiesReducer, {data: [], IsLoading: false, isError: false } );\n\n\t\tconst responce = fetch(\"https://wordprobe-wordprobe-v1.p.rapidapi.com/translate\", {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"headers\": {\n\t\t\t\t\t\t\"x-rapidapi-host\": \"wordprobe-wordprobe-v1.p.rapidapi.com\",\n\t\t\t\t\t\t\"x-rapidapi-key\": \"73e5fff5cfmsh0fda3a86ebce802p1ebe6djsnb0012a807d13\",\n\t\t\t\t\t\t\"content-type\": \"application/x-www-form-urlencoded\"\n\t\t\t\t},\n\t\t\t\t\"body\": {\n\t\t\t\t\t\t\"text\": \"Hello World\"\n\t\t\t\t}\n\t\t}).then(response => {\n\t\t\t\t\t\tconsole.log(response);\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t});\n\n\n\t\t// graph payload (with minimalist structure)\n\t\tconst data = {\n\t\t\t\tnodes: [{ id: \"Harry\" }, { id: \"Sally\" }, { id: \"Alice\" }],\n\t\t\t\tlinks: [\n\t\t\t\t\t\t{ source: \"Harry\", target: \"Sally\" },\n\t\t\t\t\t\t{ source: \"Harry\", target: \"Alice\" },\n\t\t\t\t],\n\t\t};\n\n\t\tconst onClickNode = function(nodeId) {\n\t\t};\n\n\t\tconst onRightClickNode = function(event, nodeId) {\n\t\t\t\twindow.alert(`Right clicked node ${nodeId}`);\n\t\t};\n\n\t\tconst onClickLink = function(source, target) {\n\t\t\t\twindow.alert(`Clicked link between ${source} and ${target}`);\n\t\t};\n\n\t\tconst onRightClickLink = function(event, source, target) {\n\t\t\t\twindow.alert(`Right clicked link between ${source} and ${target}`);\n\t\t};\n\n\n\n\n\t\treturn (\n\t\t\t\t<div className=\"App\">\n\t\t\t\t<Graph\n\t\t\t\tid=\"graph-id\" // id is mandatory, if no id is defined rd3g will throw an error\n\t\t\t\tdata={data}\n\t\t\t\tconfig={myConfig}\n\t\t\t\tonClickNode={onClickNode}\n\t\t\t\tonRightClickNode={onRightClickNode}\n\t\t\t\tonClickLink={onClickLink}\n\t\t\t\tonRightClickLink={onRightClickLink}\n\t\t\t\t/>\n\t\t\t\t</div>\n\t\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}