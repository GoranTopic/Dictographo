{"ast":null,"code":"var _jsxFileName = \"/home/telix/dictographo/frontend/src/Components/Graph/d3Switcher.js\";\nimport React, { useEffect } from 'react';\nimport { Graph } from \"react-d3-graph\";\nimport { onClickNode } from '../node_functions';\nimport { graphConfig } from \"../myConfig\";\n/*\n * ==================================================================\n *      Graph d3 Componente to make switching from 2d to d3 possible \n * ==================================================================\n */\n\nfunction d3Switcher({\n  state,\n  dispatchState\n}) {\n  // it it is switching from graphs\n  const isSwitching = state.graphType !== state.prevGraphType;\n  /*\n  useEffect(() => {  \n  \t\tif(isSwitching){\n  \t\t\t\tdispatchState({type: 'SET_LINKS', payload: })\n  \t\t}\n  \t}, []);\n  \t*/\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isSwitching ?\n  /*#__PURE__*/\n  //if ti is switching from an other type graph\n  React.createElement(Graph, {\n    id: \"graph-id\" // id is mandatory, \n    // if no id is defined rd3g will throw an error\n    ,\n    data: { ...state,\n      links: []\n    },\n    config: graphConfig,\n    onClickNode: handleClick,\n    backgroundColor: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }) : /*#__PURE__*/React.createElement(Graph // if it is not\n  , {\n    id: \"graph-id\" // id is mandatory, \n    // if no id is defined rd3g will throw an error\n    ,\n    data: state,\n    config: graphConfig,\n    onClickNode: handleClick,\n    backgroundColor: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default d3Switcher;","map":{"version":3,"sources":["/home/telix/dictographo/frontend/src/Components/Graph/d3Switcher.js"],"names":["React","useEffect","Graph","onClickNode","graphConfig","d3Switcher","state","dispatchState","isSwitching","graphType","prevGraphType","links","handleClick"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA+B,OAA/B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,WAAT,QAA6B,aAA7B;AAEA;;;;;;AAOA,SAASC,UAAT,CAAoB;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAApB,EAA2C;AAEzC;AACA,QAAMC,WAAW,GAAIF,KAAK,CAACG,SAAN,KAAoBH,KAAK,CAACI,aAA/C;AAEA;;;;;;;;AASA,sBACE,0CACIF,WAAD;AAAA;AAAe;AAChB,sBAAC,KAAD;AACE,IAAA,EAAE,EAAC,UADL,CAEE;AACA;AAHF;AAIE,IAAA,IAAI,EAAE,EAAC,GAAGF,KAAJ;AAAWK,MAAAA,KAAK,EAAC;AAAjB,KAJR;AAKE,IAAA,MAAM,EAAEP,WALV;AAME,IAAA,WAAW,EAAEQ,WANf;AAOE,IAAA,eAAe,EAAC,OAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,gBAWD,oBAAC,KAAD,CAAO;AAAP;AACE,IAAA,EAAE,EAAC,UADL,CAEE;AACA;AAHF;AAIE,IAAA,IAAI,EAAEN,KAJR;AAKE,IAAA,MAAM,EAAEF,WALV;AAME,IAAA,WAAW,EAAEQ,WANf;AAOE,IAAA,eAAe,EAAC,OAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AA4BD;;AACD,eAAeP,UAAf","sourcesContent":["import React,{useEffect}  from 'react';\nimport { Graph } from \"react-d3-graph\";\nimport { onClickNode } from '../node_functions';\nimport { graphConfig }  from \"../myConfig\";\n\n/*\n * ==================================================================\n *      Graph d3 Componente to make switching from 2d to d3 possible \n * ==================================================================\n */\n\n\nfunction d3Switcher({state, dispatchState}){\n\n\t\t// it it is switching from graphs\n\t\tconst isSwitching =  state.graphType !== state.prevGraphType ;\n\n\t\t/*\n\t\tuseEffect(() => {  \n\t\t\t\tif(isSwitching){\n\t\t\t\t\t\tdispatchState({type: 'SET_LINKS', payload: })\n\t\t\t\t}\n\t\t\t}, []);\n\t\t\t*/\n\n\n\t\treturn( \n\t\t\t\t<>\n\t\t\t\t\t\t{(isSwitching)? //if ti is switching from an other type graph\n\t\t\t\t\t\t<Graph  \n\t\t\t\t\t\t\t\tid=\"graph-id\" \n\t\t\t\t\t\t\t\t// id is mandatory, \n\t\t\t\t\t\t\t\t// if no id is defined rd3g will throw an error\n\t\t\t\t\t\t\t\tdata={{...state, links:[]}}\n\t\t\t\t\t\t\t\tconfig={graphConfig}\n\t\t\t\t\t\t\t\tonClickNode={handleClick}\n\t\t\t\t\t\t\t\tbackgroundColor=\"black\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<Graph // if it is not\n\t\t\t\t\t\t\t\tid=\"graph-id\" \n\t\t\t\t\t\t\t\t// id is mandatory, \n\t\t\t\t\t\t\t\t// if no id is defined rd3g will throw an error\n\t\t\t\t\t\t\t\tdata={state}\n\t\t\t\t\t\t\t\tconfig={graphConfig}\n\t\t\t\t\t\t\t\tonClickNode={handleClick}\n\t\t\t\t\t\t\t\tbackgroundColor=\"black\"\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t}\n\n\t\t\t\t</>\n\n\t\t)\n}\nexport default d3Switcher;\n"]},"metadata":{},"sourceType":"module"}