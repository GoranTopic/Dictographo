{"ast":null,"code":"var _jsxFileName = \"/home/telix/dictographo/frontend/src/Components/Alert.js\";\nimport React from 'react';\nimport { Alert } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n/*\n * =======================================\n *      Alert Component for React \n * =======================================\n * \tUsing ReaactBootStrap to render the the alert\n */\n\nfunction AlertContainer({\n  state,\n  dispatchState\n}) {\n  if (state.isError) {\n    return /*#__PURE__*/React.createElement(Alert, {\n      variant: \"danger\",\n      dismissible: true,\n      onClose: () => dispatchState({\n        type: 'DISSMISS_NOT_ERROR'\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Alert.Heading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, \"Oh snap!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    }, \"Looks like  \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 26\n      }\n    }, state.wordsNotFound.map(word => /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 47\n      }\n    }, \"\\\"\", word, \",\\\"\"))), \"in our dictionary yet.\"));\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n}\n\nexport default AlertContainer;","map":{"version":3,"sources":["/home/telix/dictographo/frontend/src/Components/Alert.js"],"names":["React","Alert","AlertContainer","state","dispatchState","isError","type","wordsNotFound","map","word"],"mappings":";AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,OAAO,sCAAP;AAEA;;;;;;;AAOA,SAASC,cAAT,CAAwB;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAxB,EAAgD;AAC9C,MAAID,KAAK,CAACE,OAAV,EAAmB;AACjB,wBACE,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,QAAf;AAAwB,MAAA,WAAW,MAAnC;AACE,MAAA,OAAO,EAAE,MAAMD,aAAa,CAAC;AAACE,QAAAA,IAAI,EAAE;AAAP,OAAD,CAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACXH,KAAK,CAACI,aAAN,CAAoBC,GAApB,CAAwBC,IAAI,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKA,IAAL,QAAhC,CADW,CAAf,2BAHJ,CADF;AAUC,GAXH,MAWO;AACH,wBAAO,yCAAP;AACD;AACJ;;AAED,eAAeP,cAAf","sourcesContent":["import React  from 'react';\nimport { Alert } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n/*\n * =======================================\n *      Alert Component for React \n * =======================================\n * \tUsing ReaactBootStrap to render the the alert\n */\n\nfunction AlertContainer({state, dispatchState}) {\n\t\tif (state.isError) {\n\t\t\t\treturn (\n\t\t\t\t\t\t<Alert variant=\"danger\" dismissible \n\t\t\t\t\t\t\t\tonClose={() => dispatchState({type: 'DISSMISS_NOT_ERROR'})} >\n\t\t\t\t\t\t\t\t<Alert.Heading>Oh snap!</Alert.Heading>\n\t\t\t\t\t\t\t\t\t\t<p>Looks like  <b>\n\t\t\t\t\t\t\t\t\t\t\t\t{ state.wordsNotFound.map(word => <i>\"{word},\"</i> ) }\n\t\t\t\t\t\t\t\t\t\t</b>in our dictionary yet.</p> \n\n\t\t\t\t\t\t</Alert>\n\t\t\t\t);\n\t\t\t\t}else{\n\t\t\t\t\t\treturn <></>\n\t\t\t\t}\n}\n\nexport default AlertContainer;\n\n"]},"metadata":{},"sourceType":"module"}