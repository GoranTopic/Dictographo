{"ast":null,"code":"var _jsxFileName = \"/home/telix/dictio-grapho/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { Graph } from \"react-d3-graph\"; // graph payload (with minimalist structure)\n\nconst data = {\n  nodes: [{\n    id: \"Harry\"\n  }, {\n    id: \"Sally\"\n  }, {\n    id: \"Alice\"\n  }],\n  links: [{\n    source: \"Harry\",\n    target: \"Sally\"\n  }, {\n    source: \"Harry\",\n    target: \"Alice\"\n  }]\n}; // the graph configuration, you only need to pass down properties\n// that you want to override, otherwise default ones will be used\n\nconst myConfig = {\n  \"automaticRearrangeAfterDropNode\": false,\n  \"collapsible\": false,\n  \"directed\": false,\n  \"focusAnimationDuration\": 0.75,\n  \"focusZoom\": 1,\n  \"height\": 400,\n  \"highlightDegree\": 100,\n  \"highlightOpacity\": 100,\n  \"linkHighlightBehavior\": true,\n  \"maxZoom\": 10,\n  \"minZoom\": 0.1,\n  \"nodeHighlightBehavior\": true,\n  \"panAndZoom\": false,\n  \"staticGraph\": false,\n  \"staticGraphWithDragAndDrop\": false,\n  \"width\": 800,\n  \"d3\": {\n    \"alphaTarget\": 0.3,\n    \"gravity\": -150,\n    \"linkLength\": 100,\n    \"linkStrength\": 1,\n    \"disableLinkForce\": false\n  },\n  \"node\": {\n    \"color\": \"#4d0000\",\n    \"fontColor\": \"black\",\n    \"fontSize\": 8,\n    \"fontWeight\": \"normal\",\n    \"highlightColor\": \"Red\",\n    \"highlightFontSize\": 8,\n    \"highlightFontWeight\": \"normal\",\n    \"highlightStrokeColor\": \"SAME\",\n    \"highlightStrokeWidth\": \"SAME\",\n    \"labelProperty\": \"id\",\n    \"mouseCursor\": \"pointer\",\n    \"opacity\": 1,\n    \"renderLabel\": true,\n    \"size\": 200,\n    \"strokeColor\": \"none\",\n    \"strokeWidth\": 1.5,\n    \"svg\": \"\",\n    \"symbolType\": \"circle\"\n  },\n  \"link\": {\n    \"color\": \"#d3d3d3\",\n    \"fontColor\": \"black\",\n    \"fontSize\": 8,\n    \"fontWeight\": \"normal\",\n    \"highlightColor\": \"SAME\",\n    \"highlightFontSize\": 8,\n    \"highlightFontWeight\": \"normal\",\n    \"labelProperty\": \"label\",\n    \"mouseCursor\": \"pointer\",\n    \"opacity\": 1,\n    \"renderLabel\": false,\n    \"semanticStrokeWidth\": false,\n    \"strokeWidth\": 1.5,\n    \"markerHeight\": 6,\n    \"markerWidth\": 6\n  }\n};\n\nconst onClickNode = function (nodeId) {};\n\nconst onRightClickNode = function (event, nodeId) {\n  window.alert(`Right clicked node ${nodeId}`);\n};\n\nconst onClickLink = function (source, target) {\n  window.alert(`Clicked link between ${source} and ${target}`);\n};\n\nconst onRightClickLink = function (event, source, target) {\n  window.alert(`Right clicked link between ${source} and ${target}`);\n};\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Graph, {\n    id: \"graph-id\" // id is mandatory, if no id is defined rd3g will throw an error\n    ,\n    data: data,\n    config: myConfig,\n    onClickNode: onClickNode,\n    onRightClickNode: onRightClickNode,\n    onClickLink: onClickLink,\n    onRightClickLink: onRightClickLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 6\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/telix/dictio-grapho/src/App.js"],"names":["React","Graph","data","nodes","id","links","source","target","myConfig","onClickNode","nodeId","onRightClickNode","event","window","alert","onClickLink","onRightClickLink","App"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { Graph } from \"react-d3-graph\";\n\n// graph payload (with minimalist structure)\nconst data = {\n\t\tnodes: [{ id: \"Harry\" }, { id: \"Sally\" }, { id: \"Alice\" }],\n\t\tlinks: [\n\t\t\t\t{ source: \"Harry\", target: \"Sally\" },\n\t\t\t\t{ source: \"Harry\", target: \"Alice\" },\n\t\t],\n};\n\n\n// the graph configuration, you only need to pass down properties\n// that you want to override, otherwise default ones will be used\nconst myConfig = {\n\t\t\t\t  \"automaticRearrangeAfterDropNode\": false,\n\t\t\t\t  \"collapsible\": false,\n\t\t\t\t  \"directed\": false,\n\t\t\t\t  \"focusAnimationDuration\": 0.75,\n\t\t\t\t  \"focusZoom\": 1,\n\t\t\t\t  \"height\": 400,\n\t\t\t\t  \"highlightDegree\": 100,\n\t\t\t\t  \"highlightOpacity\": 100,\n\t\t\t\t  \"linkHighlightBehavior\": true,\n\t\t\t\t  \"maxZoom\": 10,\n\t\t\t\t  \"minZoom\": 0.1,\n\t\t\t\t  \"nodeHighlightBehavior\": true,\n\t\t\t\t  \"panAndZoom\": false,\n\t\t\t\t  \"staticGraph\": false,\n\t\t\t\t  \"staticGraphWithDragAndDrop\": false,\n\t\t\t\t  \"width\": 800,\n\t\t\t\t  \"d3\": {\n\t\t\t\t\t\t\t    \"alphaTarget\": 0.3,\n\t\t\t\t\t\t\t    \"gravity\": -150,\n\t\t\t\t\t\t\t    \"linkLength\": 100,\n\t\t\t\t\t\t\t    \"linkStrength\": 1,\n\t\t\t\t\t\t\t    \"disableLinkForce\": false\n\t\t\t\t\t\t\t  },\n\t\t\t\t  \"node\": {\n\t\t\t\t\t\t\t    \"color\": \"#4d0000\",\n\t\t\t\t\t\t\t    \"fontColor\": \"black\",\n\t\t\t\t\t\t\t    \"fontSize\": 8,\n\t\t\t\t\t\t\t    \"fontWeight\": \"normal\",\n\t\t\t\t\t\t\t    \"highlightColor\": \"Red\",\n\t\t\t\t\t\t\t    \"highlightFontSize\": 8,\n\t\t\t\t\t\t\t    \"highlightFontWeight\": \"normal\",\n\t\t\t\t\t\t\t    \"highlightStrokeColor\": \"SAME\",\n\t\t\t\t\t\t\t    \"highlightStrokeWidth\": \"SAME\",\n\t\t\t\t\t\t\t    \"labelProperty\": \"id\",\n\t\t\t\t\t\t\t    \"mouseCursor\": \"pointer\",\n\t\t\t\t\t\t\t    \"opacity\": 1,\n\t\t\t\t\t\t\t    \"renderLabel\": true,\n\t\t\t\t\t\t\t    \"size\": 200,\n\t\t\t\t\t\t\t    \"strokeColor\": \"none\",\n\t\t\t\t\t\t\t    \"strokeWidth\": 1.5,\n\t\t\t\t\t\t\t    \"svg\": \"\",\n\t\t\t\t\t\t\t    \"symbolType\": \"circle\"\n\t\t\t\t\t\t\t  },\n\t\t\t\t  \"link\": {\n\t\t\t\t\t\t\t    \"color\": \"#d3d3d3\",\n\t\t\t\t\t\t\t    \"fontColor\": \"black\",\n\t\t\t\t\t\t\t    \"fontSize\": 8,\n\t\t\t\t\t\t\t    \"fontWeight\": \"normal\",\n\t\t\t\t\t\t\t    \"highlightColor\": \"SAME\",\n\t\t\t\t\t\t\t    \"highlightFontSize\": 8,\n\t\t\t\t\t\t\t    \"highlightFontWeight\": \"normal\",\n\t\t\t\t\t\t\t    \"labelProperty\": \"label\",\n\t\t\t\t\t\t\t    \"mouseCursor\": \"pointer\",\n\t\t\t\t\t\t\t    \"opacity\": 1,\n\t\t\t\t\t\t\t    \"renderLabel\": false,\n\t\t\t\t\t\t\t    \"semanticStrokeWidth\": false,\n\t\t\t\t\t\t\t    \"strokeWidth\": 1.5,\n\t\t\t\t\t\t\t    \"markerHeight\": 6,\n\t\t\t\t\t\t\t    \"markerWidth\": 6\n\t\t\t\t\t\t\t  }\n\t\t};\n\nconst onClickNode = function(nodeId) {\n};\n\n\nconst onRightClickNode = function(event, nodeId) {\n\t\twindow.alert(`Right clicked node ${nodeId}`);\n};\n\nconst onClickLink = function(source, target) {\n\t\twindow.alert(`Clicked link between ${source} and ${target}`);\n};\n\nconst onRightClickLink = function(event, source, target) {\n\t\twindow.alert(`Right clicked link between ${source} and ${target}`);\n};\n\n\n\n\nfunction App() {\n\t\treturn (\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<Graph\n\t\t\t\t\t\tid=\"graph-id\" // id is mandatory, if no id is defined rd3g will throw an error\n\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\tconfig={myConfig}\n\t\t\t\t\t\tonClickNode={onClickNode}\n\t\t\t\t\t\tonRightClickNode={onRightClickNode}\n\t\t\t\t\t\tonClickLink={onClickLink}\n\t\t\t\t\t\tonRightClickLink={onRightClickLink}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}