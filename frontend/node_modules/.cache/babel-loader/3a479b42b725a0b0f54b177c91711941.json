{"ast":null,"code":"var _jsxFileName = \"/home/telix/dictio-grapho/frontend/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { Graph } from \"react-d3-graph\";\nimport myConfig from \"./myConfig\";\nconst API_ENDPOINT = 'http://127.0.0.1:8000/api/v1/'; // graph payload (with minimalist structure)\n\nconst initial_state = {\n  nodes: [{\n    id: \"zine\",\n    synonyms: [{\n      synonym: 'anxious'\n    }]\n  }, {\n    id: \"cool\",\n    synonyms: [{\n      synonym: 'anxious'\n    }]\n  }, {\n    id: \"world\",\n    synonyms: []\n  }],\n  links: [{\n    source: \"zine\",\n    target: \"cool\"\n  }, {\n    source: \"zine\",\n    target: \"world\"\n  }],\n  isError: false,\n  isLoading: true,\n  searchTerm: '',\n  DestinationTerm: ''\n};\n\nfunction App() {\n  // make reducer for the words data and internal state \n  const stateReducer = (state, action) => {\n    switch (action.type) {\n      case 'SET_NEW_NODES':\n        return { ...state,\n          nodes: [...state.nodes, ...action.payload]\n        };\n\n      case 'SET_NEW_LINKS':\n        return { ...state,\n          links: [...state.links, ...action.payload]\n        };\n\n      case 'SET_STATE':\n        return { ...state,\n          nodes: [...state.nodes, ...action.payload.nodes],\n          links: [...state.links, ...action.payload.links]\n        };\n\n      case 'SET_SEARCH_NODE':\n        return { ...state,\n          nodes: [action.payload],\n          links: []\n        };\n\n      case 'ERASE_NODES':\n        return { ...state,\n          nodes: [],\n          links: []\n        };\n\n      case 'SET_SEARCH_TERM':\n        return { ...state,\n          searchTerm: action.payload\n        };\n\n      case 'SET_DEST_TERM':\n        return { ...state,\n          destinationTerm: action.payload\n        };\n\n      case 'SET_FETCH_FAILED':\n        return { ...state,\n          isError: true\n        };\n\n      default:\n        throw new Error();\n    }\n  };\n  /* define dispatcher for the Internal data */\n\n\n  const [state, dispatchState] = React.useReducer(stateReducer, initial_state);\n\n  const processNode = node => {\n    /* process a node from the api into one for the dispatcher\n     * it changes title for id, for instance */\n    node['id'] = node.title;\n    return node;\n  }; // handle the change by seting the state variable to \n\n\n  const handleSearchChange = change => dispatchState({\n    type: 'SET_SEARCH_TERM',\n    payload: change.target.value\n  }); // handle the change by seting the state variable to \n\n\n  const handleDestinationChange = change => dispatchState({\n    type: 'SET_DEST_TERM',\n    payload: change.target.value\n  }); // handle submit search button\n\n\n  const handleSearchSubmit = () => {}; // handle path button\n\n\n  const handlePathSubmit = () => dispatchState({\n    type: 'RESET_NODE'\n  });\n\n  const onClickNode = function (nodeId) {\n    console.log(`clicked node ${nodeId}`);\n  };\n\n  const onRightClickNode = function (event, nodeId) {\n    window.alert(`Right clicked node ${nodeId}`);\n  };\n\n  const onClickLink = function (source, target) {\n    window.alert(`Clicked link between ${source} and ${target}`);\n  };\n\n  const onRightClickLink = function (event, source, target) {\n    window.alert(`Right clicked link between ${source} and ${target}`);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputWithLabel, {\n    id: \"search\",\n    type: \"text\",\n    isFocuse: true,\n    value: state.searchTerm,\n    onInputChange: handleSearchChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, \"Search:\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    disable: !state.searchTerm,\n    onClick: handleSearchSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, \"Search\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: requestNode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, \"Add random Nodes\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputWithLabel, {\n    id: \"destination\",\n    type: \"text\",\n    value: state.destinationTerm,\n    onInputChange: handleDestinationChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, \"Destination:\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    disable: !state.destinationTerm,\n    onClick: handlePathSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, \"Get path\")), /*#__PURE__*/React.createElement(Graph, {\n    id: \"graph-id\" // id is mandatory, if no id is defined rd3g will throw an error\n    ,\n    data: state,\n    config: myConfig,\n    onClickNode: onClickNode,\n    onRightClickNode: onRightClickNode,\n    onClickLink: onClickLink,\n    onRightClickLink: onRightClickLink,\n    backgroundColor: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }));\n}\n\nconst InputWithLabel = ({\n  id,\n  type,\n  value,\n  onInputChange,\n  isFocused,\n  children\n}) => {\n  /* A component with the Input and a Label */\n  // Define an input ref for passing to input component\n  const inputRef = React.useRef(); // set up a side effect it is updates if the focus changes\n\n  React.useEffect(() => {\n    if (isFocused && inputRef.current) inputRef.current.focused();\n  }, [isFocused]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }\n  }, \" \", children, \" \"), \"\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    id: id,\n    ref: inputRef,\n    type: type,\n    value: value,\n    onChange: onInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/telix/dictio-grapho/frontend/src/App.js"],"names":["React","Graph","myConfig","API_ENDPOINT","initial_state","nodes","id","synonyms","synonym","links","source","target","isError","isLoading","searchTerm","DestinationTerm","App","stateReducer","state","action","type","payload","destinationTerm","Error","dispatchState","useReducer","processNode","node","title","handleSearchChange","change","value","handleDestinationChange","handleSearchSubmit","handlePathSubmit","onClickNode","nodeId","console","log","onRightClickNode","event","window","alert","onClickLink","onRightClickLink","requestNode","InputWithLabel","onInputChange","isFocused","children","inputRef","useRef","useEffect","current","focused"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { Graph } from \"react-d3-graph\";\nimport  myConfig  from \"./myConfig\";\nconst API_ENDPOINT = 'http://127.0.0.1:8000/api/v1/'\n\n// graph payload (with minimalist structure)\nconst initial_state = {\n\t\tnodes: [{ id: \"zine\", synonyms:[ {synonym: 'anxious'}, ] }, { id: \"cool\", synonyms:[ {synonym: 'anxious'}, ]}, { id: \"world\", synonyms:[]}],\n\t\tlinks: [\n\t\t\t\t{ source: \"zine\", target: \"cool\" },\n\t\t\t\t{ source: \"zine\", target: \"world\"},\n\t\t],\n\t\tisError: false,\n\t\tisLoading: true,\n\t\tsearchTerm: '',\n\t\tDestinationTerm: '',\n};\n\nfunction App() {\n\t\t// make reducer for the words data and internal state \n\t\tconst stateReducer = (state, action) =>{\n\t\t\t\tswitch (action.type){\n\t\t\t\t\t\tcase 'SET_NEW_NODES':\n\t\t\t\t\t\t\t\treturn { \n\t\t\t\t\t\t\t\t\t\t...state, \n\t\t\t\t\t\t\t\t\t\tnodes: [ ...state.nodes, ...action.payload ],\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'SET_NEW_LINKS':\n\t\t\t\t\t\t\t\treturn { \n\t\t\t\t\t\t\t\t\t\t...state, \n\t\t\t\t\t\t\t\t\t\tlinks: [ ...state.links, ...action.payload ]\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'SET_STATE':\n\t\t\t\t\t\t\t\treturn { \n\t\t\t\t\t\t\t\t\t\t...state, \n\t\t\t\t\t\t\t\t\t\tnodes: [ ...state.nodes, ...action.payload.nodes ],\n\t\t\t\t\t\t\t\t\t\tlinks: [ ...state.links, ...action.payload.links ]\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'SET_SEARCH_NODE':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\t\t\tnodes: [ action.payload ],\n\t\t\t\t\t\t\t\t\t\tlinks: [],\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'ERASE_NODES':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\t\t\tnodes: [],\n\t\t\t\t\t\t\t\t\t\tlinks: [],\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'SET_SEARCH_TERM':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\t\t\tsearchTerm: action.payload,\t\t\t\t\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'SET_DEST_TERM':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\t\t\tdestinationTerm: action.payload,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'SET_FETCH_FAILED':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\t\t\tisError: true,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tthrow new Error();\n\t\t\t\t}\n\t\t}\n\n\t\t/* define dispatcher for the Internal data */\n\t\tconst [state, dispatchState] = React.useReducer( stateReducer, initial_state );\n\n\t\tconst processNode = (node) =>{\n\t\t\t\t/* process a node from the api into one for the dispatcher\n\t\t\t\t * it changes title for id, for instance */\n\t\t\t\tnode['id'] = node.title\n\t\t\t\treturn node\n\t\t}\n\t\t\n\t\t\n\n\t\t\n\t\t// handle the change by seting the state variable to \n\t\tconst handleSearchChange = change => dispatchState({ type: 'SET_SEARCH_TERM', payload: change.target.value });\n\t\t// handle the change by seting the state variable to \n\t\tconst handleDestinationChange = change => dispatchState({ type: 'SET_DEST_TERM', payload: change.target.value });\n\n\t\t// handle submit search button\n\t\tconst handleSearchSubmit = () =>  {\n\n\t\t}\n\n\t\t// handle path button\n\t\tconst handlePathSubmit = () => dispatchState({ type: 'RESET_NODE' });\n\n\t\tconst onClickNode = function(nodeId) {\n\t\t\t\tconsole.log(`clicked node ${nodeId}`);\n\t\t};\n\n\t\tconst onRightClickNode = function(event, nodeId) {\n\t\t\t\twindow.alert(`Right clicked node ${nodeId}`);\n\t\t};\n\n\t\tconst onClickLink = function(source, target) {\n\t\t\t\twindow.alert(`Clicked link between ${source} and ${target}`);\n\t\t};\n\n\t\tconst onRightClickLink = function(event, source, target) {\n\t\t\t\twindow.alert(`Right clicked link between ${source} and ${target}`);\n\t\t};\n\n\t\treturn (\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<InputWithLabel id=\"search\" type=\"text\" isFocuse value={state.searchTerm} onInputChange={handleSearchChange}>\n\t\t\t\t\t\t\t\t\t\t<strong>Search:</strong>\n\t\t\t\t\t\t\t\t</InputWithLabel>\n\t\t\t\t\t\t\t\t<button type=\"button\" disable={!state.searchTerm} onClick={handleSearchSubmit}>\n\t\t\t\t\t\t\t\t\t\tSearch\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button type=\"button\" onClick={requestNode}>\n\t\t\t\t\t\t\t\t\t\tAdd random Nodes\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<InputWithLabel id=\"destination\" type=\"text\" value={state.destinationTerm} onInputChange={handleDestinationChange}>\n\t\t\t\t\t\t\t\t\t\t<strong>Destination:</strong>\n\t\t\t\t\t\t\t\t</InputWithLabel>\n\t\t\t\t\t\t\t\t<button type=\"button\" disable={!state.destinationTerm} onClick={handlePathSubmit}>\n\t\t\t\t\t\t\t\t\t\tGet path\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Graph\n\t\t\t\t\t\t\t\tid=\"graph-id\" // id is mandatory, if no id is defined rd3g will throw an error\n\t\t\t\t\t\t\t\tdata={state}\n\t\t\t\t\t\t\t\tconfig={myConfig}\n\t\t\t\t\t\t\t\tonClickNode={onClickNode}\n\t\t\t\t\t\t\t\tonRightClickNode={onRightClickNode}\n\t\t\t\t\t\t\t\tonClickLink={onClickLink}\n\t\t\t\t\t\t\t\tonRightClickLink={onRightClickLink}\n\t\t\t\t\t\t\t\tbackgroundColor={\"black\"}\n\t\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t);\n}\n\nconst InputWithLabel = ({ id, type, value, onInputChange, isFocused, children }) => {\n\t\t/* A component with the Input and a Label */\n\t\t// Define an input ref for passing to input component\n\t\tconst inputRef = React.useRef()\n\t\t// set up a side effect it is updates if the focus changes\n\t\tReact.useEffect(() => { if(isFocused && inputRef.current) inputRef.current.focused(); }, [isFocused])\n\t\treturn <>\n\t\t\t\t<label htmlFor={id}> {children} </label>\n\t\t\t\t&nbsp;\n\t\t\t\t<input id={id} ref={inputRef} type={type} value={value} onChange={onInputChange}/>\n\t\t</>\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}