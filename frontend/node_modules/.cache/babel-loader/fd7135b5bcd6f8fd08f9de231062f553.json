{"ast":null,"code":"import { EventDispatcher, Matrix4, Plane, Raycaster, Vector2, Vector3 } from \"../../../build/three.module.js\";\n\nvar DragControls = function (_objects, _camera, _domElement) {\n  var _plane = new Plane();\n\n  var _raycaster = new Raycaster();\n\n  var _mouse = new Vector2();\n\n  var _offset = new Vector3();\n\n  var _intersection = new Vector3();\n\n  var _worldPosition = new Vector3();\n\n  var _inverseMatrix = new Matrix4();\n\n  var _intersections = [];\n  var _selected = null,\n      _hovered = null; //\n\n  var scope = this;\n\n  function activate() {\n    _domElement.addEventListener('pointermove', onPointerMove, false);\n\n    _domElement.addEventListener('pointerdown', onPointerDown, false);\n\n    _domElement.addEventListener('pointerup', onPointerCancel, false);\n\n    _domElement.addEventListener('pointerleave', onPointerCancel, false);\n\n    _domElement.addEventListener('touchmove', onTouchMove, false);\n\n    _domElement.addEventListener('touchstart', onTouchStart, false);\n\n    _domElement.addEventListener('touchend', onTouchEnd, false);\n  }\n\n  function deactivate() {\n    _domElement.removeEventListener('pointermove', onPointerMove, false);\n\n    _domElement.removeEventListener('pointerdown', onPointerDown, false);\n\n    _domElement.removeEventListener('pointerup', onPointerCancel, false);\n\n    _domElement.removeEventListener('pointerleave', onPointerCancel, false);\n\n    _domElement.removeEventListener('touchmove', onTouchMove, false);\n\n    _domElement.removeEventListener('touchstart', onTouchStart, false);\n\n    _domElement.removeEventListener('touchend', onTouchEnd, false);\n\n    _domElement.style.cursor = '';\n  }\n\n  function dispose() {\n    deactivate();\n  }\n\n  function getObjects() {\n    return _objects;\n  }\n\n  function onPointerMove(event) {\n    event.preventDefault();\n\n    switch (event.pointerType) {\n      case 'mouse':\n      case 'pen':\n        onMouseMove(event);\n        break;\n      // TODO touch\n    }\n  }\n\n  function onMouseMove(event) {\n    var rect = _domElement.getBoundingClientRect();\n\n    _mouse.x = (event.clientX - rect.left) / rect.width * 2 - 1;\n    _mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n    _raycaster.setFromCamera(_mouse, _camera);\n\n    if (_selected && scope.enabled) {\n      if (_raycaster.ray.intersectPlane(_plane, _intersection)) {\n        _selected.position.copy(_intersection.sub(_offset).applyMatrix4(_inverseMatrix));\n      }\n\n      scope.dispatchEvent({\n        type: 'drag',\n        object: _selected\n      });\n      return;\n    }\n\n    _intersections.length = 0;\n\n    _raycaster.setFromCamera(_mouse, _camera);\n\n    _raycaster.intersectObjects(_objects, true, _intersections);\n\n    if (_intersections.length > 0) {\n      var object = _intersections[0].object;\n\n      _plane.setFromNormalAndCoplanarPoint(_camera.getWorldDirection(_plane.normal), _worldPosition.setFromMatrixPosition(object.matrixWorld));\n\n      if (_hovered !== object) {\n        scope.dispatchEvent({\n          type: 'hoveron',\n          object: object\n        });\n        _domElement.style.cursor = 'pointer';\n        _hovered = object;\n      }\n    } else {\n      if (_hovered !== null) {\n        scope.dispatchEvent({\n          type: 'hoveroff',\n          object: _hovered\n        });\n        _domElement.style.cursor = 'auto';\n        _hovered = null;\n      }\n    }\n  }\n\n  function onPointerDown(event) {\n    event.preventDefault();\n\n    switch (event.pointerType) {\n      case 'mouse':\n      case 'pen':\n        onMouseDown(event);\n        break;\n      // TODO touch\n    }\n  }\n\n  function onMouseDown(event) {\n    event.preventDefault();\n    _intersections.length = 0;\n\n    _raycaster.setFromCamera(_mouse, _camera);\n\n    _raycaster.intersectObjects(_objects, true, _intersections);\n\n    if (_intersections.length > 0) {\n      _selected = scope.transformGroup === true ? _objects[0] : _intersections[0].object;\n\n      if (_raycaster.ray.intersectPlane(_plane, _intersection)) {\n        _inverseMatrix.copy(_selected.parent.matrixWorld).invert();\n\n        _offset.copy(_intersection).sub(_worldPosition.setFromMatrixPosition(_selected.matrixWorld));\n      }\n\n      _domElement.style.cursor = 'move';\n      scope.dispatchEvent({\n        type: 'dragstart',\n        object: _selected\n      });\n    }\n  }\n\n  function onPointerCancel(event) {\n    event.preventDefault();\n\n    switch (event.pointerType) {\n      case 'mouse':\n      case 'pen':\n        onMouseCancel(event);\n        break;\n      // TODO touch\n    }\n  }\n\n  function onMouseCancel(event) {\n    event.preventDefault();\n\n    if (_selected) {\n      scope.dispatchEvent({\n        type: 'dragend',\n        object: _selected\n      });\n      _selected = null;\n    }\n\n    _domElement.style.cursor = _hovered ? 'pointer' : 'auto';\n  }\n\n  function onTouchMove(event) {\n    event.preventDefault();\n    event = event.changedTouches[0];\n\n    var rect = _domElement.getBoundingClientRect();\n\n    _mouse.x = (event.clientX - rect.left) / rect.width * 2 - 1;\n    _mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n    _raycaster.setFromCamera(_mouse, _camera);\n\n    if (_selected && scope.enabled) {\n      if (_raycaster.ray.intersectPlane(_plane, _intersection)) {\n        _selected.position.copy(_intersection.sub(_offset).applyMatrix4(_inverseMatrix));\n      }\n\n      scope.dispatchEvent({\n        type: 'drag',\n        object: _selected\n      });\n      return;\n    }\n  }\n\n  function onTouchStart(event) {\n    event.preventDefault();\n    event = event.changedTouches[0];\n\n    var rect = _domElement.getBoundingClientRect();\n\n    _mouse.x = (event.clientX - rect.left) / rect.width * 2 - 1;\n    _mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n    _intersections.length = 0;\n\n    _raycaster.setFromCamera(_mouse, _camera);\n\n    _raycaster.intersectObjects(_objects, true, _intersections);\n\n    if (_intersections.length > 0) {\n      _selected = scope.transformGroup === true ? _objects[0] : _intersections[0].object;\n\n      _plane.setFromNormalAndCoplanarPoint(_camera.getWorldDirection(_plane.normal), _worldPosition.setFromMatrixPosition(_selected.matrixWorld));\n\n      if (_raycaster.ray.intersectPlane(_plane, _intersection)) {\n        _inverseMatrix.copy(_selected.parent.matrixWorld).invert();\n\n        _offset.copy(_intersection).sub(_worldPosition.setFromMatrixPosition(_selected.matrixWorld));\n      }\n\n      _domElement.style.cursor = 'move';\n      scope.dispatchEvent({\n        type: 'dragstart',\n        object: _selected\n      });\n    }\n  }\n\n  function onTouchEnd(event) {\n    event.preventDefault();\n\n    if (_selected) {\n      scope.dispatchEvent({\n        type: 'dragend',\n        object: _selected\n      });\n      _selected = null;\n    }\n\n    _domElement.style.cursor = 'auto';\n  }\n\n  activate(); // API\n\n  this.enabled = true;\n  this.transformGroup = false;\n  this.activate = activate;\n  this.deactivate = deactivate;\n  this.dispose = dispose;\n  this.getObjects = getObjects;\n};\n\nDragControls.prototype = Object.create(EventDispatcher.prototype);\nDragControls.prototype.constructor = DragControls;\nexport { DragControls };","map":{"version":3,"sources":["/home/telix/dictographo/frontend/node_modules/three/examples/jsm/controls/DragControls.js"],"names":["EventDispatcher","Matrix4","Plane","Raycaster","Vector2","Vector3","DragControls","_objects","_camera","_domElement","_plane","_raycaster","_mouse","_offset","_intersection","_worldPosition","_inverseMatrix","_intersections","_selected","_hovered","scope","activate","addEventListener","onPointerMove","onPointerDown","onPointerCancel","onTouchMove","onTouchStart","onTouchEnd","deactivate","removeEventListener","style","cursor","dispose","getObjects","event","preventDefault","pointerType","onMouseMove","rect","getBoundingClientRect","x","clientX","left","width","y","clientY","top","height","setFromCamera","enabled","ray","intersectPlane","position","copy","sub","applyMatrix4","dispatchEvent","type","object","length","intersectObjects","setFromNormalAndCoplanarPoint","getWorldDirection","normal","setFromMatrixPosition","matrixWorld","onMouseDown","transformGroup","parent","invert","onMouseCancel","changedTouches","prototype","Object","create","constructor"],"mappings":"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","sourcesContent":["import {\n\tEventDispatcher,\n\tMatrix4,\n\tPlane,\n\tRaycaster,\n\tVector2,\n\tVector3\n} from \"../../../build/three.module.js\";\n\nvar DragControls = function ( _objects, _camera, _domElement ) {\n\n\tvar _plane = new Plane();\n\tvar _raycaster = new Raycaster();\n\n\tvar _mouse = new Vector2();\n\tvar _offset = new Vector3();\n\tvar _intersection = new Vector3();\n\tvar _worldPosition = new Vector3();\n\tvar _inverseMatrix = new Matrix4();\n\tvar _intersections = [];\n\n\tvar _selected = null, _hovered = null;\n\n\t//\n\n\tvar scope = this;\n\n\tfunction activate() {\n\n\t\t_domElement.addEventListener( 'pointermove', onPointerMove, false );\n\t\t_domElement.addEventListener( 'pointerdown', onPointerDown, false );\n\t\t_domElement.addEventListener( 'pointerup', onPointerCancel, false );\n\t\t_domElement.addEventListener( 'pointerleave', onPointerCancel, false );\n\t\t_domElement.addEventListener( 'touchmove', onTouchMove, false );\n\t\t_domElement.addEventListener( 'touchstart', onTouchStart, false );\n\t\t_domElement.addEventListener( 'touchend', onTouchEnd, false );\n\n\t}\n\n\tfunction deactivate() {\n\n\t\t_domElement.removeEventListener( 'pointermove', onPointerMove, false );\n\t\t_domElement.removeEventListener( 'pointerdown', onPointerDown, false );\n\t\t_domElement.removeEventListener( 'pointerup', onPointerCancel, false );\n\t\t_domElement.removeEventListener( 'pointerleave', onPointerCancel, false );\n\t\t_domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\t\t_domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\t_domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\n\t\t_domElement.style.cursor = '';\n\n\t}\n\n\tfunction dispose() {\n\n\t\tdeactivate();\n\n\t}\n\n\tfunction getObjects() {\n\n\t\treturn _objects;\n\n\t}\n\n\tfunction onPointerMove( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( event.pointerType ) {\n\n\t\t\tcase 'mouse':\n\t\t\tcase 'pen':\n\t\t\t\tonMouseMove( event );\n\t\t\t\tbreak;\n\n\t\t\t// TODO touch\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tvar rect = _domElement.getBoundingClientRect();\n\n\t\t_mouse.x = ( ( event.clientX - rect.left ) / rect.width ) * 2 - 1;\n\t\t_mouse.y = - ( ( event.clientY - rect.top ) / rect.height ) * 2 + 1;\n\n\t\t_raycaster.setFromCamera( _mouse, _camera );\n\n\t\tif ( _selected && scope.enabled ) {\n\n\t\t\tif ( _raycaster.ray.intersectPlane( _plane, _intersection ) ) {\n\n\t\t\t\t_selected.position.copy( _intersection.sub( _offset ).applyMatrix4( _inverseMatrix ) );\n\n\t\t\t}\n\n\t\t\tscope.dispatchEvent( { type: 'drag', object: _selected } );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t_intersections.length = 0;\n\n\t\t_raycaster.setFromCamera( _mouse, _camera );\n\t\t_raycaster.intersectObjects( _objects, true, _intersections );\n\n\t\tif ( _intersections.length > 0 ) {\n\n\t\t\tvar object = _intersections[ 0 ].object;\n\n\t\t\t_plane.setFromNormalAndCoplanarPoint( _camera.getWorldDirection( _plane.normal ), _worldPosition.setFromMatrixPosition( object.matrixWorld ) );\n\n\t\t\tif ( _hovered !== object ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'hoveron', object: object } );\n\n\t\t\t\t_domElement.style.cursor = 'pointer';\n\t\t\t\t_hovered = object;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( _hovered !== null ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'hoveroff', object: _hovered } );\n\n\t\t\t\t_domElement.style.cursor = 'auto';\n\t\t\t\t_hovered = null;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction onPointerDown( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( event.pointerType ) {\n\n\t\t\tcase 'mouse':\n\t\t\tcase 'pen':\n\t\t\t\tonMouseDown( event );\n\t\t\t\tbreak;\n\n\t\t\t// TODO touch\n\n\t\t}\n\n\t}\n\n\tfunction onMouseDown( event ) {\n\n\t\tevent.preventDefault();\n\n\t\t_intersections.length = 0;\n\n\t\t_raycaster.setFromCamera( _mouse, _camera );\n\t\t_raycaster.intersectObjects( _objects, true, _intersections );\n\n\t\tif ( _intersections.length > 0 ) {\n\n\t\t\t_selected = ( scope.transformGroup === true ) ? _objects[ 0 ] : _intersections[ 0 ].object;\n\n\t\t\tif ( _raycaster.ray.intersectPlane( _plane, _intersection ) ) {\n\n\t\t\t\t_inverseMatrix.copy( _selected.parent.matrixWorld ).invert();\n\t\t\t\t_offset.copy( _intersection ).sub( _worldPosition.setFromMatrixPosition( _selected.matrixWorld ) );\n\n\t\t\t}\n\n\t\t\t_domElement.style.cursor = 'move';\n\n\t\t\tscope.dispatchEvent( { type: 'dragstart', object: _selected } );\n\n\t\t}\n\n\n\t}\n\n\tfunction onPointerCancel( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( event.pointerType ) {\n\n\t\t\tcase 'mouse':\n\t\t\tcase 'pen':\n\t\t\t\tonMouseCancel( event );\n\t\t\t\tbreak;\n\n\t\t\t// TODO touch\n\n\t\t}\n\n\t}\n\n\tfunction onMouseCancel( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tif ( _selected ) {\n\n\t\t\tscope.dispatchEvent( { type: 'dragend', object: _selected } );\n\n\t\t\t_selected = null;\n\n\t\t}\n\n\t\t_domElement.style.cursor = _hovered ? 'pointer' : 'auto';\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tevent.preventDefault();\n\t\tevent = event.changedTouches[ 0 ];\n\n\t\tvar rect = _domElement.getBoundingClientRect();\n\n\t\t_mouse.x = ( ( event.clientX - rect.left ) / rect.width ) * 2 - 1;\n\t\t_mouse.y = - ( ( event.clientY - rect.top ) / rect.height ) * 2 + 1;\n\n\t\t_raycaster.setFromCamera( _mouse, _camera );\n\n\t\tif ( _selected && scope.enabled ) {\n\n\t\t\tif ( _raycaster.ray.intersectPlane( _plane, _intersection ) ) {\n\n\t\t\t\t_selected.position.copy( _intersection.sub( _offset ).applyMatrix4( _inverseMatrix ) );\n\n\t\t\t}\n\n\t\t\tscope.dispatchEvent( { type: 'drag', object: _selected } );\n\n\t\t\treturn;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tevent.preventDefault();\n\t\tevent = event.changedTouches[ 0 ];\n\n\t\tvar rect = _domElement.getBoundingClientRect();\n\n\t\t_mouse.x = ( ( event.clientX - rect.left ) / rect.width ) * 2 - 1;\n\t\t_mouse.y = - ( ( event.clientY - rect.top ) / rect.height ) * 2 + 1;\n\n\t\t_intersections.length = 0;\n\n\t\t_raycaster.setFromCamera( _mouse, _camera );\n\t\t _raycaster.intersectObjects( _objects, true, _intersections );\n\n\t\tif ( _intersections.length > 0 ) {\n\n\t\t\t_selected = ( scope.transformGroup === true ) ? _objects[ 0 ] : _intersections[ 0 ].object;\n\n\t\t\t_plane.setFromNormalAndCoplanarPoint( _camera.getWorldDirection( _plane.normal ), _worldPosition.setFromMatrixPosition( _selected.matrixWorld ) );\n\n\t\t\tif ( _raycaster.ray.intersectPlane( _plane, _intersection ) ) {\n\n\t\t\t\t_inverseMatrix.copy( _selected.parent.matrixWorld ).invert();\n\t\t\t\t_offset.copy( _intersection ).sub( _worldPosition.setFromMatrixPosition( _selected.matrixWorld ) );\n\n\t\t\t}\n\n\t\t\t_domElement.style.cursor = 'move';\n\n\t\t\tscope.dispatchEvent( { type: 'dragstart', object: _selected } );\n\n\t\t}\n\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tif ( _selected ) {\n\n\t\t\tscope.dispatchEvent( { type: 'dragend', object: _selected } );\n\n\t\t\t_selected = null;\n\n\t\t}\n\n\t\t_domElement.style.cursor = 'auto';\n\n\t}\n\n\tactivate();\n\n\t// API\n\n\tthis.enabled = true;\n\tthis.transformGroup = false;\n\n\tthis.activate = activate;\n\tthis.deactivate = deactivate;\n\tthis.dispose = dispose;\n\tthis.getObjects = getObjects;\n\n};\n\nDragControls.prototype = Object.create( EventDispatcher.prototype );\nDragControls.prototype.constructor = DragControls;\n\nexport { DragControls };\n"]},"metadata":{},"sourceType":"module"}