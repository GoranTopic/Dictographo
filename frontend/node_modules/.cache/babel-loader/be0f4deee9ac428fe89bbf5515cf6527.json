{"ast":null,"code":"import React from'react';import{queryNewWord,queryPath}from'../node_functions';import{colors}from\"../myConfig\";import SuggestionsContainer from\"./SearchSuggestion/SearchSuggestion\";import{Nav,Navbar,NavDropdown,Form,FormControl,Button,InputGroup,Col}from'react-bootstrap';import'bootstrap/dist/css/bootstrap.min.css';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faSlidersH}from'@fortawesome/free-solid-svg-icons';/*\n * ===========================================\n *      NavBar Componente for React \n * ===========================================\n * \t Using ReaactBootStrap to render the navbar\n */function NavBarContainer(_ref){var state=_ref.state,dispatchState=_ref.dispatchState;var ref=React.createRef();// handle the change by seting the state variable to \nvar handleSearchChange=function handleSearchChange(change){return dispatchState({type:'SET_SEARCH_TERM',payload:change.target.value});};var handleSearchSubmit=function handleSearchSubmit(){/* handle submit search button */ // get words if there are multiple of them \nvar words=getmultipleWords(state.searchTerm.toLowerCase());// set all serches to lowercase\nif(words.length>1){//if it has more that two words\nqueryPath(words,state,dispatchState);}else{// if there is only one word\nqueryNewWord(words[0],state,dispatchState);}};var getmultipleWords=function getmultipleWords(string){/* determines qhereteher a string \n\t\t\t\t * is compossed of multiple words */ //remove multiple spaces\n//trim, remove multiple and seperate by spaces\nreturn string.replace(/  +/g,' ').trim().split(' ');};var handleRadioGraphChange=function handleRadioGraphChange(changeEvent){return dispatchState({type:'SET_GRAPH_TYPE',payload:changeEvent.target.value});};var handleToggleDeepLinks=function handleToggleDeepLinks(){/* hangles the toggle of the deep links, \n\t\t\t\t * resets the graph if there is already a \n\t\t\t\t * selected node */var selectedNode=state.selected;if(!state.isEmpty)queryNewWord(selectedNode.id,state,dispatchState);dispatchState({type:'TOGGLE_DEEP_LINKS'});};return/*#__PURE__*/React.createElement(Navbar,{expand:\"lg\",className:\"justify-content-center\",variant:\"dark\",style:{backgroundColor:colors.black}},/*#__PURE__*/React.createElement(\"a\",{href:\"index.html\"},/*#__PURE__*/React.createElement(\"img\",{src:\"/logo.png\",width:\"150\",height:\"70\",alt:\"React Bootstrap logo\"})),/*#__PURE__*/React.createElement(Navbar.Brand,{href:\"index.html\",className:\"row\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Dictographo\")),/*#__PURE__*/React.createElement(InputGroup,{size:\"lg\",md:\"auto\",className:\"pl-3\",style:{maxWidth:\"700px\"}},/*#__PURE__*/React.createElement(InputGroup.Prepend,null,/*#__PURE__*/React.createElement(SuggestionsContainer,{state:state,dispatchState:dispatchState,handleSearchSubmit:handleSearchSubmit})),/*#__PURE__*/React.createElement(FormControl,{size:\"lg\",as:\"input\",type:\"text\",placeholder:\"Write some words...\",value:state.searchTerm,onChange:handleSearchChange}),/*#__PURE__*/React.createElement(InputGroup.Append,{className:\"pr-2\"},/*#__PURE__*/React.createElement(Button,{ref:ref,size:\"lg\",variant:\"outline-info\",onClick:handleSearchSubmit},\"Search\"))),/*#__PURE__*/React.createElement(Navbar.Toggle,{\"aria-controls\":\"responsive-navbar-nav\"}),/*#__PURE__*/React.createElement(Navbar.Collapse,{id:\"basic-navbar-nav\"},/*#__PURE__*/React.createElement(Nav,null,/*#__PURE__*/React.createElement(NavDropdown,{title:\"Options\",icon:/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSlidersH}),style:{backgroundColor:colors.black},className:\"text-left ml-3 pl-3\"},/*#__PURE__*/React.createElement(Form.Group,{as:Col},/*#__PURE__*/React.createElement(Form.Check,{type:\"switch\",className:\"pb-1 ml-2 text-left\",label:\"Nodes\",value:\"d3\",name:\"formHorizontalRadios\",id:\"d3\",checked:state.graphType===\"d3\",onChange:handleRadioGraphChange}),/*#__PURE__*/React.createElement(Form.Check,{type:\"switch\",className:\"pb-1 ml-2 text-left\",label:\"Words\",value:\"2D\",name:\"formHorizontalRadios\",id:\"formHorizontalRadios2\",checked:state.graphType===\"2D\",onChange:handleRadioGraphChange}),/*#__PURE__*/React.createElement(Form.Check,{type:\"switch\",className:\"pb-1 ml-2 text-left\",label:\" 3D\",value:\"3D\",name:\"formHorizontalRadios\",id:\"formHorizontalRadios3\",checked:state.graphType===\"3D\",onChange:handleRadioGraphChange}),/*#__PURE__*/React.createElement(NavDropdown.Divider,null),/*#__PURE__*/React.createElement(Form.Check,{type:\"switch\",className:\"text-center\",id:\"custom-switch\",label:\"Deep Links\",value:state.isDeepLinks,onChange:handleToggleDeepLinks}))))));}export default NavBarContainer;","map":{"version":3,"sources":["/home/telix/dictographo/frontend/src/Components/NavBar.js"],"names":["React","queryNewWord","queryPath","colors","SuggestionsContainer","Nav","Navbar","NavDropdown","Form","FormControl","Button","InputGroup","Col","FontAwesomeIcon","faSlidersH","NavBarContainer","state","dispatchState","ref","createRef","handleSearchChange","change","type","payload","target","value","handleSearchSubmit","words","getmultipleWords","searchTerm","toLowerCase","length","string","replace","trim","split","handleRadioGraphChange","changeEvent","handleToggleDeepLinks","selectedNode","selected","isEmpty","id","backgroundColor","black","maxWidth","graphType","isDeepLinks"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { queryNewWord, queryPath } from '../node_functions';\nimport { colors }  from \"../myConfig\";\nimport SuggestionsContainer from \"./SearchSuggestion/SearchSuggestion\";\nimport { Nav, Navbar, NavDropdown, Form, FormControl, Button, InputGroup, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon  } from '@fortawesome/react-fontawesome'\nimport { faSlidersH } from '@fortawesome/free-solid-svg-icons'\n\n/*\n * ===========================================\n *      NavBar Componente for React \n * ===========================================\n * \t Using ReaactBootStrap to render the navbar\n */\n\nfunction NavBarContainer({ state, dispatchState }){\n\n\t\tconst ref = React.createRef();\n\n\t\t// handle the change by seting the state variable to \n\t\tconst handleSearchChange = change => \n\t\t\t\tdispatchState({ \n\t\t\t\t\t\ttype: 'SET_SEARCH_TERM',\n\t\t\t\t\t\tpayload: change.target.value \n\t\t\t\t});\n\n\t\tconst handleSearchSubmit = () =>  {\n\t\t\t\t/* handle submit search button */\n\t\t\t\t// get words if there are multiple of them \n\t\t\t\tlet words = getmultipleWords(state.searchTerm.toLowerCase());\n\t\t\t\t// set all serches to lowercase\n\t\t\t\tif(words.length > 1){\n\t\t\t\t\t\t//if it has more that two words\n\t\t\t\t\t\tqueryPath(words, state, dispatchState);\n\t\t\t\t}else{ \n\t\t\t\t\t\t// if there is only one word\n\t\t\t\t\t\tqueryNewWord(words[0], state, dispatchState);\n\t\t\t\t}\n\t\t}\n\n\t\tconst getmultipleWords = (string) => {\n\t\t\t\t/* determines qhereteher a string \n\t\t\t\t * is compossed of multiple words */\n\t\t\t\t//remove multiple spaces\n\t\t\t\t//trim, remove multiple and seperate by spaces\n\t\t\t\treturn string.replace(/  +/g, ' ').trim().split(' ') \n\t\t}\n\n\t\tconst handleRadioGraphChange = (changeEvent) => \n\t\t\t\tdispatchState({type:'SET_GRAPH_TYPE', payload:changeEvent.target.value});\n\n\t\tconst handleToggleDeepLinks = () => {\n\t\t\t\t/* hangles the toggle of the deep links, \n\t\t\t\t * resets the graph if there is already a \n\t\t\t\t * selected node */\n\t\t\t\tlet selectedNode = state.selected;\n\t\t\t\tif(!state.isEmpty) queryNewWord(selectedNode.id, state, dispatchState);\n\t\t\t\tdispatchState({type:'TOGGLE_DEEP_LINKS'});\n\t\t}\n\n\n\t\treturn(\n\t\t\t\t<Navbar expand=\"lg\" className=\"justify-content-center\"\n\t\t\t\t\t\tvariant=\"dark\" style={{backgroundColor: colors.black}}>\n\t\t\t\t\t\t<a href=\"index.html\">\n\t\t\t\t\t\t\t\t<img src=\"/logo.png\" width=\"150\"\n\t\t\t\t\t\t\t\t\t\theight=\"70\"\n\t\t\t\t\t\t\t\t\t\talt=\"React Bootstrap logo\" />\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<Navbar.Brand href=\"index.html\" className=\"row\"  >\n\t\t\t\t\t\t\t\t<h1>Dictographo</h1>\n\t\t\t\t\t\t</Navbar.Brand>\n\t\t\t\t\t\t<InputGroup  size='lg' md='auto' className=\"pl-3\" style={{maxWidth: \"700px\"}} >\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\n\t\t\t\t\t\t\t\t\t\t<SuggestionsContainer state={state} dispatchState={dispatchState} handleSearchSubmit={handleSearchSubmit}/ >\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\n\t\t\t\t\t\t\t\t<FormControl size=\"lg\" as='input' type=\"text\" placeholder=\"Write some words...\" \n\t\t\t\t\t\t\t\t\t\tvalue={state.searchTerm} onChange={handleSearchChange}/>\n\t\t\t\t\t\t\t\t<InputGroup.Append className=\"pr-2\" >\n\t\t\t\t\t\t\t\t\t\t<Button ref={ref} size=\"lg\" variant=\"outline-info\" onClick={handleSearchSubmit}>Search</Button>\n\t\t\t\t\t\t\t\t</InputGroup.Append>\n\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t\t<Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n\t\t\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\" >\n\t\t\t\t\t\t\t\t<Nav >\n\t\t\t\t\t\t\t\t\t\t<NavDropdown \n\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Options\" \n\t\t\t\t\t\t\t\t\t\t\t\ticon={<FontAwesomeIcon icon={faSlidersH}/>}\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor: colors.black }} \n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"text-left ml-3 pl-3\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Group as={Col}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Check\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"switch\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"pb-1 ml-2 text-left\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Nodes\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"d3\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"formHorizontalRadios\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"d3\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={state.graphType === \"d3\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleRadioGraphChange}/ >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Check\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"switch\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"pb-1 ml-2 text-left\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Words\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"2D\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"formHorizontalRadios\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"formHorizontalRadios2\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={state.graphType === \"2D\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleRadioGraphChange} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Check\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"switch\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"pb-1 ml-2 text-left\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\" 3D\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"3D\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"formHorizontalRadios\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"formHorizontalRadios3\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={state.graphType === \"3D\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleRadioGraphChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<NavDropdown.Divider />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Check \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"switch\" \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"text-center\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"custom-switch\" \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Deep Links\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={state.isDeepLinks} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleToggleDeepLinks}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t</NavDropdown>\n\t\t\t\t\t\t\t\t</Nav>\n\t\t\t\t\t\t</Navbar.Collapse>\n\t\t\t\t</Navbar>\n\t\t)\n}\n\nexport default NavBarContainer;\n"]},"metadata":{},"sourceType":"module"}