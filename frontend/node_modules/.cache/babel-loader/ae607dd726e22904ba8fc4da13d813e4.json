{"ast":null,"code":"import debounce from 'debounce';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nvar Prop = function Prop(name, _ref) {\n  var _ref$default = _ref[\"default\"],\n      defaultVal = _ref$default === void 0 ? null : _ref$default,\n      _ref$triggerUpdate = _ref.triggerUpdate,\n      triggerUpdate = _ref$triggerUpdate === void 0 ? true : _ref$triggerUpdate,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === void 0 ? function (newVal, state) {} : _ref$onChange;\n\n  _classCallCheck(this, Prop);\n\n  this.name = name;\n  this.defaultVal = defaultVal;\n  this.triggerUpdate = triggerUpdate;\n  this.onChange = onChange;\n};\n\nfunction index(_ref2) {\n  var _ref2$stateInit = _ref2.stateInit,\n      stateInit = _ref2$stateInit === void 0 ? function () {\n    return {};\n  } : _ref2$stateInit,\n      _ref2$props = _ref2.props,\n      rawProps = _ref2$props === void 0 ? {} : _ref2$props,\n      _ref2$methods = _ref2.methods,\n      methods = _ref2$methods === void 0 ? {} : _ref2$methods,\n      _ref2$aliases = _ref2.aliases,\n      aliases = _ref2$aliases === void 0 ? {} : _ref2$aliases,\n      _ref2$init = _ref2.init,\n      initFn = _ref2$init === void 0 ? function () {} : _ref2$init,\n      _ref2$update = _ref2.update,\n      updateFn = _ref2$update === void 0 ? function () {} : _ref2$update; // Parse props into Prop instances\n\n  var props = Object.keys(rawProps).map(function (propName) {\n    return new Prop(propName, rawProps[propName]);\n  });\n  return function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; // Holds component state\n\n    var state = Object.assign({}, stateInit instanceof Function ? stateInit(options) : stateInit, // Support plain objects for backwards compatibility\n    {\n      initialised: false\n    }); // keeps track of which props triggered an update\n\n    var changedProps = {}; // Component constructor\n\n    function comp(nodeElement) {\n      initStatic(nodeElement, options);\n      digest();\n      return comp;\n    }\n\n    var initStatic = function initStatic(nodeElement, options) {\n      initFn.call(comp, nodeElement, state, options);\n      state.initialised = true;\n    };\n\n    var digest = debounce(function () {\n      if (!state.initialised) {\n        return;\n      }\n\n      updateFn.call(comp, state, changedProps);\n      changedProps = {};\n    }, 1); // Getter/setter methods\n\n    props.forEach(function (prop) {\n      comp[prop.name] = getSetProp(prop);\n\n      function getSetProp(_ref3) {\n        var prop = _ref3.name,\n            _ref3$triggerUpdate = _ref3.triggerUpdate,\n            redigest = _ref3$triggerUpdate === void 0 ? false : _ref3$triggerUpdate,\n            _ref3$onChange = _ref3.onChange,\n            onChange = _ref3$onChange === void 0 ? function (newVal, state) {} : _ref3$onChange,\n            _ref3$defaultVal = _ref3.defaultVal,\n            defaultVal = _ref3$defaultVal === void 0 ? null : _ref3$defaultVal;\n        return function (_) {\n          var curVal = state[prop];\n\n          if (!arguments.length) {\n            return curVal;\n          } // Getter mode\n\n\n          var val = _ === undefined ? defaultVal : _; // pick default if value passed is undefined\n\n          state[prop] = val;\n          onChange.call(comp, val, state, curVal); // track changed props\n\n          !changedProps.hasOwnProperty(prop) && (changedProps[prop] = curVal);\n\n          if (redigest) {\n            digest();\n          }\n\n          return comp;\n        };\n      }\n    }); // Other methods\n\n    Object.keys(methods).forEach(function (methodName) {\n      comp[methodName] = function () {\n        var _methods$methodName;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return (_methods$methodName = methods[methodName]).call.apply(_methods$methodName, [comp, state].concat(args));\n      };\n    }); // Link aliases\n\n    Object.entries(aliases).forEach(function (_ref4) {\n      var _ref5 = _slicedToArray(_ref4, 2),\n          alias = _ref5[0],\n          target = _ref5[1];\n\n      return comp[alias] = comp[target];\n    }); // Reset all component props to their default value\n\n    comp.resetProps = function () {\n      props.forEach(function (prop) {\n        comp[prop.name](prop.defaultVal);\n      });\n      return comp;\n    }; //\n\n\n    comp.resetProps(); // Apply all prop defaults\n\n    state._rerender = digest; // Expose digest method\n\n    return comp;\n  };\n}\n\nexport default index;","map":{"version":3,"sources":["/home/telix/dictographo/frontend/node_modules/kapsule/dist/kapsule.module.js"],"names":["debounce","_classCallCheck","instance","Constructor","TypeError","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","length","err","Prop","name","_ref","_ref$default","defaultVal","_ref$triggerUpdate","triggerUpdate","_ref$onChange","onChange","newVal","state","index","_ref2","_ref2$stateInit","stateInit","_ref2$props","props","rawProps","_ref2$methods","methods","_ref2$aliases","aliases","_ref2$init","init","initFn","_ref2$update","update","updateFn","keys","map","propName","options","arguments","assign","Function","initialised","changedProps","comp","nodeElement","initStatic","digest","forEach","prop","getSetProp","_ref3","_ref3$triggerUpdate","redigest","_ref3$onChange","_ref3$defaultVal","_","curVal","val","hasOwnProperty","methodName","_methods$methodName","_len","args","_key","apply","concat","entries","_ref4","_ref5","alias","target","resetProps","_rerender"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;;AAEA,SAASC,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAC9C,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AACtC,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AACD;AACF;;AAED,SAASC,cAAT,CAAwBC,GAAxB,EAA6BC,CAA7B,EAAgC;AAC9B,SAAOC,eAAe,CAACF,GAAD,CAAf,IAAwBG,qBAAqB,CAACH,GAAD,EAAMC,CAAN,CAA7C,IAAyDG,gBAAgB,EAAhF;AACD;;AAED,SAASF,eAAT,CAAyBF,GAAzB,EAA8B;AAC5B,MAAIK,KAAK,CAACC,OAAN,CAAcN,GAAd,CAAJ,EAAwB,OAAOA,GAAP;AACzB;;AAED,SAASG,qBAAT,CAA+BH,GAA/B,EAAoCC,CAApC,EAAuC;AACrC,MAAI,EAAEM,MAAM,CAACC,QAAP,IAAmBC,MAAM,CAACT,GAAD,CAAzB,IAAkCS,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BZ,GAA/B,MAAwC,oBAA5E,CAAJ,EAAuG;AACrG;AACD;;AAED,MAAIa,IAAI,GAAG,EAAX;AACA,MAAIC,EAAE,GAAG,IAAT;AACA,MAAIC,EAAE,GAAG,KAAT;AACA,MAAIC,EAAE,GAAGC,SAAT;;AAEA,MAAI;AACF,SAAK,IAAIC,EAAE,GAAGlB,GAAG,CAACO,MAAM,CAACC,QAAR,CAAH,EAAT,EAAiCW,EAAtC,EAA0C,EAAEL,EAAE,GAAG,CAACK,EAAE,GAAGD,EAAE,CAACE,IAAH,EAAN,EAAiBC,IAAxB,CAA1C,EAAyEP,EAAE,GAAG,IAA9E,EAAoF;AAClFD,MAAAA,IAAI,CAACS,IAAL,CAAUH,EAAE,CAACI,KAAb;;AAEA,UAAItB,CAAC,IAAIY,IAAI,CAACW,MAAL,KAAgBvB,CAAzB,EAA4B;AAC7B;AACF,GAND,CAME,OAAOwB,GAAP,EAAY;AACZV,IAAAA,EAAE,GAAG,IAAL;AACAC,IAAAA,EAAE,GAAGS,GAAL;AACD,GATD,SASU;AACR,QAAI;AACF,UAAI,CAACX,EAAD,IAAOI,EAAE,CAAC,QAAD,CAAF,IAAgB,IAA3B,EAAiCA,EAAE,CAAC,QAAD,CAAF;AAClC,KAFD,SAEU;AACR,UAAIH,EAAJ,EAAQ,MAAMC,EAAN;AACT;AACF;;AAED,SAAOH,IAAP;AACD;;AAED,SAAST,gBAAT,GAA4B;AAC1B,QAAM,IAAIN,SAAJ,CAAc,sDAAd,CAAN;AACD;;AAED,IAAI4B,IAAI,GAAG,SAASA,IAAT,CAAcC,IAAd,EAAoBC,IAApB,EAA0B;AACnC,MAAIC,YAAY,GAAGD,IAAI,CAAC,SAAD,CAAvB;AAAA,MACIE,UAAU,GAAGD,YAAY,KAAK,KAAK,CAAtB,GAA0B,IAA1B,GAAiCA,YADlD;AAAA,MAEIE,kBAAkB,GAAGH,IAAI,CAACI,aAF9B;AAAA,MAGIA,aAAa,GAAGD,kBAAkB,KAAK,KAAK,CAA5B,GAAgC,IAAhC,GAAuCA,kBAH3D;AAAA,MAIIE,aAAa,GAAGL,IAAI,CAACM,QAJzB;AAAA,MAKIA,QAAQ,GAAGD,aAAa,KAAK,KAAK,CAAvB,GAA2B,UAAUE,MAAV,EAAkBC,KAAlB,EAAyB,CAAE,CAAtD,GAAyDH,aALxE;;AAOAtC,EAAAA,eAAe,CAAC,IAAD,EAAO+B,IAAP,CAAf;;AAEA,OAAKC,IAAL,GAAYA,IAAZ;AACA,OAAKG,UAAL,GAAkBA,UAAlB;AACA,OAAKE,aAAL,GAAqBA,aAArB;AACA,OAAKE,QAAL,GAAgBA,QAAhB;AACD,CAdD;;AAgBA,SAASG,KAAT,CAAgBC,KAAhB,EAAuB;AACrB,MAAIC,eAAe,GAAGD,KAAK,CAACE,SAA5B;AAAA,MACIA,SAAS,GAAGD,eAAe,KAAK,KAAK,CAAzB,GAA6B,YAAY;AACvD,WAAO,EAAP;AACD,GAFe,GAEZA,eAHJ;AAAA,MAIIE,WAAW,GAAGH,KAAK,CAACI,KAJxB;AAAA,MAKIC,QAAQ,GAAGF,WAAW,KAAK,KAAK,CAArB,GAAyB,EAAzB,GAA8BA,WAL7C;AAAA,MAMIG,aAAa,GAAGN,KAAK,CAACO,OAN1B;AAAA,MAOIA,OAAO,GAAGD,aAAa,KAAK,KAAK,CAAvB,GAA2B,EAA3B,GAAgCA,aAP9C;AAAA,MAQIE,aAAa,GAAGR,KAAK,CAACS,OAR1B;AAAA,MASIA,OAAO,GAAGD,aAAa,KAAK,KAAK,CAAvB,GAA2B,EAA3B,GAAgCA,aAT9C;AAAA,MAUIE,UAAU,GAAGV,KAAK,CAACW,IAVvB;AAAA,MAWIC,MAAM,GAAGF,UAAU,KAAK,KAAK,CAApB,GAAwB,YAAY,CAAE,CAAtC,GAAyCA,UAXtD;AAAA,MAYIG,YAAY,GAAGb,KAAK,CAACc,MAZzB;AAAA,MAaIC,QAAQ,GAAGF,YAAY,KAAK,KAAK,CAAtB,GAA0B,YAAY,CAAE,CAAxC,GAA2CA,YAb1D,CADqB,CAerB;;AACA,MAAIT,KAAK,GAAGjC,MAAM,CAAC6C,IAAP,CAAYX,QAAZ,EAAsBY,GAAtB,CAA0B,UAAUC,QAAV,EAAoB;AACxD,WAAO,IAAI9B,IAAJ,CAAS8B,QAAT,EAAmBb,QAAQ,CAACa,QAAD,CAA3B,CAAP;AACD,GAFW,CAAZ;AAGA,SAAO,YAAY;AACjB,QAAIC,OAAO,GAAGC,SAAS,CAAClC,MAAV,GAAmB,CAAnB,IAAwBkC,SAAS,CAAC,CAAD,CAAT,KAAiBzC,SAAzC,GAAqDyC,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF,CADiB,CAEjB;;AACA,QAAItB,KAAK,GAAG3B,MAAM,CAACkD,MAAP,CAAc,EAAd,EAAkBnB,SAAS,YAAYoB,QAArB,GAAgCpB,SAAS,CAACiB,OAAD,CAAzC,GAAqDjB,SAAvE,EAAkF;AAC9F;AACEqB,MAAAA,WAAW,EAAE;AADf,KADY,CAAZ,CAHiB,CAMb;;AAEJ,QAAIC,YAAY,GAAG,EAAnB,CARiB,CAQM;;AAEvB,aAASC,IAAT,CAAcC,WAAd,EAA2B;AACzBC,MAAAA,UAAU,CAACD,WAAD,EAAcP,OAAd,CAAV;AACAS,MAAAA,MAAM;AACN,aAAOH,IAAP;AACD;;AAED,QAAIE,UAAU,GAAG,SAASA,UAAT,CAAoBD,WAApB,EAAiCP,OAAjC,EAA0C;AACzDP,MAAAA,MAAM,CAACtC,IAAP,CAAYmD,IAAZ,EAAkBC,WAAlB,EAA+B5B,KAA/B,EAAsCqB,OAAtC;AACArB,MAAAA,KAAK,CAACyB,WAAN,GAAoB,IAApB;AACD,KAHD;;AAKA,QAAIK,MAAM,GAAGxE,QAAQ,CAAC,YAAY;AAChC,UAAI,CAAC0C,KAAK,CAACyB,WAAX,EAAwB;AACtB;AACD;;AAEDR,MAAAA,QAAQ,CAACzC,IAAT,CAAcmD,IAAd,EAAoB3B,KAApB,EAA2B0B,YAA3B;AACAA,MAAAA,YAAY,GAAG,EAAf;AACD,KAPoB,EAOlB,CAPkB,CAArB,CArBiB,CA4BV;;AAEPpB,IAAAA,KAAK,CAACyB,OAAN,CAAc,UAAUC,IAAV,EAAgB;AAC5BL,MAAAA,IAAI,CAACK,IAAI,CAACzC,IAAN,CAAJ,GAAkB0C,UAAU,CAACD,IAAD,CAA5B;;AAEA,eAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,YAAIF,IAAI,GAAGE,KAAK,CAAC3C,IAAjB;AAAA,YACI4C,mBAAmB,GAAGD,KAAK,CAACtC,aADhC;AAAA,YAEIwC,QAAQ,GAAGD,mBAAmB,KAAK,KAAK,CAA7B,GAAiC,KAAjC,GAAyCA,mBAFxD;AAAA,YAGIE,cAAc,GAAGH,KAAK,CAACpC,QAH3B;AAAA,YAIIA,QAAQ,GAAGuC,cAAc,KAAK,KAAK,CAAxB,GAA4B,UAAUtC,MAAV,EAAkBC,KAAlB,EAAyB,CAAE,CAAvD,GAA0DqC,cAJzE;AAAA,YAKIC,gBAAgB,GAAGJ,KAAK,CAACxC,UAL7B;AAAA,YAMIA,UAAU,GAAG4C,gBAAgB,KAAK,KAAK,CAA1B,GAA8B,IAA9B,GAAqCA,gBANtD;AAOA,eAAO,UAAUC,CAAV,EAAa;AAClB,cAAIC,MAAM,GAAGxC,KAAK,CAACgC,IAAD,CAAlB;;AAEA,cAAI,CAACV,SAAS,CAAClC,MAAf,EAAuB;AACrB,mBAAOoD,MAAP;AACD,WALiB,CAKhB;;;AAGF,cAAIC,GAAG,GAAGF,CAAC,KAAK1D,SAAN,GAAkBa,UAAlB,GAA+B6C,CAAzC,CARkB,CAQ0B;;AAE5CvC,UAAAA,KAAK,CAACgC,IAAD,CAAL,GAAcS,GAAd;AACA3C,UAAAA,QAAQ,CAACtB,IAAT,CAAcmD,IAAd,EAAoBc,GAApB,EAAyBzC,KAAzB,EAAgCwC,MAAhC,EAXkB,CAWuB;;AAEzC,WAACd,YAAY,CAACgB,cAAb,CAA4BV,IAA5B,CAAD,KAAuCN,YAAY,CAACM,IAAD,CAAZ,GAAqBQ,MAA5D;;AAEA,cAAIJ,QAAJ,EAAc;AACZN,YAAAA,MAAM;AACP;;AAED,iBAAOH,IAAP;AACD,SApBD;AAqBD;AACF,KAjCD,EA9BiB,CA+Db;;AAEJtD,IAAAA,MAAM,CAAC6C,IAAP,CAAYT,OAAZ,EAAqBsB,OAArB,CAA6B,UAAUY,UAAV,EAAsB;AACjDhB,MAAAA,IAAI,CAACgB,UAAD,CAAJ,GAAmB,YAAY;AAC7B,YAAIC,mBAAJ;;AAEA,aAAK,IAAIC,IAAI,GAAGvB,SAAS,CAAClC,MAArB,EAA6B0D,IAAI,GAAG,IAAI7E,KAAJ,CAAU4E,IAAV,CAApC,EAAqDE,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGF,IAA3E,EAAiFE,IAAI,EAArF,EAAyF;AACvFD,UAAAA,IAAI,CAACC,IAAD,CAAJ,GAAazB,SAAS,CAACyB,IAAD,CAAtB;AACD;;AAED,eAAO,CAACH,mBAAmB,GAAGnC,OAAO,CAACkC,UAAD,CAA9B,EAA4CnE,IAA5C,CAAiDwE,KAAjD,CAAuDJ,mBAAvD,EAA4E,CAACjB,IAAD,EAAO3B,KAAP,EAAciD,MAAd,CAAqBH,IAArB,CAA5E,CAAP;AACD,OARD;AASD,KAVD,EAjEiB,CA2Eb;;AAEJzE,IAAAA,MAAM,CAAC6E,OAAP,CAAevC,OAAf,EAAwBoB,OAAxB,CAAgC,UAAUoB,KAAV,EAAiB;AAC/C,UAAIC,KAAK,GAAGzF,cAAc,CAACwF,KAAD,EAAQ,CAAR,CAA1B;AAAA,UACIE,KAAK,GAAGD,KAAK,CAAC,CAAD,CADjB;AAAA,UAEIE,MAAM,GAAGF,KAAK,CAAC,CAAD,CAFlB;;AAIA,aAAOzB,IAAI,CAAC0B,KAAD,CAAJ,GAAc1B,IAAI,CAAC2B,MAAD,CAAzB;AACD,KAND,EA7EiB,CAmFb;;AAEJ3B,IAAAA,IAAI,CAAC4B,UAAL,GAAkB,YAAY;AAC5BjD,MAAAA,KAAK,CAACyB,OAAN,CAAc,UAAUC,IAAV,EAAgB;AAC5BL,QAAAA,IAAI,CAACK,IAAI,CAACzC,IAAN,CAAJ,CAAgByC,IAAI,CAACtC,UAArB;AACD,OAFD;AAGA,aAAOiC,IAAP;AACD,KALD,CArFiB,CA0Fd;;;AAGHA,IAAAA,IAAI,CAAC4B,UAAL,GA7FiB,CA6FE;;AAEnBvD,IAAAA,KAAK,CAACwD,SAAN,GAAkB1B,MAAlB,CA/FiB,CA+FS;;AAE1B,WAAOH,IAAP;AACD,GAlGD;AAmGD;;AAED,eAAe1B,KAAf","sourcesContent":["import debounce from 'debounce';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nvar Prop = function Prop(name, _ref) {\n  var _ref$default = _ref[\"default\"],\n      defaultVal = _ref$default === void 0 ? null : _ref$default,\n      _ref$triggerUpdate = _ref.triggerUpdate,\n      triggerUpdate = _ref$triggerUpdate === void 0 ? true : _ref$triggerUpdate,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === void 0 ? function (newVal, state) {} : _ref$onChange;\n\n  _classCallCheck(this, Prop);\n\n  this.name = name;\n  this.defaultVal = defaultVal;\n  this.triggerUpdate = triggerUpdate;\n  this.onChange = onChange;\n};\n\nfunction index (_ref2) {\n  var _ref2$stateInit = _ref2.stateInit,\n      stateInit = _ref2$stateInit === void 0 ? function () {\n    return {};\n  } : _ref2$stateInit,\n      _ref2$props = _ref2.props,\n      rawProps = _ref2$props === void 0 ? {} : _ref2$props,\n      _ref2$methods = _ref2.methods,\n      methods = _ref2$methods === void 0 ? {} : _ref2$methods,\n      _ref2$aliases = _ref2.aliases,\n      aliases = _ref2$aliases === void 0 ? {} : _ref2$aliases,\n      _ref2$init = _ref2.init,\n      initFn = _ref2$init === void 0 ? function () {} : _ref2$init,\n      _ref2$update = _ref2.update,\n      updateFn = _ref2$update === void 0 ? function () {} : _ref2$update;\n  // Parse props into Prop instances\n  var props = Object.keys(rawProps).map(function (propName) {\n    return new Prop(propName, rawProps[propName]);\n  });\n  return function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // Holds component state\n    var state = Object.assign({}, stateInit instanceof Function ? stateInit(options) : stateInit, // Support plain objects for backwards compatibility\n    {\n      initialised: false\n    }); // keeps track of which props triggered an update\n\n    var changedProps = {}; // Component constructor\n\n    function comp(nodeElement) {\n      initStatic(nodeElement, options);\n      digest();\n      return comp;\n    }\n\n    var initStatic = function initStatic(nodeElement, options) {\n      initFn.call(comp, nodeElement, state, options);\n      state.initialised = true;\n    };\n\n    var digest = debounce(function () {\n      if (!state.initialised) {\n        return;\n      }\n\n      updateFn.call(comp, state, changedProps);\n      changedProps = {};\n    }, 1); // Getter/setter methods\n\n    props.forEach(function (prop) {\n      comp[prop.name] = getSetProp(prop);\n\n      function getSetProp(_ref3) {\n        var prop = _ref3.name,\n            _ref3$triggerUpdate = _ref3.triggerUpdate,\n            redigest = _ref3$triggerUpdate === void 0 ? false : _ref3$triggerUpdate,\n            _ref3$onChange = _ref3.onChange,\n            onChange = _ref3$onChange === void 0 ? function (newVal, state) {} : _ref3$onChange,\n            _ref3$defaultVal = _ref3.defaultVal,\n            defaultVal = _ref3$defaultVal === void 0 ? null : _ref3$defaultVal;\n        return function (_) {\n          var curVal = state[prop];\n\n          if (!arguments.length) {\n            return curVal;\n          } // Getter mode\n\n\n          var val = _ === undefined ? defaultVal : _; // pick default if value passed is undefined\n\n          state[prop] = val;\n          onChange.call(comp, val, state, curVal); // track changed props\n\n          !changedProps.hasOwnProperty(prop) && (changedProps[prop] = curVal);\n\n          if (redigest) {\n            digest();\n          }\n\n          return comp;\n        };\n      }\n    }); // Other methods\n\n    Object.keys(methods).forEach(function (methodName) {\n      comp[methodName] = function () {\n        var _methods$methodName;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return (_methods$methodName = methods[methodName]).call.apply(_methods$methodName, [comp, state].concat(args));\n      };\n    }); // Link aliases\n\n    Object.entries(aliases).forEach(function (_ref4) {\n      var _ref5 = _slicedToArray(_ref4, 2),\n          alias = _ref5[0],\n          target = _ref5[1];\n\n      return comp[alias] = comp[target];\n    }); // Reset all component props to their default value\n\n    comp.resetProps = function () {\n      props.forEach(function (prop) {\n        comp[prop.name](prop.defaultVal);\n      });\n      return comp;\n    }; //\n\n\n    comp.resetProps(); // Apply all prop defaults\n\n    state._rerender = digest; // Expose digest method\n\n    return comp;\n  };\n}\n\nexport default index;\n"]},"metadata":{},"sourceType":"module"}