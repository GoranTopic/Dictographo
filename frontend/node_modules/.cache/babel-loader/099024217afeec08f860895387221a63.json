{"ast":null,"code":"import _toConsumableArray from\"/home/telix/dictographo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React,{useCallback}from'react';import{Graph}from\"react-d3-graph\";import{onClickNode}from'../../node_functions';import{colors,graphConfig}from\"../../myConfig\";//import d3Switcher from \"./d3Switcher\";\nimport ForceGraph2D from'react-force-graph-2d';import ForceGraph3D from'react-force-graph-3d';import SpriteText from'three-spritetext';//import ForceGraphVR from 'react-force-graph-vr';\n//import ForceGraphAR from 'react-force-graph-ar';\n/*\n * =======================================\n *      Graph Componente for React \n * =======================================\n */function GraphContainer(_ref){var state=_ref.state,dispatchState=_ref.dispatchState;var handleClick=useCallback(function(nodeId){//  handle click of node\nonClickNode(nodeId,state,dispatchState);},[state,dispatchState]);var chosenGraph=function chosenGraph(type){switch(type){case'd3':return/*#__PURE__*/React.createElement(Graph,{id:\"graph-id\"// id is mandatory, \n// if no id is defined rd3g will throw an error\n,data:state.d3Data,onClickNode:handleClick,config:graphConfig});case'2D':return/*#__PURE__*/React.createElement(ForceGraph2D,{graphData:state.forceData,onNodeClick:handleClick,nodeLabel:\"id\",nodeRelSize:5,enableNodeDrag:true,linkDirectionalArrowLength:1,linkDirectionalArrowRelPos:1,linkDirectionalParticles:0.5,linkDirectionalParticleSpeed:0.005,linkDirectionalParticleWidth:3,linkWidth:1.8,onNodeDragEnd:function onNodeDragEnd(node){node.fx=node.x;node.fy=node.y;node.fz=node.z;},nodeCanvasObject:function nodeCanvasObject(node,ctx,globalScale){var label=node.id;var fontSize=15/globalScale;ctx.font=\"\".concat(fontSize,\"px Sans-Serif\");var textWidth=ctx.measureText(label).width;var bckgDimensions=[textWidth,fontSize].map(function(n){return n+fontSize*0.3;});// some padding\nctx.fillStyle='rgba(255, 255, 255, 0.8)';ctx.fillRect.apply(ctx,[node.x-bckgDimensions[0]/2,node.y-bckgDimensions[1]/2].concat(_toConsumableArray(bckgDimensions)));ctx.textAlign='center';ctx.textBaseline='middle';ctx.fillStyle=node.color;ctx.fillText(label,node.x,node.y);}});case'3D':return/*#__PURE__*/React.createElement(ForceGraph3D,{graphData:state.forceData,onNodeClick:handleClick,nodeLabel:\"id\",enableNodeDrag:true,linkDirectionalArrowRelPos:1,linkDirectionalArrowLength:1,backgroundColor:'black',linkDirectionalParticles:2,linkDirectionalParticleSpeed:0.03,linkDirectionalParticleWidth:1,linkWidth:0.8,onNodeDragEnd:function onNodeDragEnd(node){node.fx=node.x;node.fy=node.y;node.fz=node.z;},nodeThreeObject:function nodeThreeObject(node){var sprite=new SpriteText(node.id);//sprite.color = (node.selected)? colors.node.selected : (node.color === colors.node.done)? colors.node.default : colors.node.done\nsprite.color=node.color===colors.node.selected?node.color:node.color===colors.node.done?colors.node.default:colors.node.done;sprite.textHeight=8;return sprite;}});default://console.log(state)\nreturn/*#__PURE__*/React.createElement(Graph,{id:\"graph-id\"// id is mandatory, \n// if no id is defined rd3g will throw an error\n,data:state,config:graphConfig,onClickNode:handleClick});}};return/*#__PURE__*/React.createElement(\"div\",{style:{backgroundImage:'url(./grid.png)'}},chosenGraph(state.graphType));}export default GraphContainer;","map":{"version":3,"sources":["/home/telix/dictographo/frontend/src/Components/Graph/Graph.js"],"names":["React","useCallback","Graph","onClickNode","colors","graphConfig","ForceGraph2D","ForceGraph3D","SpriteText","GraphContainer","state","dispatchState","handleClick","nodeId","chosenGraph","type","d3Data","forceData","node","fx","x","fy","y","fz","z","ctx","globalScale","label","id","fontSize","font","textWidth","measureText","width","bckgDimensions","map","n","fillStyle","fillRect","textAlign","textBaseline","color","fillText","sprite","selected","done","default","textHeight","backgroundImage","graphType"],"mappings":"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","sourcesContent":["import React, { useCallback }  from 'react';\nimport { Graph } from \"react-d3-graph\";\nimport { onClickNode } from '../../node_functions';\nimport { colors, graphConfig }  from \"../../myConfig\";\n//import d3Switcher from \"./d3Switcher\";\nimport ForceGraph2D from 'react-force-graph-2d';\nimport ForceGraph3D from 'react-force-graph-3d';\nimport SpriteText from 'three-spritetext';\n//import ForceGraphVR from 'react-force-graph-vr';\n//import ForceGraphAR from 'react-force-graph-ar';\n\n/*\n * =======================================\n *      Graph Componente for React \n * =======================================\n */\n\nfunction GraphContainer({state, dispatchState}){\n\n\t\tconst handleClick = useCallback((nodeId) => {  //  handle click of node\n\t\t\t\tonClickNode(nodeId, state, dispatchState)\n\t\t}, [state, dispatchState]);\n\n\t\tconst chosenGraph = (type) =>{ \n\t\t\t\tswitch(type) {\n\t\t\t\t\t\tcase 'd3':\n\t\t\t\t\t\t\t\treturn <Graph \n\t\t\t\t\t\t\t\t\t\tid=\"graph-id\" \n\t\t\t\t\t\t\t\t\t\t// id is mandatory, \n\t\t\t\t\t\t\t\t\t\t// if no id is defined rd3g will throw an error\n\t\t\t\t\t\t\t\t\t\tdata={state.d3Data}\n\t\t\t\t\t\t\t\t\t\tonClickNode={handleClick}\n\t\t\t\t\t\t\t\t\t\tconfig={graphConfig}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\tcase '2D':\n\t\t\t\t\t\t\t\treturn <ForceGraph2D\n\t\t\t\t\t\t\t\t\t\tgraphData={state.forceData}\n\t\t\t\t\t\t\t\t\t\tonNodeClick={handleClick}\n\t\t\t\t\t\t\t\t\t\tnodeLabel=\"id\"\n\t\t\t\t\t\t\t\t\t\tnodeRelSize={5}\n\t\t\t\t\t\t\t\t\t\tenableNodeDrag={true}\n\t\t\t\t\t\t\t\t\t\tlinkDirectionalArrowLength={1}\n\t\t\t\t\t\t\t\t\t\tlinkDirectionalArrowRelPos={1}\n\t\t\t\t\t\t\t\t\t\tlinkDirectionalParticles={0.5}\n\t\t\t\t\t\t\t\t\t\tlinkDirectionalParticleSpeed={0.005}\n\t\t\t\t\t\t\t\t\t\tlinkDirectionalParticleWidth={3}\n\t\t\t\t\t\t\t\t\t\tlinkWidth={1.8}\n\t\t\t\t\t\t\t\t\t\tonNodeDragEnd={node => {\n\t\t\t\t\t\t\t\t\t\t\t\tnode.fx = node.x;\n\t\t\t\t\t\t\t\t\t\t\t\tnode.fy = node.y;\n\t\t\t\t\t\t\t\t\t\t\t\tnode.fz = node.z;\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tnodeCanvasObject={(node, ctx, globalScale) => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst label = node.id;\n\t\t\t\t\t\t\t\t\t\t\t\tconst fontSize = 15/(globalScale);\n\t\t\t\t\t\t\t\t\t\t\t\tctx.font = `${fontSize}px Sans-Serif`;\n\t\t\t\t\t\t\t\t\t\t\t\tconst textWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\t\t\t\t\tconst bckgDimensions = [textWidth, fontSize].map(n => \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tn + fontSize * 0.3); // some padding\n\t\t\t\t\t\t\t\t\t\t\t\tctx.fillStyle = 'rgba(255, 255, 255, 0.8)';\n\t\t\t\t\t\t\t\t\t\t\t\tctx.fillRect(node.x - bckgDimensions[0]/2, node.y - bckgDimensions[1]/2, ...bckgDimensions);\n\t\t\t\t\t\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t\t\t\t\t\t\tctx.fillStyle = node.color;\n\t\t\t\t\t\t\t\t\t\t\t\tctx.fillText(label, node.x, node.y);\n\t\t\t\t\t\t\t\t\t\t\t\t          \n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>;\n\t\t\t\t\t\tcase '3D':\n\t\t\t\t\t\t\t\treturn <ForceGraph3D\n\t\t\t\t\t\t\t\t\t\tgraphData={state.forceData}\n\t\t\t\t\t\t\t\t\t\tonNodeClick={handleClick}\n\t\t\t\t\t\t\t\t\t\tnodeLabel=\"id\"\n\t\t\t\t\t\t\t\t\t\tenableNodeDrag={true}\n\t\t\t\t\t\t\t\t\t\tlinkDirectionalArrowRelPos={1}\n\t\t\t\t\t\t\t\t\t\tlinkDirectionalArrowLength={1}\n\t\t\t\t\t\t\t\t\t\tbackgroundColor={'black'}\n\t\t\t\t\t\t\t\t\t\tlinkDirectionalParticles={2}\n\t\t\t\t\t\t\t\t\t\tlinkDirectionalParticleSpeed={0.03}\n\t\t\t\t\t\t\t\t\t\tlinkDirectionalParticleWidth={1}\n\t\t\t\t\t\t\t\t\t\tlinkWidth={0.8}\n\t\t\t\t\t\t\t\t\t\tonNodeDragEnd={node => {\n\t\t\t\t\t\t\t\t\t\t\t\tnode.fx = node.x;\n\t\t\t\t\t\t\t\t\t\t\t\tnode.fy = node.y;\n\t\t\t\t\t\t\t\t\t\t\t\tnode.fz = node.z;\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tnodeThreeObject={node => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst sprite = new SpriteText(node.id);\n\t\t\t\t\t\t\t\t\t\t\t\t//sprite.color = (node.selected)? colors.node.selected : (node.color === colors.node.done)? colors.node.default : colors.node.done\n\t\t\t\t\t\t\t\t\t\t\t\tsprite.color = (node.color === colors.node.selected)? node.color : (node.color === colors.node.done)? colors.node.default : colors.node.done;\n\t\t\t\t\t\t\t\t\t\t\t\tsprite.textHeight = 8;\n\t\t\t\t\t\t\t\t\t\t\t\treturn sprite;\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t//console.log(state)\n\t\t\t\t\t\t\t\treturn <Graph \n\t\t\t\t\t\t\t\t\t\tid=\"graph-id\" \n\t\t\t\t\t\t\t\t\t\t// id is mandatory, \n\t\t\t\t\t\t\t\t\t\t// if no id is defined rd3g will throw an error\n\t\t\t\t\t\t\t\t\t\tdata={state}\n\t\t\t\t\t\t\t\t\t\tconfig={graphConfig}\n\t\t\t\t\t\t\t\t\t\tonClickNode={handleClick}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t} \n\t\t}\n\n\n\t\treturn <div style={{backgroundImage: 'url(./grid.png)'}} >\n\t\t\t\t{chosenGraph(state.graphType)}\n\t\t</div>\n\t\t\n}\n\nexport default GraphContainer;\n"]},"metadata":{},"sourceType":"module"}