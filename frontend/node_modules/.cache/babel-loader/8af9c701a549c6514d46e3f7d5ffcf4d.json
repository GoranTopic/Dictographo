{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nmodule.exports = function (_ref) {\n  var data = _ref.data;\n  var multiSection = _ref.multiSection;\n\n  function nextNonEmptySectionIndex(sectionIndex) {\n    if (sectionIndex === null) {\n      sectionIndex = 0;\n    } else {\n      sectionIndex++;\n    }\n\n    while (sectionIndex < data.length && data[sectionIndex] === 0) {\n      sectionIndex++;\n    }\n\n    return sectionIndex === data.length ? null : sectionIndex;\n  }\n\n  function prevNonEmptySectionIndex(sectionIndex) {\n    if (sectionIndex === null) {\n      sectionIndex = data.length - 1;\n    } else {\n      sectionIndex--;\n    }\n\n    while (sectionIndex >= 0 && data[sectionIndex] === 0) {\n      sectionIndex--;\n    }\n\n    return sectionIndex === -1 ? null : sectionIndex;\n  }\n\n  function next(position) {\n    var _position = _slicedToArray(position, 2);\n\n    var sectionIndex = _position[0];\n    var itemIndex = _position[1];\n\n    if (multiSection) {\n      if (itemIndex === null || itemIndex === data[sectionIndex] - 1) {\n        sectionIndex = nextNonEmptySectionIndex(sectionIndex);\n\n        if (sectionIndex === null) {\n          return [null, null];\n        }\n\n        return [sectionIndex, 0];\n      }\n\n      return [sectionIndex, itemIndex + 1];\n    }\n\n    if (data === 0 || itemIndex === data - 1) {\n      return [null, null];\n    }\n\n    if (itemIndex === null) {\n      return [null, 0];\n    }\n\n    return [null, itemIndex + 1];\n  }\n\n  function prev(position) {\n    var _position2 = _slicedToArray(position, 2);\n\n    var sectionIndex = _position2[0];\n    var itemIndex = _position2[1];\n\n    if (multiSection) {\n      if (itemIndex === null || itemIndex === 0) {\n        sectionIndex = prevNonEmptySectionIndex(sectionIndex);\n\n        if (sectionIndex === null) {\n          return [null, null];\n        }\n\n        return [sectionIndex, data[sectionIndex] - 1];\n      }\n\n      return [sectionIndex, itemIndex - 1];\n    }\n\n    if (data === 0 || itemIndex === 0) {\n      return [null, null];\n    }\n\n    if (itemIndex === null) {\n      return [null, data - 1];\n    }\n\n    return [null, itemIndex - 1];\n  }\n\n  function isLast(position) {\n    return next(position)[1] === null;\n  }\n\n  return {\n    next: next,\n    prev: prev,\n    isLast: isLast\n  };\n};","map":{"version":3,"sources":["/home/telix/dictographo/frontend/node_modules/section-iterator/dist/index.js"],"names":["_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","value","length","err","Array","isArray","Object","TypeError","module","exports","_ref","data","multiSection","nextNonEmptySectionIndex","sectionIndex","prevNonEmptySectionIndex","position","_position","itemIndex","prev","_position2","isLast"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nmodule.exports = function (_ref) {\n  var data = _ref.data;\n  var multiSection = _ref.multiSection;\n\n  function nextNonEmptySectionIndex(sectionIndex) {\n    if (sectionIndex === null) {\n      sectionIndex = 0;\n    } else {\n      sectionIndex++;\n    }\n\n    while (sectionIndex < data.length && data[sectionIndex] === 0) {\n      sectionIndex++;\n    }\n\n    return sectionIndex === data.length ? null : sectionIndex;\n  }\n\n  function prevNonEmptySectionIndex(sectionIndex) {\n    if (sectionIndex === null) {\n      sectionIndex = data.length - 1;\n    } else {\n      sectionIndex--;\n    }\n\n    while (sectionIndex >= 0 && data[sectionIndex] === 0) {\n      sectionIndex--;\n    }\n\n    return sectionIndex === -1 ? null : sectionIndex;\n  }\n\n  function next(position) {\n    var _position = _slicedToArray(position, 2);\n\n    var sectionIndex = _position[0];\n    var itemIndex = _position[1];\n\n\n    if (multiSection) {\n      if (itemIndex === null || itemIndex === data[sectionIndex] - 1) {\n        sectionIndex = nextNonEmptySectionIndex(sectionIndex);\n\n        if (sectionIndex === null) {\n          return [null, null];\n        }\n\n        return [sectionIndex, 0];\n      }\n\n      return [sectionIndex, itemIndex + 1];\n    }\n\n    if (data === 0 || itemIndex === data - 1) {\n      return [null, null];\n    }\n\n    if (itemIndex === null) {\n      return [null, 0];\n    }\n\n    return [null, itemIndex + 1];\n  }\n\n  function prev(position) {\n    var _position2 = _slicedToArray(position, 2);\n\n    var sectionIndex = _position2[0];\n    var itemIndex = _position2[1];\n\n\n    if (multiSection) {\n      if (itemIndex === null || itemIndex === 0) {\n        sectionIndex = prevNonEmptySectionIndex(sectionIndex);\n\n        if (sectionIndex === null) {\n          return [null, null];\n        }\n\n        return [sectionIndex, data[sectionIndex] - 1];\n      }\n\n      return [sectionIndex, itemIndex - 1];\n    }\n\n    if (data === 0 || itemIndex === 0) {\n      return [null, null];\n    }\n\n    if (itemIndex === null) {\n      return [null, data - 1];\n    }\n\n    return [null, itemIndex - 1];\n  }\n\n  function isLast(position) {\n    return next(position)[1] === null;\n  }\n\n  return {\n    next: next,\n    prev: prev,\n    isLast: isLast\n  };\n};\n"]},"metadata":{},"sourceType":"script"}