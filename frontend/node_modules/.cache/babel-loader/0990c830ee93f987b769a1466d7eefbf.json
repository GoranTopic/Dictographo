{"ast":null,"code":"var _jsxFileName = \"/home/telix/dictio-grapho/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { Graph } from \"react-d3-graph\"; // graph payload (with minimalist structure)\n\nconst data = {\n  nodes: [{\n    id: \"Harry\"\n  }, {\n    id: \"Sally\"\n  }, {\n    id: \"Alice\"\n  }],\n  links: [{\n    source: \"Harry\",\n    target: \"Sally\"\n  }, {\n    source: \"Harry\",\n    target: \"Alice\"\n  }]\n}; // the graph configuration, you only need to pass down properties\n// that you want to override, otherwise default ones will be used\n\nconst myConfig = {\n  nodeHighlightBehavior: false,\n  node: {\n    color: \"black\",\n    size: 200,\n    highlightStrokeColor: \"red\"\n  },\n  link: {\n    highlightColor: \"lightblue\"\n  }\n}; // graph event callbacks\n\nconst onClickGraph = function () {};\n\nconst onClickNode = function (nodeId) {\n  window.alert(`Clicked node ${nodeId}`);\n};\n\nconst onDoubleClickNode = function (nodeId) {\n  window.alert(`Double clicked node ${nodeId}`);\n};\n\nconst onRightClickNode = function (event, nodeId) {\n  window.alert(`Right clicked node ${nodeId}`);\n};\n\nconst onMouseOverNode = function (nodeId) {\n  window.alert(`Mouse over node ${nodeId}`);\n};\n\nconst onMouseOutNode = function (nodeId) {\n  window.alert(`Mouse out node ${nodeId}`);\n};\n\nconst onClickLink = function (source, target) {\n  window.alert(`Clicked link between ${source} and ${target}`);\n};\n\nconst onRightClickLink = function (event, source, target) {\n  window.alert(`Right clicked link between ${source} and ${target}`);\n};\n\nconst onMouseOverLink = function (source, target) {\n  window.alert(`Mouse over in link between ${source} and ${target}`);\n};\n\nconst onMouseOutLink = function (source, target) {\n  window.alert(`Mouse out link between ${source} and ${target}`);\n};\n\nconst onNodePositionChange = function (nodeId, x, y) {\n  window.alert(`Node ${nodeId} is moved to new position. New position is x= ${x} y= ${y}`);\n};\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Graph, {\n    id: \"graph-id\" // id is mandatory, if no id is defined rd3g will throw an error\n    ,\n    data: data,\n    config: myConfig,\n    onClickNode: onClickNode,\n    onDoubleClickNode: onDoubleClickNode,\n    onRightClickNode: onRightClickNode,\n    onClickGraph: onClickGraph,\n    onClickLink: onClickLink,\n    onRightClickLink: onRightClickLink,\n    onMouseOverNode: onMouseOverNode,\n    onMouseOutNode: onMouseOutNode,\n    onMouseOverLink: onMouseOverLink,\n    onMouseOutLink: onMouseOutLink,\n    onNodePositionChange: onNodePositionChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 6\n    }\n  }), \";\");\n}\n\nexport default App;","map":{"version":3,"sources":["/home/telix/dictio-grapho/src/App.js"],"names":["React","Graph","data","nodes","id","links","source","target","myConfig","nodeHighlightBehavior","node","color","size","highlightStrokeColor","link","highlightColor","onClickGraph","onClickNode","nodeId","window","alert","onDoubleClickNode","onRightClickNode","event","onMouseOverNode","onMouseOutNode","onClickLink","onRightClickLink","onMouseOverLink","onMouseOutLink","onNodePositionChange","x","y","App"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { Graph } from \"react-d3-graph\";\n\n// graph payload (with minimalist structure)\nconst data = {\n\t\tnodes: [{ id: \"Harry\" }, { id: \"Sally\" }, { id: \"Alice\" }],\n\t\tlinks: [\n\t\t\t\t{ source: \"Harry\", target: \"Sally\" },\n\t\t\t\t{ source: \"Harry\", target: \"Alice\" },\n\t\t],\n};\n\n\n// the graph configuration, you only need to pass down properties\n// that you want to override, otherwise default ones will be used\nconst myConfig = {\n\t\tnodeHighlightBehavior: false,\n\t\tnode: {\n\t\t\t\tcolor: \"black\",\n\t\t\t\tsize: 200,\n\t\t\t\thighlightStrokeColor: \"red\",\n\t\t},\n\t\tlink: {\n\t\t\t\thighlightColor: \"lightblue\",\n\t\t},\n};\n\n// graph event callbacks\nconst onClickGraph = function() {\n};\n\nconst onClickNode = function(nodeId) {\n\t\twindow.alert(`Clicked node ${nodeId}`);\n};\n\nconst onDoubleClickNode = function(nodeId) {\n\t\twindow.alert(`Double clicked node ${nodeId}`);\n};\n\nconst onRightClickNode = function(event, nodeId) {\n\t\twindow.alert(`Right clicked node ${nodeId}`);\n};\n\nconst onMouseOverNode = function(nodeId) {\n\t\twindow.alert(`Mouse over node ${nodeId}`);\n};\n\nconst onMouseOutNode = function(nodeId) {\n\t\twindow.alert(`Mouse out node ${nodeId}`);\n};\n\nconst onClickLink = function(source, target) {\n\t\twindow.alert(`Clicked link between ${source} and ${target}`);\n};\n\nconst onRightClickLink = function(event, source, target) {\n\t\twindow.alert(`Right clicked link between ${source} and ${target}`);\n};\n\nconst onMouseOverLink = function(source, target) {\n\t\twindow.alert(`Mouse over in link between ${source} and ${target}`);\n};\n\nconst onMouseOutLink = function(source, target) {\n\t\twindow.alert(`Mouse out link between ${source} and ${target}`);\n};\n\nconst onNodePositionChange = function(nodeId, x, y) {\n\t\twindow.alert(`Node ${nodeId} is moved to new position. New position is x= ${x} y= ${y}`);\n};\n\n\n\n\nfunction App() {\n\t\treturn (\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<Graph\n\t\t\t\t\t\tid=\"graph-id\" // id is mandatory, if no id is defined rd3g will throw an error\n\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\tconfig={myConfig}\n\t\t\t\t\t\tonClickNode={onClickNode}\n\t\t\t\t\t\tonDoubleClickNode={onDoubleClickNode}\n\t\t\t\t\t\tonRightClickNode={onRightClickNode}\n\t\t\t\t\t\tonClickGraph={onClickGraph}\n\t\t\t\t\t\tonClickLink={onClickLink}\n\t\t\t\t\t\tonRightClickLink={onRightClickLink}\n\t\t\t\t\t\tonMouseOverNode={onMouseOverNode}\n\t\t\t\t\t\tonMouseOutNode={onMouseOutNode}\n\t\t\t\t\t\tonMouseOverLink={onMouseOverLink}\n\t\t\t\t\t\tonMouseOutLink={onMouseOutLink}\n\t\t\t\t\t\tonNodePositionChange={onNodePositionChange}\n\t\t\t\t\t/>;\n\t\t\t\t</div>\n\t\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}