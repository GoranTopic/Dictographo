{"ast":null,"code":"var _jsxFileName = \"/home/telix/dictographo/frontend/src/Components/NavBar.js\";\nimport React from 'react';\nimport { queryNewWord, queryPath } from '../node_functions';\nimport { colors } from \"../myConfig\";\nimport SuggestionsContainer from \"./SearchSuggestion/SearchSuggestion\";\nimport { Nav, Navbar, NavDropdown, Form, FormControl, Button, InputGroup, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSlidersH } from '@fortawesome/free-solid-svg-icons';\n/*\n * ===========================================\n *      NavBar Componente for React \n * ===========================================\n * \t Using ReaactBootStrap to render the navbar\n */\n\nclass NavBarContainer extends React.Componente {\n  constructor(props) {\n    super(props);\n\n    this.handleSearchChange = change => this.props.dispatchState({\n      type: 'SET_SEARCH_TERM',\n      payload: change.target.value\n    });\n\n    this.handleSearchSubmit = () => {\n      /* handle submit search button */\n      // get words if there are multiple of them \n      let words = this.getmultipleWords(state.searchTerm.toLowerCase()); // set all serches to lowercase\n\n      if (words.length > 1) {\n        //if it has more that two words\n        queryPath(words, this.props.state, this.props.dispatchState);\n      } else {\n        // if there is only one word\n        console.log(\"handeling search summit\");\n        queryNewWord(words[0], this.props.state, this.props.dispatchState);\n      }\n    };\n\n    this.getmultipleWords = string => {\n      /* determines qhereteher a string \n       * is compossed of multiple words */\n      //remove multiple spaces\n      //trim, remove multiple and seperate by spaces\n      return string.replace(/  +/g, ' ').trim().split(' ');\n    };\n\n    this.handleRadioGraphChange = changeEvent => dispatchState({\n      type: 'SET_GRAPH_TYPE',\n      payload: changeEvent.target.value\n    });\n\n    this.handleToggleDeepLinks = () => {\n      /* hangles the toggle of the deep links, \n       * resets the graph if there is already a \n       * selected node */\n      let selectedNode = state.selected;\n      if (!state.isEmpty) queryNewWord(selectedNode.id, state, dispatchState);\n      dispatchState({\n        type: 'TOGGLE_DEEP_LINKS'\n      });\n    };\n  } //({ state, dispatchState }){\n  // handle the change by seting the state variable to \n\n\n  render() {\n    return /*#__PURE__*/React.createElement(Navbar, {\n      expand: \"lg\",\n      className: \"justify-content-center\",\n      variant: \"dark\",\n      style: {\n        backgroundColor: colors.black\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"index.html\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"/logo.png\",\n      width: \"150\",\n      height: \"70\",\n      alt: \"React Bootstrap logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Navbar.Brand, {\n      href: \"index.html\",\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, \"Dictographo\")), /*#__PURE__*/React.createElement(InputGroup, {\n      size: \"lg\",\n      md: \"auto\",\n      className: \"pl-3\",\n      style: {\n        maxWidth: \"700px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SuggestionsContainer, {\n      state: this.props.state,\n      dispatchState: dispatchState,\n      handleSearchSubmit: this.handleSearchSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(FormControl, {\n      size: \"lg\",\n      as: \"input\",\n      type: \"text\",\n      placeholder: \"Write some words...\",\n      value: this.props.state.searchTerm,\n      onChange: this.handleSearchChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n      className: \"pr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"lg\",\n      variant: \"outline-info\",\n      onClick: this.handleSearchSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, \"Search\"))), /*#__PURE__*/React.createElement(Navbar.Toggle, {\n      \"aria-controls\": \"responsive-navbar-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Navbar.Collapse, {\n      id: \"basic-navbar-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NavDropdown, {\n      title: \"Options\",\n      icon: /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faSlidersH,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }\n      }),\n      style: {\n        backgroundColor: colors.black\n      },\n      className: \"text-left ml-3 pl-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"switch\",\n      className: \"pb-1 ml-2 text-left\",\n      label: \"Nodes\",\n      value: \"d3\",\n      name: \"formHorizontalRadios\",\n      id: \"d3\",\n      checked: this.props.state.graphType === \"d3\",\n      onChange: this.handleRadioGraphChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"switch\",\n      className: \"pb-1 ml-2 text-left\",\n      label: \"Words\",\n      value: \"2D\",\n      name: \"formHorizontalRadios\",\n      id: \"formHorizontalRadios2\",\n      checked: this.props.state.graphType === \"2D\",\n      onChange: this.handleRadioGraphChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"switch\",\n      className: \"pb-1 ml-2 text-left\",\n      label: \" 3D\",\n      value: \"3D\",\n      name: \"formHorizontalRadios\",\n      id: \"formHorizontalRadios3\",\n      checked: this.props.state.graphType === \"3D\",\n      onChange: this.handleRadioGraphChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(NavDropdown.Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"switch\",\n      className: \"text-center\",\n      id: \"custom-switch\",\n      label: \"Deep Links\",\n      value: this.props.state.isDeepLinks,\n      onChange: this.handleToggleDeepLinks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n}\n\nexport default NavBarContainer;","map":{"version":3,"sources":["/home/telix/dictographo/frontend/src/Components/NavBar.js"],"names":["React","queryNewWord","queryPath","colors","SuggestionsContainer","Nav","Navbar","NavDropdown","Form","FormControl","Button","InputGroup","Col","FontAwesomeIcon","faSlidersH","NavBarContainer","Componente","constructor","props","handleSearchChange","change","dispatchState","type","payload","target","value","handleSearchSubmit","words","getmultipleWords","state","searchTerm","toLowerCase","length","console","log","string","replace","trim","split","handleRadioGraphChange","changeEvent","handleToggleDeepLinks","selectedNode","selected","isEmpty","id","render","backgroundColor","black","maxWidth","graphType","isDeepLinks"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { queryNewWord, queryPath } from '../node_functions';\nimport { colors }  from \"../myConfig\";\nimport SuggestionsContainer from \"./SearchSuggestion/SearchSuggestion\";\nimport { Nav, Navbar, NavDropdown, Form, FormControl, Button, InputGroup, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon  } from '@fortawesome/react-fontawesome'\nimport { faSlidersH } from '@fortawesome/free-solid-svg-icons'\n\n/*\n * ===========================================\n *      NavBar Componente for React \n * ===========================================\n * \t Using ReaactBootStrap to render the navbar\n */\n\nclass NavBarContainer extends React.Componente {  \n\t\tconstructor(props) { \n\t\t\t\tsuper(props); \n\t\t} \n\t\t//({ state, dispatchState }){\n\n\t\t// handle the change by seting the state variable to \n\t\thandleSearchChange = change => \n\t\t\t\tthis.props.dispatchState({ \n\t\t\t\t\t\ttype: 'SET_SEARCH_TERM',\n\t\t\t\t\t\tpayload: change.target.value \n\t\t\t\t});\n\n\t\thandleSearchSubmit = () =>  {\n\t\t\t\t/* handle submit search button */\n\t\t\t\t// get words if there are multiple of them \n\t\t\t\tlet words = this.getmultipleWords(state.searchTerm.toLowerCase());\n\t\t\t\t// set all serches to lowercase\n\t\t\t\tif(words.length > 1){\n\t\t\t\t\t\t//if it has more that two words\n\t\t\t\t\t\tqueryPath(words, this.props.state, this.props.dispatchState);\n\t\t\t\t}else{ \n\t\t\t\t\t\t// if there is only one word\n\t\t\t\t\t\tconsole.log(\"handeling search summit\")\n\t\t\t\t\t\tqueryNewWord(words[0], this.props.state, this.props.dispatchState);\n\t\t\t\t}\n\t\t}\n\n\t\tgetmultipleWords = (string) => {\n\t\t\t\t/* determines qhereteher a string \n\t\t\t\t * is compossed of multiple words */\n\t\t\t\t//remove multiple spaces\n\t\t\t\t//trim, remove multiple and seperate by spaces\n\t\t\t\treturn string.replace(/  +/g, ' ').trim().split(' ') \n\t\t}\n\n\t\thandleRadioGraphChange = (changeEvent) => \n\t\t\t\tdispatchState({type:'SET_GRAPH_TYPE', payload:changeEvent.target.value});\n\n\t\thandleToggleDeepLinks = () => {\n\t\t\t\t/* hangles the toggle of the deep links, \n\t\t\t\t * resets the graph if there is already a \n\t\t\t\t * selected node */\n\t\t\t\tlet selectedNode = state.selected;\n\t\t\t\tif(!state.isEmpty) queryNewWord(selectedNode.id, state, dispatchState);\n\t\t\t\tdispatchState({type:'TOGGLE_DEEP_LINKS'});\n\t\t}\n\n\n\t\trender(){  \n\t\t\t\treturn(\n\t\t\t\t\t\t<Navbar expand=\"lg\" className=\"justify-content-center\"\n\t\t\t\t\t\t\t\tvariant=\"dark\" style={{backgroundColor: colors.black}}>\n\t\t\t\t\t\t\t\t<a href=\"index.html\">\n\t\t\t\t\t\t\t\t\t\t<img src=\"/logo.png\" width=\"150\"\n\t\t\t\t\t\t\t\t\t\t\t\theight=\"70\"\n\t\t\t\t\t\t\t\t\t\t\t\talt=\"React Bootstrap logo\" />\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t<Navbar.Brand href=\"index.html\" className=\"row\"  >\n\t\t\t\t\t\t\t\t\t\t<h1>Dictographo</h1>\n\t\t\t\t\t\t\t\t</Navbar.Brand>\n\t\t\t\t\t\t\t\t<InputGroup  size='lg' md='auto' className=\"pl-3\" style={{maxWidth: \"700px\"}} >\n\t\t\t\t\t\t\t\t\t\t<InputGroup.Prepend>\n\t\t\t\t\t\t\t\t\t\t\t\t<SuggestionsContainer state={this.props.state} dispatchState={dispatchState} handleSearchSubmit={this.handleSearchSubmit}/ >\n\t\t\t\t\t\t\t\t\t\t</InputGroup.Prepend>\n\t\t\t\t\t\t\t\t\t\t<FormControl size=\"lg\" as='input' type=\"text\" placeholder=\"Write some words...\" \n\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.props.state.searchTerm} onChange={this.handleSearchChange}/>\n\t\t\t\t\t\t\t\t\t\t<InputGroup.Append className=\"pr-2\" >\n\t\t\t\t\t\t\t\t\t\t\t\t<Button size=\"lg\" variant=\"outline-info\" onClick={this.handleSearchSubmit}>Search</Button>\n\t\t\t\t\t\t\t\t\t\t</InputGroup.Append>\n\t\t\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t\t\t\t<Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n\t\t\t\t\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\" >\n\t\t\t\t\t\t\t\t\t\t<Nav >\n\t\t\t\t\t\t\t\t\t\t\t\t<NavDropdown \n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Options\" \n\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon={<FontAwesomeIcon icon={faSlidersH}/>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor: colors.black }} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"text-left ml-3 pl-3\"\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Group as={Col}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Check\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"switch\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"pb-1 ml-2 text-left\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Nodes\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"d3\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"formHorizontalRadios\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"d3\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={this.props.state.graphType === \"d3\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleRadioGraphChange}/ >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Check\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"switch\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"pb-1 ml-2 text-left\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Words\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"2D\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"formHorizontalRadios\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"formHorizontalRadios2\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={this.props.state.graphType === \"2D\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleRadioGraphChange} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Check\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"switch\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"pb-1 ml-2 text-left\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\" 3D\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"3D\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"formHorizontalRadios\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"formHorizontalRadios3\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={this.props.state.graphType === \"3D\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleRadioGraphChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<NavDropdown.Divider />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Check \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"switch\" \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"text-center\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"custom-switch\" \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Deep Links\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.props.state.isDeepLinks} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleToggleDeepLinks}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t\t</NavDropdown>\n\t\t\t\t\t\t\t\t\t\t</Nav>\n\t\t\t\t\t\t\t\t</Navbar.Collapse>\n\t\t\t\t\t\t</Navbar>\n\t\t\t\t)\n\t\t}\n}\nexport default NavBarContainer;\n"]},"metadata":{},"sourceType":"module"}