{"ast":null,"code":"var _jsxFileName = \"/home/telix/dictographo/frontend/src/Components/NavBar.js\";\nimport React from 'react';\nimport { colors } from \"./myConfig\";\nimport { Nav, Navbar, NavDropdown, Form, FormControl, Button, Alert, InputGroup } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSlidersH } from '@fortawesome/free-solid-svg-icons';\nimport { API_ENDPOINT } from \"./../myConfig\";\n/*\n * =======================================\n *      NavBar Componente for React \n * =======================================\n * \tUsing ReaactBootStrap to render the navbar\n */\n\nfunction NavBarContainer(props) {\n  const {\n    state,\n    dispatchState,\n    isWordNotFound,\n    processNode,\n    requestSynonymNodes\n  } = props; // handle the change by seting the state variable to \n\n  const handleSearchChange = change => dispatchState({\n    type: 'SET_SEARCH_TERM',\n    payload: change.target.value\n  }); // handle submit search button\n\n\n  const handleSearchSubmit = () => {\n    // console.log(state.search) very conviente\n    fetch(API_ENDPOINT + state.searchTerm).then(result => result.json()).then(result => isWordNotFound(result)).then(result => processNode(result)).then(node => {\n      dispatchState({\n        type: 'SET_SEARCH_NODE',\n        payload: node\n      });\n      return node;\n    }).then(node => requestSynonymNodes(node)).catch(() => dispatchState({\n      type: 'SET_FETCH_FAILED'\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(Navbar, {\n    expand: \"lg\",\n    className: \"justify-content-center\",\n    variant: \"dark\",\n    style: {\n      backgroundColor: colors.black\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"index.html\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/logo.png\",\n    width: \"150\",\n    height: \"70\",\n    alt: \"React Bootstrap logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Navbar.Brand, {\n    href: \"index.html\",\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Dictographo\")), /*#__PURE__*/React.createElement(InputGroup, {\n    size: \"lg\",\n    md: \"auto\",\n    className: \"mx-3\",\n    style: {\n      maxWidth: \"600px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    size: \"lg\",\n    as: \"input\",\n    type: \"text\",\n    placeholder: \"Search\",\n    value: state.searchTerm,\n    onChange: handleSearchChange,\n    onKeyPress: event => event.key === \"Enter\" && handleSearchSubmit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"lg\",\n    variant: \"outline-info\",\n    onClick: handleSearchSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Search\"))), /*#__PURE__*/React.createElement(Navbar.Collapse, {\n    id: \"basic-navbar-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    className: \"ml-auto mx-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NavDropdown, {\n    variant: \"dark\",\n    size: \"lg\",\n    title: \"Options\",\n    icon: /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSlidersH,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }\n    }),\n    id: \"basic-nav-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NavDropdown.Item, {\n    href: \"#action/3.1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Action\"), /*#__PURE__*/React.createElement(NavDropdown.Item, {\n    href: \"#action/3.2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Another action\"), /*#__PURE__*/React.createElement(NavDropdown.Item, {\n    href: \"#action/3.3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Something\"), /*#__PURE__*/React.createElement(NavDropdown.Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"switch\",\n    id: \"custom-switch\",\n    label: \"Deep Links\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default NavBarContainer;","map":{"version":3,"sources":["/home/telix/dictographo/frontend/src/Components/NavBar.js"],"names":["React","colors","Nav","Navbar","NavDropdown","Form","FormControl","Button","Alert","InputGroup","FontAwesomeIcon","faSlidersH","API_ENDPOINT","NavBarContainer","props","state","dispatchState","isWordNotFound","processNode","requestSynonymNodes","handleSearchChange","change","type","payload","target","value","handleSearchSubmit","fetch","searchTerm","then","result","json","node","catch","backgroundColor","black","maxWidth","event","key"],"mappings":"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","sourcesContent":["import React  from 'react';\nimport { colors }  from \"./myConfig\";\nimport { Nav, Navbar, NavDropdown, Form, FormControl, Button, Alert, InputGroup  } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon  } from '@fortawesome/react-fontawesome'\nimport { faSlidersH } from '@fortawesome/free-solid-svg-icons'\nimport { API_ENDPOINT,  }  from \"./../myConfig\";\n\n/*\n * =======================================\n *      NavBar Componente for React \n * =======================================\n * \tUsing ReaactBootStrap to render the navbar\n */\n\nfunction NavBarContainer(props){\n\n\t\tconst {state, dispatchState, isWordNotFound, processNode, requestSynonymNodes} = props;\n\n\t\t// handle the change by seting the state variable to \n\t\tconst handleSearchChange = change => dispatchState({ type: 'SET_SEARCH_TERM', payload: change.target.value });\n\n\t\t// handle submit search button\n\t\tconst handleSearchSubmit = () =>  {\n\t\t\t\t// console.log(state.search) very conviente\n\t\t\t\tfetch(API_ENDPOINT + state.searchTerm)\n\t\t\t\t\t\t.then(result => result.json())\n\t\t\t\t\t\t.then(result => isWordNotFound(result))\n\t\t\t\t\t\t.then(result => processNode(result))\n\t\t\t\t\t\t.then(node => { dispatchState({type: 'SET_SEARCH_NODE', payload: node}); return node; })\n\t\t\t\t\t\t.then(node => requestSynonymNodes(node))\n\t\t\t\t\t\t.catch(() => dispatchState({type:'SET_FETCH_FAILED'}));\n\t\t}\n\n\t\treturn(\n\t\t\t\t<Navbar expand=\"lg\" className=\"justify-content-center\"\n\t\t\t\t\t\tvariant=\"dark\" style={{backgroundColor: colors.black}}>\n\t\t\t\t\t\t<a href=\"index.html\">\n\t\t\t\t\t\t\t\t<img src=\"/logo.png\" width=\"150\"\n\t\t\t\t\t\t\t\t\t\theight=\"70\"\n\t\t\t\t\t\t\t\t\t\talt=\"React Bootstrap logo\" />\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<Navbar.Brand href=\"index.html\" className=\"row\"  >\n\t\t\t\t\t\t\t\t<h1>Dictographo</h1>\n\t\t\t\t\t\t</Navbar.Brand>\n\t\t\t\t\t\t<InputGroup  size='lg' md='auto' className=\"mx-3\" style={{maxWidth: \"600px\"}} >\n\t\t\t\t\t\t\t\t<FormControl size=\"lg\" as='input' type=\"text\" placeholder=\"Search\" \n\t\t\t\t\t\t\t\t\t\tvalue={state.searchTerm} onChange={handleSearchChange} \n\t\t\t\t\t\t\t\t\t\tonKeyPress={event => (event.key === \"Enter\") && handleSearchSubmit()}/>\n\t\t\t\t\t\t\t\t<InputGroup.Append>\n\t\t\t\t\t\t\t\t\t\t<Button size=\"lg\" variant=\"outline-info\" onClick={handleSearchSubmit}>Search</Button>\n\t\t\t\t\t\t\t\t</InputGroup.Append>\n\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t\t\t\t\t<Nav className=\"ml-auto mx-4\">\n\t\t\t\t\t\t\t\t\t\t<NavDropdown variant=\"dark\"\n\t\t\t\t\t\t\t\t\t\t\t\tsize=\"lg\" title=\"Options\" \n\t\t\t\t\t\t\t\t\t\t\t\ticon={<FontAwesomeIcon icon={faSlidersH}/>}\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"basic-nav-dropdown\">\n\t\t\t\t\t\t\t\t\t\t\t\t<NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t<NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t<NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t<NavDropdown.Divider />\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Check type=\"switch\" id=\"custom-switch\" label=\"Deep Links\"/>\n\t\t\t\t\t\t\t\t\t\t</NavDropdown>\n\t\t\t\t\t\t\t\t</Nav>\n\t\t\t\t\t\t</Navbar.Collapse>\n\t\t\t\t</Navbar>\n\t\t)\n}\n\nexport default NavBarContainer;\n"]},"metadata":{},"sourceType":"module"}