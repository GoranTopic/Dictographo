{"ast":null,"code":"import _toConsumableArray from\"/home/telix/dictographo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/telix/dictographo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{colors}from\"../myConfig\";var initial_state={/* graph payload (with minimalist structure) */nodes:[],// the master node information \nlinks:[],//the master links information\nd3Data:{// the copy of data for the d3 graph\nnodes:[],links:[]},forceData:{// th copy of data for the force graphs\nnodes:[],links:[]},selected:{},definedNode:{},graphType:'d3',isError:false,errorMsg:\"\",isFetchFailed:false,isWordNotFound:false,wordsNotFound:[],isPathNotFound:false,pathsNotFound:[],isEmpty:true,isLoading:true,searchTerm:'',DestinationTerm:'',isDeepLinks:false,showModal:false,isSideBar:true};var stateReducer=function stateReducer(state,action){/* make reducer for the words data and internal state */var node;var stringLink;/* finds a node with a given string and colors the node */var findIdNcolor=function findIdNcolor(selectedNode,color){return function(node){return node.id===selectedNode?_objectSpread(_objectSpread({},node),{},{color:color}):node;};};/* reomeves the duplicate node or link in a array */var removeDuplicateWithSet=function removeDuplicateWithSet(array){var jsonObject=array.map(JSON.stringify);var uniqueSet=new Set(jsonObject);var uniqueArray=Array.from(uniqueSet).map(JSON.parse);return uniqueArray;};var removeDuplicateNodes=function removeDuplicateNodes(nodes){var keys=new Set();var uniqueArray=[];nodes.forEach(function(node){if(!keys.has(node.id)){// if it is not in unique keys\nuniqueArray.push(node);keys.add(node.id);}});return uniqueArray;};var removeDuplicateLinks=function removeDuplicateLinks(links){var keys=new Set();var uniqueArray=[];links.forEach(function(link){// if it is an link\nvar id=link.source+','+link.target;if(!keys.has(id)){// if it is not in unique keys\nuniqueArray.push(link);keys.add(id);}});return uniqueArray;};switch(action.type){case'SET_NEW_NODES':return _objectSpread(_objectSpread({},state),{},{nodes:[].concat(_toConsumableArray(state.nodes),_toConsumableArray(action.payload)),d3Data:_objectSpread(_objectSpread({},state.d3Data),{},{nodes:[].concat(_toConsumableArray(state.d3Data.nodes),_toConsumableArray(action.payload))}),forceData:_objectSpread(_objectSpread({},state.forceData),{},{nodes:[].concat(_toConsumableArray(state.forceData.nodes),_toConsumableArray(action.payload))})});case'SET_NEW_LINKS':return _objectSpread(_objectSpread({},state),{},{links:[].concat(_toConsumableArray(state.links),_toConsumableArray(action.payload)),d3Data:_objectSpread(_objectSpread({},state.d3Data),{},{links:[].concat(_toConsumableArray(state.d3Data.links),_toConsumableArray(action.payload))}),forceData:_objectSpread(_objectSpread({},state.forceData),{},{links:[].concat(_toConsumableArray(state.forceData.links),_toConsumableArray(action.payload))})});case'SET_NEW_LINK':stringLink=_objectSpread(_objectSpread({},action.payload),{},{source:action.payload.source.id,target:action.payload.target.id,color:colors.link.default});return _objectSpread(_objectSpread({},state),{},{links:[].concat(_toConsumableArray(state.links),[stringLink]),d3Data:_objectSpread(_objectSpread({},state.d3Data),{},{links:removeDuplicateWithSet([].concat(_toConsumableArray(state.d3Data.links),[stringLink]))}),forceData:_objectSpread(_objectSpread({},state.forceData),{},{links:[].concat(_toConsumableArray(state.forceData.links),[action.payload])})});case'SET_NODE_LINK':stringLink=_objectSpread(_objectSpread({},action.payload.link),{},{source:action.payload.link.source.id,target:action.payload.link.target.id,color:colors.link.default});return _objectSpread(_objectSpread({},state),{},{nodes:removeDuplicateNodes([].concat(_toConsumableArray(state.nodes),[action.payload.node])),links:removeDuplicateLinks([].concat(_toConsumableArray(state.links),[stringLink])),d3Data:_objectSpread(_objectSpread({},state.d3Data),{},{nodes:removeDuplicateNodes([].concat(_toConsumableArray(state.d3Data.nodes),[_objectSpread({},action.payload.node)])),links:removeDuplicateWithSet([].concat(_toConsumableArray(state.d3Data.links),[stringLink]))}),forceData:_objectSpread(_objectSpread({},state.forceData),{},{nodes:[].concat(_toConsumableArray(state.forceData.nodes),[action.payload.node]),links:[].concat(_toConsumableArray(state.forceData.links),[stringLink])})});case'CLEAR_LINKS':return _objectSpread(_objectSpread({},state),{},{links:[],d3Data:_objectSpread(_objectSpread({},state.d3Data),{},{links:[]}),forceData:_objectSpread(_objectSpread({},state.forceData),{},{links:[]})});case'CLEAR_NODES':return _objectSpread(_objectSpread({},state),{},{nodes:[],d3Data:_objectSpread(_objectSpread({},state.d3Data),{},{nodes:[]}),forceData:_objectSpread(_objectSpread({},state.forceData),{},{nodes:[]})});case'SET_STATE':return _objectSpread(_objectSpread({},state),{},{nodes:[].concat(_toConsumableArray(state.nodes),_toConsumableArray(action.payload.nodes)),links:[].concat(_toConsumableArray(state.links),_toConsumableArray(action.payload.links)),d3Data:_objectSpread(_objectSpread({},state.d3Data),{},{nodes:[].concat(_toConsumableArray(state.d3Data.nodes),_toConsumableArray(action.payload.nodes)),links:[].concat(_toConsumableArray(state.d3Data.links),_toConsumableArray(action.payload.links))}),forceData:_objectSpread(_objectSpread({},state.forceData),{},{nodes:[].concat(_toConsumableArray(state.forceData.nodes),_toConsumableArray(action.payload.nodes)),links:[].concat(_toConsumableArray(state.forceData.links),_toConsumableArray(action.payload.links))})});case'SET_NEW_NODE':return _objectSpread(_objectSpread({},state),{},{nodes:[_objectSpread({},action.payload)],links:[],d3Data:_objectSpread(_objectSpread({},state.d3Data),{},{nodes:[_objectSpread(_objectSpread({},action.payload),{},{selected:true,color:colors.node.selected})],links:[]}),forceData:_objectSpread(_objectSpread({},state.forceData),{},{nodes:[action.payload],links:[]}),selected:action.payload,// save as selected\ndefinedNode:action.payload,// save as a definietion \nisEmpty:false});case'SET_PATH_NODE':return _objectSpread(_objectSpread({},state),{},{nodes:[].concat(_toConsumableArray(state.nodes),[_objectSpread(_objectSpread({},action.payload.node),{},{selected:true})]),links:[].concat(_toConsumableArray(state.links),[_objectSpread(_objectSpread({},action.payload.link),{},{color:colors.link.onPath})]),d3Data:_objectSpread(_objectSpread({},state.d3Data),{},{nodes:[].concat(_toConsumableArray(state.d3Data.nodes),[_objectSpread(_objectSpread({},action.payload.node),{},{selected:true})]),links:[].concat(_toConsumableArray(state.d3Data.links),[_objectSpread(_objectSpread({},action.payload.link),{},{color:colors.link.onPath})])}),forceData:_objectSpread(_objectSpread({},state.forceData),{},{nodes:[].concat(_toConsumableArray(state.forceData.nodes),[_objectSpread(_objectSpread({},action.payload.node),{},{selected:true})]),links:[].concat(_toConsumableArray(state.forceData.links),[_objectSpread(_objectSpread({},action.payload.link),{},{color:colors.link.onPath})])}),selected:action.payload.node,// save as selected\ndefinedNode:action.payload.node,// save as a definietion \nisEmpty:false});case'SET_NODE_DONE':return _objectSpread(_objectSpread({},state),{},{d3Data:_objectSpread(_objectSpread({},state.d3Data),{},{nodes:state.d3Data.nodes.map(findIdNcolor(action.payload.id,colors.node.done))}),isEmpty:false});case'SET_DEFINED_NODE':node=state.nodes.filter(function(node){return node.id===action.payload;})[0];return _objectSpread(_objectSpread({},state),{},{definedNode:node});case'SET_NODE_SELECTED':return _objectSpread(_objectSpread({},state),{},{d3Data:_objectSpread(_objectSpread({},state.d3Data),{},{nodes:state.d3Data.nodes.map(findIdNcolor(action.payload.id,colors.node.selected))}),selected:action.payload});case'SWITCH_SELECTED_NODE':return _objectSpread(_objectSpread({},state),{},{d3Data:_objectSpread(_objectSpread({},state.d3Data),{},{nodes:state.d3Data.nodes.map(findIdNcolor(action.payload.id,colors.node.selected))}),selected:action.payload,definedNode:action.payload});case'ERASE_NODES':return _objectSpread(_objectSpread({},state),{},{nodes:[],links:[]});case'SET_SEARCH_TERM':return _objectSpread(_objectSpread({},state),{},{searchTerm:action.payload});case'SET_DEST_TERM':return _objectSpread(_objectSpread({},state),{},{destinationTerm:action.payload});case'TOGGEL_MODAL':return _objectSpread(_objectSpread({},state),{},{showModal:!state.showModal});case'SET_SHOW_MODAL':return _objectSpread(_objectSpread({},state),{},{showModal:action.payload});case'SET_WORD_NOT_FOUND':return _objectSpread(_objectSpread({},state),{},{isError:true,isWordNotFound:true,// add not found wors to list\nwordsNotFound:new Set([].concat(_toConsumableArray(state.wordsNotFound),[action.payload]))});case'SET_PATH_NOT_FOUND':return _objectSpread(_objectSpread({},state),{},{isError:true,isPathNotFound:true,pathsNotFound:new Set([].concat(_toConsumableArray(state.pathsNotFound),[_objectSpread({},action.payload)]))});case'DISSMISS_ERROR':return _objectSpread(_objectSpread({},state),{},{isError:false,errorMsg:\"\",isWordNotFound:false,wordsNotFound:[],isPathNotFound:false,pathsNotFound:[]});case'TOGGLE_DEEP_LINKS':return _objectSpread(_objectSpread({},state),{},{isDeepLinks:!state.isDeepLinks});case'TOGGLE_SIDE_BAR':return _objectSpread(_objectSpread({},state),{},{isSideBar:!state.isSideBar});case'SET_FETCH_FAILED':return _objectSpread(_objectSpread({},state),{},{isError:true,isFetchFailed:true});case'SET_GRAPH_TYPE':return _objectSpread(_objectSpread({},state),{},{// save the previous graph type\nprevGraphType:state.graphType,// set changed graph type\ngraphType:action.payload});case'SET_ERROR':return _objectSpread(_objectSpread({},state),{},{isError:true,errorMsg:action.payload});default:throw new Error();}};export{initial_state,stateReducer};","map":{"version":3,"sources":["/home/telix/dictographo/frontend/src/Components/State.js"],"names":["colors","initial_state","nodes","links","d3Data","forceData","selected","definedNode","graphType","isError","errorMsg","isFetchFailed","isWordNotFound","wordsNotFound","isPathNotFound","pathsNotFound","isEmpty","isLoading","searchTerm","DestinationTerm","isDeepLinks","showModal","isSideBar","stateReducer","state","action","node","stringLink","findIdNcolor","selectedNode","color","id","removeDuplicateWithSet","array","jsonObject","map","JSON","stringify","uniqueSet","Set","uniqueArray","Array","from","parse","removeDuplicateNodes","keys","forEach","has","push","add","removeDuplicateLinks","link","source","target","type","payload","default","onPath","done","filter","destinationTerm","prevGraphType","Error"],"mappings":"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","sourcesContent":["import { colors }  from \"../myConfig\";\n\nconst initial_state = {\n\t\t/* graph payload (with minimalist structure) */\n\t\tnodes: [], // the master node information \n\t\tlinks: [],  //the master links information\n\t\td3Data:{ // the copy of data for the d3 graph\n\t\t\t\tnodes: [],\n\t\t\t\tlinks: [],\n\t\t},\n\t\tforceData:{ // th copy of data for the force graphs\n\t\t\t\tnodes: [],\n\t\t\t\tlinks: [],\n\t\t},\n\t\tselected:{},\n\t\tdefinedNode:{},\n\t\tgraphType: 'd3',\n\t\tisError: false,\n\t\terrorMsg: \"\",\n\t\tisFetchFailed: false,\n\t\tisWordNotFound: false,\n\t\twordsNotFound: [],\n\t\tisPathNotFound: false,\n\t\tpathsNotFound: [],\n\t\tisEmpty: true,\n\t\tisLoading: true,\n\t\tsearchTerm: '',\n\t\tDestinationTerm: '',\n\t\tisDeepLinks: false,\n\t\tshowModal: false,\n\t\tisSideBar: true,\n};\n\nconst stateReducer = (state, action) =>{\n\t\t/* make reducer for the words data and internal state */\n\t\tlet node;\n\t\tlet stringLink \n\n\t\t/* finds a node with a given string and colors the node */\n\t\tconst findIdNcolor = (selectedNode, color) =>\n\t\t\t\t(node) => node.id === selectedNode? {...node, color: color }: node; \n\t\t/* reomeves the duplicate node or link in a array */\n\t\tconst removeDuplicateWithSet = ( array ) =>{\n\t\t\t\tlet jsonObject = array.map(JSON.stringify); \n\t\t\t\tlet uniqueSet = new Set(jsonObject); \n\t\t\t\tlet uniqueArray = Array.from(uniqueSet).map(JSON.parse); \n\t\t\t\treturn uniqueArray\n\t\t}\n\n\t\tconst removeDuplicateNodes = ( nodes ) => {\n\t\t\t\tlet keys = new Set();\n\t\t\t\tlet uniqueArray = [];\n\t\t\t\tnodes.forEach( node => { \n\t\t\t\t\t\tif( !keys.has(node.id)){ \n\t\t\t\t\t\t\t\t// if it is not in unique keys\n\t\t\t\t\t\t\t\tuniqueArray.push(node);\n\t\t\t\t\t\t\t\tkeys.add(node.id);\n\t\t\t\t\t\t} \n\t\t\t\t})\n\t\t\t\treturn uniqueArray;\n\t\t}\n\n\t\tconst removeDuplicateLinks = ( links ) => {\n\t\t\t\tlet keys = new Set();\n\t\t\t\tlet uniqueArray = [];\n\t\t\t\tlinks.forEach( link => {\n\t\t\t\t\t\t// if it is an link\n\t\t\t\t\t\tlet id = link.source + ',' + link.target;\n\t\t\t\t\t\tif( !keys.has(id) ){ \n\t\t\t\t\t\t\t\t// if it is not in unique keys\n\t\t\t\t\t\t\t\tuniqueArray.push(link);\n\t\t\t\t\t\t\t\tkeys.add(id);\n\t\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\treturn uniqueArray;\n\t\t}\n\n\t\tswitch (action.type){\n\t\t\t\tcase 'SET_NEW_NODES':\n\t\t\t\t\t\treturn { \n\t\t\t\t\t\t\t\t...state, \n\t\t\t\t\t\t\t\tnodes: [ ...state.nodes, ...action.payload ],\n\t\t\t\t\t\t\t\td3Data: {\n\t\t\t\t\t\t\t\t\t\t...state.d3Data, \n\t\t\t\t\t\t\t\t\t\tnodes: [ ...state.d3Data.nodes, ...action.payload ],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tforceData: {\n\t\t\t\t\t\t\t\t\t\t...state.forceData, \n\t\t\t\t\t\t\t\t\t\tnodes: [ ...state.forceData.nodes, ...action.payload ],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\tcase 'SET_NEW_LINKS':\n\t\t\t\t\t\treturn { \n\t\t\t\t\t\t\t\t...state, \n\t\t\t\t\t\t\t\tlinks: [ ...state.links, ...action.payload ],\n\t\t\t\t\t\t\t\td3Data: {\n\t\t\t\t\t\t\t\t\t\t...state.d3Data, \n\t\t\t\t\t\t\t\t\t\tlinks: [ ...state.d3Data.links, ...action.payload ],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tforceData: {\n\t\t\t\t\t\t\t\t\t\t...state.forceData, \n\t\t\t\t\t\t\t\t\t\tlinks: [ ...state.forceData.links, ...action.payload ],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\tcase 'SET_NEW_LINK':\n\t\t\t\t\t\tstringLink = { \n\t\t\t\t\t\t\t\t...action.payload, \n\t\t\t\t\t\t\t\tsource:action.payload.source.id,\n\t\t\t\t\t\t\t\ttarget:action.payload.target.id,\n\t\t\t\t\t\t\t\tcolor: colors.link.default,\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn { \n\t\t\t\t\t\t\t\t...state, \n\t\t\t\t\t\t\t\tlinks: [ ...state.links, stringLink ],\n\t\t\t\t\t\t\t\td3Data: {\n\t\t\t\t\t\t\t\t\t\t...state.d3Data, \n\t\t\t\t\t\t\t\t\t\tlinks: removeDuplicateWithSet([ ...state.d3Data.links, stringLink ]),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tforceData: {\n\t\t\t\t\t\t\t\t\t\t...state.forceData, \n\t\t\t\t\t\t\t\t\t\tlinks: [ ...state.forceData.links, action.payload ],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\tcase 'SET_NODE_LINK':\n\t\t\t\t\t\tstringLink = { \n\t\t\t\t\t\t\t\t...action.payload.link, \n\t\t\t\t\t\t\t\tsource:action.payload.link.source.id,\n\t\t\t\t\t\t\t\ttarget:action.payload.link.target.id,\n\t\t\t\t\t\t\t\tcolor: colors.link.default,\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn { \n\t\t\t\t\t\t\t\t...state, \n\t\t\t\t\t\t\t\tnodes: removeDuplicateNodes([ ...state.nodes, action.payload.node ]),\n\t\t\t\t\t\t\t\tlinks: removeDuplicateLinks([ ...state.links, stringLink ]),\n\t\t\t\t\t\t\t\td3Data: {\n\t\t\t\t\t\t\t\t\t\t...state.d3Data, \n\t\t\t\t\t\t\t\t\t\tnodes: removeDuplicateNodes([ ...state.d3Data.nodes, { ...action.payload.node } ]),\n\t\t\t\t\t\t\t\t\t\tlinks: removeDuplicateWithSet([ ...state.d3Data.links, stringLink ]),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tforceData: {\n\t\t\t\t\t\t\t\t\t\t...state.forceData, \n\t\t\t\t\t\t\t\t\t\tnodes: [ ...state.forceData.nodes, action.payload.node ],\n\t\t\t\t\t\t\t\t\t\tlinks: [ ...state.forceData.links, stringLink ],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\tcase 'CLEAR_LINKS':\n\t\t\t\t\t\treturn { \n\t\t\t\t\t\t\t\t...state, \n\t\t\t\t\t\t\t\tlinks: [],\n\t\t\t\t\t\t\t\td3Data: {\n\t\t\t\t\t\t\t\t\t\t...state.d3Data, \n\t\t\t\t\t\t\t\t\t\tlinks: [],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tforceData: {\n\t\t\t\t\t\t\t\t\t\t...state.forceData, \n\t\t\t\t\t\t\t\t\t\tlinks: [],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\tcase 'CLEAR_NODES':\n\t\t\t\t\t\treturn { \n\t\t\t\t\t\t\t\t...state, \n\t\t\t\t\t\t\t\tnodes: [],\n\t\t\t\t\t\t\t\td3Data: {\n\t\t\t\t\t\t\t\t\t\t...state.d3Data, \n\t\t\t\t\t\t\t\t\t\tnodes: [],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tforceData: {\n\t\t\t\t\t\t\t\t\t\t...state.forceData, \n\t\t\t\t\t\t\t\t\t\tnodes: [],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\tcase 'SET_STATE':\n\t\t\t\t\t\treturn { \n\t\t\t\t\t\t\t\t...state, \n\t\t\t\t\t\t\t\tnodes: [ ...state.nodes, ...action.payload.nodes ],\n\t\t\t\t\t\t\t\tlinks: [ ...state.links, ...action.payload.links ],\n\t\t\t\t\t\t\t\td3Data: {\n\t\t\t\t\t\t\t\t\t\t...state.d3Data, \n\t\t\t\t\t\t\t\t\t\tnodes: [ ...state.d3Data.nodes, ...action.payload.nodes ],\n\t\t\t\t\t\t\t\t\t\tlinks: [ ...state.d3Data.links, ...action.payload.links ],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tforceData: {\n\t\t\t\t\t\t\t\t\t\t...state.forceData, \n\t\t\t\t\t\t\t\t\t\tnodes: [ ...state.forceData.nodes, ...action.payload.nodes ],\n\t\t\t\t\t\t\t\t\t\tlinks: [ ...state.forceData.links, ...action.payload.links ],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\tcase 'SET_NEW_NODE':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tnodes: [ { ...action.payload} ],\n\t\t\t\t\t\t\t\tlinks: [],\n\t\t\t\t\t\t\t\td3Data: {\n\t\t\t\t\t\t\t\t\t\t...state.d3Data, \n\t\t\t\t\t\t\t\t\t\tnodes: [{ ...action.payload, selected: true, color: colors.node.selected  }],\n\t\t\t\t\t\t\t\t\t\tlinks: [],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tforceData: {\n\t\t\t\t\t\t\t\t\t\t...state.forceData, \n\t\t\t\t\t\t\t\t\t\tnodes: [ action.payload  ],\n\t\t\t\t\t\t\t\t\t\tlinks: [],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tselected: action.payload, // save as selected\n\t\t\t\t\t\t\t\tdefinedNode: action.payload, // save as a definietion \n\t\t\t\t\t\t\t\tisEmpty: false,\n\t\t\t\t\t\t};\n\t\t\t\tcase 'SET_PATH_NODE':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tnodes: [ ...state.nodes, { ...action.payload.node, selected: true, }],\n\t\t\t\t\t\t\t\tlinks: [ ...state.links, { ...action.payload.link, color: colors.link.onPath } ],\n\t\t\t\t\t\t\t\td3Data: {\n\t\t\t\t\t\t\t\t\t\t...state.d3Data, \n\t\t\t\t\t\t\t\t\t\tnodes: [ ...state.d3Data.nodes, { ...action.payload.node, selected: true, }],\n\t\t\t\t\t\t\t\t\t\tlinks: [ ...state.d3Data.links, { ...action.payload.link, color: colors.link.onPath } ],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tforceData: {\n\t\t\t\t\t\t\t\t\t\t...state.forceData, \n\t\t\t\t\t\t\t\t\t\tnodes: [ ...state.forceData.nodes, { ...action.payload.node, selected: true, }],\n\t\t\t\t\t\t\t\t\t\tlinks: [ ...state.forceData.links, { ...action.payload.link, color: colors.link.onPath } ],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tselected: action.payload.node, // save as selected\n\t\t\t\t\t\t\t\tdefinedNode: action.payload.node, // save as a definietion \n\t\t\t\t\t\t\t\tisEmpty: false,\n\t\t\t\t\t\t};\n\t\t\t\tcase 'SET_NODE_DONE':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\td3Data: {\n\t\t\t\t\t\t\t\t\t\t...state.d3Data, \n\t\t\t\t\t\t\t\t\t\tnodes: state.d3Data.nodes.map(findIdNcolor(action.payload.id, colors.node.done)), \n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tisEmpty: false,\n\t\t\t\t\t\t};\n\t\t\t\tcase 'SET_DEFINED_NODE':\n\t\t\t\t\t\tnode = state.nodes.filter( node => node.id === action.payload )[0];\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tdefinedNode: node,\n\t\t\t\t\t\t};\n\t\t\t\tcase 'SET_NODE_SELECTED':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\td3Data: {\n\t\t\t\t\t\t\t\t\t\t...state.d3Data, \n\t\t\t\t\t\t\t\t\t\tnodes: state.d3Data.nodes.map(findIdNcolor(action.payload.id, colors.node.selected)), \n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tselected: action.payload,\n\t\t\t\t\t\t};\n\t\t\t\tcase 'SWITCH_SELECTED_NODE':\n\t\t\t\t\t\treturn { \n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\td3Data: {\n\t\t\t\t\t\t\t\t\t\t...state.d3Data, \n\t\t\t\t\t\t\t\t\t\tnodes: state.d3Data.nodes.map(findIdNcolor(action.payload.id, colors.node.selected)), \n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tselected: action.payload,\n\t\t\t\t\t\t\t\tdefinedNode: action.payload,\n\t\t\t\t\t\t};\n\n\t\t\t\tcase 'ERASE_NODES':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tnodes: [],\n\t\t\t\t\t\t\t\tlinks: [],\n\t\t\t\t\t\t};\n\t\t\t\tcase 'SET_SEARCH_TERM':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tsearchTerm: action.payload,\t\t\t\t\n\t\t\t\t\t\t};\n\t\t\t\tcase 'SET_DEST_TERM':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tdestinationTerm: action.payload,\n\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tcase 'TOGGEL_MODAL':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tshowModal: !state.showModal,\n\t\t\t\t\t\t};\n\t\t\t\tcase 'SET_SHOW_MODAL':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tshowModal: action.payload,\n\t\t\t\t\t\t};\n\t\t\t\tcase 'SET_WORD_NOT_FOUND':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tisError: true,\n\t\t\t\t\t\t\t\tisWordNotFound: true,\n\t\t\t\t\t\t\t\t// add not found wors to list\n\t\t\t\t\t\t\t\twordsNotFound: new Set([ ...state.wordsNotFound, action.payload]),\n\t\t\t\t\t\t};\n\t\t\t\tcase 'SET_PATH_NOT_FOUND':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tisError: true,\n\t\t\t\t\t\t\t\tisPathNotFound: true,\n\t\t\t\t\t\t\t\tpathsNotFound: new Set([ ...state.pathsNotFound, { ...action.payload}]),\n\t\t\t\t\t\t};\n\t\t\t\tcase 'DISSMISS_ERROR':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tisError: false,\n\t\t\t\t\t\t\t\terrorMsg: \"\",\n\t\t\t\t\t\t\t\tisWordNotFound: false,\n\t\t\t\t\t\t\t\twordsNotFound: [],\n\t\t\t\t\t\t\t\tisPathNotFound: false,\n\t\t\t\t\t\t\t\tpathsNotFound:  [],\n\t\t\t\t\t\t};\n\t\t\t\tcase 'TOGGLE_DEEP_LINKS':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tisDeepLinks: !state.isDeepLinks,\n\t\t\t\t\t\t};\n\t\t\t\tcase 'TOGGLE_SIDE_BAR':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tisSideBar: !state.isSideBar,\n\t\t\t\t\t\t};\n\t\t\t\tcase 'SET_FETCH_FAILED':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tisError: true,\n\t\t\t\t\t\t\t\tisFetchFailed: true,\n\t\t\t\t\t\t};\n\t\t\t\tcase 'SET_GRAPH_TYPE':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\t// save the previous graph type\n\t\t\t\t\t\t\t\tprevGraphType : state.graphType,\n\t\t\t\t\t\t\t\t// set changed graph type\n\t\t\t\t\t\t\t\tgraphType: action.payload,\n\t\t\t\t\t\t};\n\t\t\t\tcase 'SET_ERROR':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tisError: true,\n\t\t\t\t\t\t\t\terrorMsg: action.payload,\n\t\t\t\t\t\t};\n\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error();\n\t\t}\n}\n\nexport { initial_state, stateReducer };\n\n"]},"metadata":{},"sourceType":"module"}