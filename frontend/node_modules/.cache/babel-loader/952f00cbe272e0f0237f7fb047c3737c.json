{"ast":null,"code":"import React from'react';import{queryNewWord,queryPath}from'../node_functions';import{colors}from\"../myConfig\";import SuggestionsContainer from\"./SearchSuggestion/SearchSuggestion\";import{Nav,Navbar,NavDropdown,Form,FormControl,Button,InputGroup}from'react-bootstrap';import'bootstrap/dist/css/bootstrap.min.css';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faSlidersH}from'@fortawesome/free-solid-svg-icons';/*\n * =======================================\n *      NavBar Componente for React \n * =======================================\n * \t Using ReaactBootStrap to render the navbar\n */function NavBarContainer(_ref){var state=_ref.state,dispatchState=_ref.dispatchState;// handle the change by seting the state variable to \nvar handleSearchChange=function handleSearchChange(change){return dispatchState({type:'SET_SEARCH_TERM',payload:change.target.value});};var handleSearchSubmit=function handleSearchSubmit(){/* handle submit search button */var words=getmultipleWords(state.searchTerm.toLowerCase());// set all serches to lowercase\nif(words.length>1){//if it has more that two words\nqueryPath(words,state,dispatchState);}else{// if there is only one word\nqueryNewWord(words[0],state,dispatchState);}};var getmultipleWords=function getmultipleWords(string){/* determines qhereteher a string \n\t\t\t\t * is compossed of multiple words */ //remove multiple spaces\n//trim, remove multiple and seperate by spaces\nreturn string.replace(/  +/g,' ').trim().split(' ');};var handleToggleDeepLinks=function handleToggleDeepLinks(){/* hangles the toggle of the deep links, \n\t\t\t\t * resets the graph if there is already a \n\t\t\t\t * selected node */var selectedNode=state.selected;if(!state.isEmpty)queryNewWord(selectedNode.id,state,dispatchState);dispatchState({type:'TOGGLE_DEEP_LINKS'});};return/*#__PURE__*/React.createElement(Navbar,{expand:\"lg\",className:\"justify-content-center\",variant:\"dark\",style:{backgroundColor:colors.black}},/*#__PURE__*/React.createElement(\"a\",{href:\"index.html\"},/*#__PURE__*/React.createElement(\"img\",{src:\"/logo.png\",width:\"150\",height:\"70\",alt:\"React Bootstrap logo\"})),/*#__PURE__*/React.createElement(Navbar.Brand,{href:\"index.html\",className:\"row\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Dictographo\")),/*#__PURE__*/React.createElement(SuggestionsContainer,{state:state,dispatchState:dispatchState},/*#__PURE__*/React.createElement(InputGroup,{size:\"lg\",md:\"auto\",className:\"mx-3\",style:{maxWidth:\"600px\"}},/*#__PURE__*/React.createElement(FormControl,{size:\"lg\",as:\"input\",type:\"text\",placeholder:\"Write some words here...\",value:state.searchTerm,onChange:handleSearchChange}),/*#__PURE__*/React.createElement(InputGroup.Append,null,/*#__PURE__*/React.createElement(Button,{size:\"lg\",variant:\"outline-info\",onClick:handleSearchSubmit},\"Search\")))),/*#__PURE__*/React.createElement(Navbar.Collapse,{id:\"basic-navbar-nav\"},/*#__PURE__*/React.createElement(Nav,{className:\"ml-auto mx-4\"},/*#__PURE__*/React.createElement(NavDropdown,{variant:\"dark\",size:\"lg\",title:\"Options\",icon:/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSlidersH}),id:\"basic-nav-dropdown\"},/*#__PURE__*/React.createElement(NavDropdown.Divider,null),/*#__PURE__*/React.createElement(Form.Check,{type:\"switch\",id:\"custom-switch\",label:\"Deep Links\",value:state.isDeepLinks,onChange:handleToggleDeepLinks})))));}export default NavBarContainer;","map":{"version":3,"sources":["/home/telix/dictographo/frontend/src/Components/NavBar.js"],"names":["React","queryNewWord","queryPath","colors","SuggestionsContainer","Nav","Navbar","NavDropdown","Form","FormControl","Button","InputGroup","FontAwesomeIcon","faSlidersH","NavBarContainer","state","dispatchState","handleSearchChange","change","type","payload","target","value","handleSearchSubmit","words","getmultipleWords","searchTerm","toLowerCase","length","string","replace","trim","split","handleToggleDeepLinks","selectedNode","selected","isEmpty","id","backgroundColor","black","maxWidth","isDeepLinks"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { queryNewWord, queryPath } from '../node_functions';\nimport { colors }  from \"../myConfig\";\nimport SuggestionsContainer from \"./SearchSuggestion/SearchSuggestion\";\nimport { Nav, Navbar, NavDropdown, Form, FormControl, Button, InputGroup } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon  } from '@fortawesome/react-fontawesome'\nimport { faSlidersH } from '@fortawesome/free-solid-svg-icons'\n/*\n * =======================================\n *      NavBar Componente for React \n * =======================================\n * \t Using ReaactBootStrap to render the navbar\n */\n\nfunction NavBarContainer({ state, dispatchState }){\n\n\t\t// handle the change by seting the state variable to \n\t\tconst handleSearchChange = change => \n\t\t\t\tdispatchState({ \n\t\t\t\t\t\ttype: 'SET_SEARCH_TERM',\n\t\t\t\t\t\tpayload: change.target.value \n\t\t\t\t});\n\n\t\tconst handleSearchSubmit = () =>  {\n\t\t\t\t/* handle submit search button */\n\t\t\t\tlet words = getmultipleWords(state.searchTerm.toLowerCase());\n\t\t\t\t// set all serches to lowercase\n\t\t\t\tif(words.length > 1){\n\t\t\t\t\t\t//if it has more that two words\n\t\t\t\t\t\tqueryPath(words, state, dispatchState);\n\t\t\t\t}else{ \n\t\t\t\t\t\t// if there is only one word\n\t\t\t\t\t\tqueryNewWord(words[0], state, dispatchState);\n\t\t\t\t}\n\t\t}\n\n\t\tconst getmultipleWords = (string) => {\n\t\t\t\t/* determines qhereteher a string \n\t\t\t\t * is compossed of multiple words */\n\t\t\t\t//remove multiple spaces\n\t\t\t\t//trim, remove multiple and seperate by spaces\n\t\t\t\treturn string.replace(/  +/g, ' ').trim().split(' ') \n\t\t}\n\n\t\tconst handleToggleDeepLinks = () => {\n\t\t\t\t/* hangles the toggle of the deep links, \n\t\t\t\t * resets the graph if there is already a \n\t\t\t\t * selected node */\n\t\t\t\tlet selectedNode = state.selected;\n\t\t\t\tif(!state.isEmpty) queryNewWord(selectedNode.id, state, dispatchState);\n\t\t\t\tdispatchState({type:'TOGGLE_DEEP_LINKS'});\n\t\t}\n\n\n\t\treturn(\n\t\t\t\t<Navbar expand=\"lg\" className=\"justify-content-center\"\n\t\t\t\t\t\tvariant=\"dark\" style={{backgroundColor: colors.black}}>\n\t\t\t\t\t\t<a href=\"index.html\">\n\t\t\t\t\t\t\t\t<img src=\"/logo.png\" width=\"150\"\n\t\t\t\t\t\t\t\t\t\theight=\"70\"\n\t\t\t\t\t\t\t\t\t\talt=\"React Bootstrap logo\" />\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<Navbar.Brand href=\"index.html\" className=\"row\"  >\n\t\t\t\t\t\t\t\t<h1>Dictographo</h1>\n\t\t\t\t\t\t</Navbar.Brand>\n\t\t\t\t\t\t<SuggestionsContainer\n\t\t\t\t\t\t\t\tstate={state}\n\t\t\t\t\t\t\t\tdispatchState={dispatchState}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<InputGroup  size='lg' md='auto' className=\"mx-3\" style={{maxWidth: \"600px\"}} >\n\t\t\t\t\t\t\t\t\t\t<FormControl size=\"lg\" as='input' type=\"text\" placeholder=\"Write some words here...\" \n\t\t\t\t\t\t\t\t\t\t\t\tvalue={state.searchTerm} onChange={handleSearchChange} />\n\t\t\t\t\t\t\t\t\t\t<InputGroup.Append>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button size=\"lg\" variant=\"outline-info\" onClick={handleSearchSubmit}>Search</Button>\n\t\t\t\t\t\t\t\t\t\t</InputGroup.Append>\n\t\t\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t\t</SuggestionsContainer>\n\t\t\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t\t\t\t\t<Nav className=\"ml-auto mx-4\">\n\t\t\t\t\t\t\t\t\t\t<NavDropdown variant=\"dark\"\n\t\t\t\t\t\t\t\t\t\t\t\tsize=\"lg\" title=\"Options\" \n\t\t\t\t\t\t\t\t\t\t\t\ticon={<FontAwesomeIcon icon={faSlidersH}/>}\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"basic-nav-dropdown\">\n\t\t\t\t\t\t\t\t\t\t\t\t<NavDropdown.Divider />\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Check type=\"switch\" id=\"custom-switch\" label=\"Deep Links\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={state.isDeepLinks} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleToggleDeepLinks}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</NavDropdown>\n\t\t\t\t\t\t\t\t</Nav>\n\t\t\t\t\t\t</Navbar.Collapse>\n\t\t\t\t</Navbar>\n\t\t)\n}\n\nexport default NavBarContainer;\n"]},"metadata":{},"sourceType":"module"}