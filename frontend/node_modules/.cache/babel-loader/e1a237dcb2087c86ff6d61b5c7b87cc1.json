{"ast":null,"code":"import { colors } from \"../myConfig\";\nconst initial_state = {\n  /* graph payload (with minimalist structure) */\n  nodes: [],\n  // the master node information \n  linsk: [],\n  //the master links information\n  d3Data: {\n    // the copy of data for the d3 graph\n    nodes: [],\n    links: []\n  },\n  forceData: {\n    // th copy of data for the force graphs\n    nodes: [],\n    links: []\n  },\n  selected: {},\n  definedNode: {},\n  graphType: '2D',\n  prevGraphType: 'd3',\n  isError: false,\n  errorMsg: \"\",\n  isFetchFailed: false,\n  isWordNotFound: false,\n  wordsNotFound: [],\n  isPathNotFound: false,\n  pathsNotFound: [],\n  isEmpty: true,\n  isLoading: true,\n  searchTerm: '',\n  DestinationTerm: '',\n  isDeepLinks: false,\n  showModal: false,\n  isSideBar: true\n};\n\nconst stateReducer = (state, action) => {\n  /* make reducer for the words data and internal state */\n  let node;\n\n  switch (action.type) {\n    case 'SET_NEW_NODES':\n      return { ...state,\n        nodes: [...state.nodes, ...action.payload],\n        nodes: [...state.nodes, ...action.payload]\n      };\n\n    case 'SET_NEW_LINKS':\n      return { ...state,\n        links: [...state.links, ...action.payload]\n      };\n\n    case 'SET_NEW_LINK':\n      return { ...state,\n        links: [...state.links, action.payload],\n        d3Data: {\n          links: [...state.links, action.payload]\n        }\n      };\n\n    case 'SET_NODE_LINK':\n      return { ...state,\n        nodes: [...state.nodes, action.payload.node],\n        links: [...state.links, action.payload.link],\n        d3Data: {\n          nodes: [...state.nodes, action.payload.node],\n          links: [...state.links, action.payload.link]\n        },\n        forceData: {\n          nodes: [...state.nodes, action.payload.node],\n          links: [...state.links, action.payload.link]\n        }\n      };\n\n    case 'CLEAR_LINKS':\n      return { ...state,\n        links: []\n      };\n\n    case 'CLEAR_NODES':\n      return { ...state,\n        nodes: []\n      };\n\n    case 'SET_STATE':\n      return { ...state,\n        nodes: [...state.nodes, ...action.payload.nodes],\n        links: [...state.links, ...action.payload.links]\n      };\n\n    case 'SET_NEW_NODE':\n      return { ...state,\n        nodes: [{ ...action.payload,\n          selected: true,\n          color: colors.node.selected\n        }],\n        links: [],\n        selected: action.payload,\n        // save as selected\n        definedNode: action.payload,\n        // save as a definietion \n        isEmpty: false\n      };\n\n    case 'SET_PATH_NODE':\n      return { ...state,\n        nodes: [...state.nodes, { ...action.payload.node,\n          selected: true\n        }],\n        links: [...state.links, { ...action.payload.link,\n          color: colors.link.onPath\n        }],\n        selected: action.payload.node,\n        // save as selected\n        definedNode: action.payload.node,\n        // save as a definietion \n        isEmpty: false\n      };\n\n    case 'SET_NODE_DONE':\n      node = state.nodes.filter(node => node.id === action.payload)[0];\n      return { ...state,\n        nodes: [...state.nodes, { ...node,\n          color: colors.node.done\n        }],\n        isEmpty: false\n      };\n\n    case 'SET_DEFINED_NODE':\n      node = state.nodes.filter(node => node.id === action.payload)[0];\n      return { ...state,\n        definedNode: node\n      };\n\n    case 'ERASE_NODES':\n      return { ...state,\n        nodes: [],\n        links: []\n      };\n\n    case 'SET_SEARCH_TERM':\n      return { ...state,\n        searchTerm: action.payload\n      };\n\n    case 'SET_DEST_TERM':\n      return { ...state,\n        destinationTerm: action.payload\n      };\n\n    case 'SET_NODE_SELECTED':\n      return { ...state,\n        // I have the feeling that this i adding oter nodes to te state\n        nodes: [...state.nodes, { ...action.payload,\n          color: colors.node.selected\n        }],\n        // change color\n        selected: action.payload\n      };\n\n    case 'SWITCH_SELECTED_NODE':\n      node = state.nodes.filter(node => node.id === action.payload)[0];\n      return { ...state,\n        nodes: [...state.nodes, { ...state.selected,\n          color: colors.node.done\n        }, { ...node,\n          color: colors.node.selected\n        }],\n        selected: node,\n        definedNode: node\n      };\n\n    case 'TOGGEL_MODAL':\n      return { ...state,\n        showModal: !state.showModal\n      };\n\n    case 'SET_SHOW_MODAL':\n      return { ...state,\n        showModal: action.payload\n      };\n\n    case 'CHANGE_D3_STATE':\n      return { ...state,\n        links: []\n      };\n\n    case 'SET_WORD_NOT_FOUND':\n      return { ...state,\n        isError: true,\n        isWordNotFound: true,\n        // add not found wors to list\n        wordsNotFound: new Set([...state.wordsNotFound, action.payload])\n      };\n\n    case 'SET_PATH_NOT_FOUND':\n      return { ...state,\n        isError: true,\n        isPathNotFound: true,\n        pathsNotFound: new Set([...state.pathsNotFound, { ...action.payload\n        }])\n      };\n\n    case 'DISSMISS_ERROR':\n      return { ...state,\n        isError: false,\n        errorMsg: \"\",\n        isWordNotFound: false,\n        wordsNotFound: [],\n        isPathNotFound: false,\n        pathsNotFound: []\n      };\n\n    case 'TOGGLE_DEEP_LINKS':\n      return { ...state,\n        isDeepLinks: !state.isDeepLinks\n      };\n\n    case 'TOGGLE_SIDE_BAR':\n      return { ...state,\n        isSideBar: !state.isSideBar\n      };\n\n    case 'SET_FETCH_FAILED':\n      return { ...state,\n        isError: true,\n        isFetchFailed: true\n      };\n\n    case 'SET_GRAPH_TYPE':\n      return { ...state,\n        // save the previous graph type\n        prevGraphType: state.graphType,\n        // set changed graph type\n        graphType: action.payload\n      };\n\n    case 'SET_ERROR':\n      return { ...state,\n        isError: true,\n        errorMsg: action.payload\n      };\n\n    default:\n      throw new Error();\n  }\n};\n\nexport { initial_state, stateReducer };","map":{"version":3,"sources":["/home/telix/dictographo/frontend/src/Components/State.js"],"names":["colors","initial_state","nodes","linsk","d3Data","links","forceData","selected","definedNode","graphType","prevGraphType","isError","errorMsg","isFetchFailed","isWordNotFound","wordsNotFound","isPathNotFound","pathsNotFound","isEmpty","isLoading","searchTerm","DestinationTerm","isDeepLinks","showModal","isSideBar","stateReducer","state","action","node","type","payload","link","color","onPath","filter","id","done","destinationTerm","Set","Error"],"mappings":"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","sourcesContent":["import { colors }  from \"../myConfig\";\n\nconst initial_state = {\n\t\t/* graph payload (with minimalist structure) */\n\t\tnodes: [], // the master node information \n\t\tlinsk: [],  //the master links information\n\t\td3Data:{ // the copy of data for the d3 graph\n\t\t\t\tnodes: [],\n\t\t\t\tlinks: [],\n\t\t},\n\t\tforceData:{ // th copy of data for the force graphs\n\t\t\t\tnodes: [],\n\t\t\t\tlinks: [],\n\t\t},\n\t\tselected:{},\n\t\tdefinedNode:{},\n\t\tgraphType: '2D',\n\t\tprevGraphType:  'd3',\n\t\tisError: false,\n\t\terrorMsg: \"\",\n\t\tisFetchFailed: false,\n\t\tisWordNotFound: false,\n\t\twordsNotFound: [],\n\t\tisPathNotFound: false,\n\t\tpathsNotFound: [],\n\t\tisEmpty: true,\n\t\tisLoading: true,\n\t\tsearchTerm: '',\n\t\tDestinationTerm: '',\n\t\tisDeepLinks: false,\n\t\tshowModal: false,\n\t\tisSideBar: true,\n};\n\nconst stateReducer = (state, action) =>{\n\t\t/* make reducer for the words data and internal state */\n\t\tlet node;\n\t\tswitch (action.type){\n\t\t\t\tcase 'SET_NEW_NODES':\n\t\t\t\t\t\treturn { \n\t\t\t\t\t\t\t\t...state, \n\t\t\t\t\t\t\t\tnodes: [ ...state.nodes, ...action.payload ],\n\t\t\t\t\t\t\t\tnodes: [ ...state.nodes, ...action.payload ],\n\t\t\t\t\t\t};\n\t\t\t\tcase 'SET_NEW_LINKS':\n\t\t\t\t\t\treturn { \n\t\t\t\t\t\t\t\t...state, \n\t\t\t\t\t\t\t\tlinks: [ ...state.links, ...action.payload ]\n\t\t\t\t\t\t};\n\t\t\t\tcase 'SET_NEW_LINK':\n\t\t\t\t\t\treturn { \n\t\t\t\t\t\t\t\t...state, \n\t\t\t\t\t\t\t\tlinks: [ ...state.links, action.payload ],\n\t\t\t\t\t\t\t\td3Data: { links: [ ...state.links, action.payload ] },\n\t\t\t\t\t\t};\n\t\t\t\tcase 'SET_NODE_LINK':\n\t\t\t\t\t\treturn { \n\t\t\t\t\t\t\t\t...state, \n\t\t\t\t\t\t\t\tnodes: [ ...state.nodes, action.payload.node ],\n\t\t\t\t\t\t\t\tlinks: [ ...state.links, action.payload.link ],\n\t\t\t\t\t\t\t\td3Data: {\n\t\t\t\t\t\t\t\t\t\tnodes: [ ...state.nodes, action.payload.node ],\n\t\t\t\t\t\t\t\t\t\tlinks: [ ...state.links, action.payload.link ],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tforceData: {\n\t\t\t\t\t\t\t\t\t\tnodes: [ ...state.nodes, action.payload.node ],\n\t\t\t\t\t\t\t\t\t\tlinks: [ ...state.links, action.payload.link ],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\tcase 'CLEAR_LINKS':\n\t\t\t\t\t\treturn { \n\t\t\t\t\t\t\t\t...state, \n\t\t\t\t\t\t\t\tlinks: [],\n\t\t\t\t\t\t};\n\t\t\t\tcase 'CLEAR_NODES':\n\t\t\t\t\t\treturn { \n\t\t\t\t\t\t\t\t...state, \n\t\t\t\t\t\t\t\tnodes: [],\n\t\t\t\t\t\t};\n\t\t\t\tcase 'SET_STATE':\n\t\t\t\t\t\treturn { \n\t\t\t\t\t\t\t\t...state, \n\t\t\t\t\t\t\t\tnodes: [ ...state.nodes, ...action.payload.nodes ],\n\t\t\t\t\t\t\t\tlinks: [ ...state.links, ...action.payload.links ]\n\t\t\t\t\t\t};\n\t\t\t\tcase 'SET_NEW_NODE':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tnodes: [ { ...action.payload, selected: true, color: colors.node.selected  } ],\n\t\t\t\t\t\t\t\tlinks: [],\n\t\t\t\t\t\t\t\tselected: action.payload, // save as selected\n\t\t\t\t\t\t\t\tdefinedNode: action.payload, // save as a definietion \n\t\t\t\t\t\t\t\tisEmpty: false,\n\t\t\t\t\t\t};\n\t\t\t\tcase 'SET_PATH_NODE':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tnodes: [ ...state.nodes, { ...action.payload.node, selected: true, }],\n\t\t\t\t\t\t\t\tlinks: [ ...state.links, { ...action.payload.link, color: colors.link.onPath } ],\n\t\t\t\t\t\t\t\tselected: action.payload.node, // save as selected\n\t\t\t\t\t\t\t\tdefinedNode: action.payload.node, // save as a definietion \n\t\t\t\t\t\t\t\tisEmpty: false,\n\t\t\t\t\t\t};\n\t\t\t\tcase 'SET_NODE_DONE':\n\t\t\t\t\t\tnode = state.nodes.filter( node => node.id === action.payload )[0];\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tnodes: [ ...state.nodes, { ...node, color: colors.node.done }], \n\t\t\t\t\t\t\t\tisEmpty: false,\n\t\t\t\t\t\t};\n\t\t\t\tcase 'SET_DEFINED_NODE':\n\t\t\t\t\t\tnode = state.nodes.filter( node => node.id === action.payload )[0];\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tdefinedNode: node,\n\t\t\t\t\t\t};\n\t\t\t\tcase 'ERASE_NODES':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tnodes: [],\n\t\t\t\t\t\t\t\tlinks: [],\n\t\t\t\t\t\t};\n\t\t\t\tcase 'SET_SEARCH_TERM':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tsearchTerm: action.payload,\t\t\t\t\n\t\t\t\t\t\t};\n\t\t\t\tcase 'SET_DEST_TERM':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tdestinationTerm: action.payload,\n\t\t\t\t\t\t};\n\t\t\t\tcase 'SET_NODE_SELECTED':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,// I have the feeling that this i adding oter nodes to te state\n\t\t\t\t\t\t\t\tnodes: [ ...state.nodes, { ...action.payload, color: colors.node.selected }], // change color\n\t\t\t\t\t\t\t\tselected: action.payload,\n\t\t\t\t\t\t};\n\t\t\t\tcase 'SWITCH_SELECTED_NODE':\n\t\t\t\t\t\tnode = state.nodes.filter( node => node.id === action.payload )[0];\n\t\t\t\t\t\treturn { \n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tnodes: [ \n\t\t\t\t\t\t\t\t\t\t...state.nodes, \n\t\t\t\t\t\t\t\t\t\t{ ...state.selected, color: colors.node.done, }, \n\t\t\t\t\t\t\t\t\t\t{ ...node, color: colors.node.selected },\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tselected: node,\n\t\t\t\t\t\t\t\tdefinedNode: node,\n\t\t\t\t\t\t};\n\t\t\t\tcase 'TOGGEL_MODAL':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tshowModal: !state.showModal,\n\t\t\t\t\t\t};\n\t\t\t\tcase 'SET_SHOW_MODAL':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tshowModal: action.payload,\n\t\t\t\t\t\t};\n\t\t\t\tcase 'CHANGE_D3_STATE':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tlinks: [],\n\t\t\t\t\t\t}\n\t\t\t\tcase 'SET_WORD_NOT_FOUND':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tisError: true,\n\t\t\t\t\t\t\t\tisWordNotFound: true,\n\t\t\t\t\t\t\t\t// add not found wors to list\n\t\t\t\t\t\t\t\twordsNotFound: new Set([ ...state.wordsNotFound, action.payload]),\n\t\t\t\t\t\t};\n\t\t\t\tcase 'SET_PATH_NOT_FOUND':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tisError: true,\n\t\t\t\t\t\t\t\tisPathNotFound: true,\n\t\t\t\t\t\t\t\tpathsNotFound: new Set([ ...state.pathsNotFound, { ...action.payload}]),\n\t\t\t\t\t\t};\n\t\t\t\tcase 'DISSMISS_ERROR':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tisError: false,\n\t\t\t\t\t\t\t\terrorMsg: \"\",\n\t\t\t\t\t\t\t\tisWordNotFound: false,\n\t\t\t\t\t\t\t\twordsNotFound: [],\n\t\t\t\t\t\t\t\tisPathNotFound: false,\n\t\t\t\t\t\t\t\tpathsNotFound:  [],\n\t\t\t\t\t\t};\n\t\t\t\tcase 'TOGGLE_DEEP_LINKS':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tisDeepLinks: !state.isDeepLinks,\n\t\t\t\t\t\t};\n\t\t\t\tcase 'TOGGLE_SIDE_BAR':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tisSideBar: !state.isSideBar,\n\t\t\t\t\t\t};\n\t\t\t\tcase 'SET_FETCH_FAILED':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tisError: true,\n\t\t\t\t\t\t\t\tisFetchFailed: true,\n\t\t\t\t\t\t};\n\t\t\t\tcase 'SET_GRAPH_TYPE':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\t// save the previous graph type\n\t\t\t\t\t\t\t\tprevGraphType : state.graphType,\n\t\t\t\t\t\t\t\t// set changed graph type\n\t\t\t\t\t\t\t\tgraphType: action.payload,\n\t\t\t\t\t\t};\n\t\t\t\tcase 'SET_ERROR':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tisError: true,\n\t\t\t\t\t\t\t\terrorMsg: action.payload,\n\t\t\t\t\t\t};\n\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error();\n\t\t}\n}\n\nexport { initial_state, stateReducer };\n\n"]},"metadata":{},"sourceType":"module"}