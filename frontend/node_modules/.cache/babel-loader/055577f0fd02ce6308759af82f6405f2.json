{"ast":null,"code":"var _jsxFileName = \"/home/telix/dictio-grapho/frontend/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { Graph } from \"react-d3-graph\";\nimport myConfig from \"./myConfig\";\nconst API_ENDPOINT = 'http://127.0.0.1:8000/api/v1/'; // graph payload (with minimalist structure)\n\nconst initial_state = {\n  nodes: [],\n  links: [],\n  isError: false,\n  isLoading: true,\n  searchTerm: '',\n  DestinationTerm: ''\n};\n\nfunction App() {\n  // make reducer for the words data and internal state \n  const stateReducer = (state, action) => {\n    switch (action.type) {\n      case 'SET_NEW_NODES':\n        return { ...state,\n          nodes: [...state.nodes, ...action.payload]\n        };\n\n      case 'SET_NEW_LINKS':\n        return { ...state,\n          links: [...state.links, ...action.payload]\n        };\n\n      case 'SET_NODE_LINK':\n        return { ...state,\n          nodes: [...state.nodes, action.payload.node],\n          links: [...state.links, action.payload.link]\n        };\n\n      case 'SET_STATE':\n        return { ...state,\n          nodes: [...state.nodes, ...action.payload.nodes],\n          links: [...state.links, ...action.payload.links]\n        };\n\n      case 'SET_SEARCH_NODE':\n        return { ...state,\n          nodes: [action.payload],\n          links: []\n        };\n\n      case 'ERASE_NODES':\n        return { ...state,\n          nodes: [],\n          links: []\n        };\n\n      case 'SET_SEARCH_TERM':\n        return { ...state,\n          searchTerm: action.payload\n        };\n\n      case 'SET_DEST_TERM':\n        return { ...state,\n          destinationTerm: action.payload\n        };\n\n      case 'SET_FETCH_FAILED':\n        return { ...state,\n          isError: true\n        };\n\n      default:\n        throw new Error();\n    }\n  };\n  /* define dispatcher for the Internal data */\n\n\n  const [state, dispatchState] = React.useReducer(stateReducer, initial_state);\n\n  const processNode = node => {\n    /* process a node from the api into one for the dispatcher\n     * it changes title for id, for instance */\n    node['id'] = node.title;\n    return node;\n  }; // handle the change by seting the state variable to \n\n\n  const handleSearchChange = change => dispatchState({\n    type: 'SET_SEARCH_TERM',\n    payload: change.target.value\n  }); // handle the change by seting the state variable to \n\n\n  const handleDestinationChange = change => dispatchState({\n    type: 'SET_DEST_TERM',\n    payload: change.target.value\n  }); // handle submit search button\n\n\n  const handleSearchSubmit = () => {\n    fetch(API_ENDPOINT + state.searchTerm).then(outresult => outresult.json()).then(outresult => {\n      dispatchState({\n        type: 'SET_SEARCH_NODE',\n        payload: processNode(outresult)\n      });\n      return outresult;\n    }).then(outresult => {\n      outresult.synonyms.forEach(synonym => {\n        console.log(outresult);\n        fetch(API_ENDPOINT + synonym['synonym']).then(result => result.json()).then(result => processNode(result)).then(result => {\n          dispatchState({\n            type: 'SET_NODE_LINK',\n            payload: {\n              node: result,\n              link: {\n                source: outresult.id,\n                target: result.id\n              }\n            }\n          });\n        }).catch(() => dispatchState({\n          type: 'SET_FETCH_FAILED'\n        }));\n      });\n    }).catch(() => dispatchState({\n      type: 'SET_FETCH_FAILED'\n    }));\n  }; // handle path button\n\n\n  const handlePathSubmit = () => dispatchState({\n    type: 'RESET_NODE'\n  });\n\n  const onClickNode = function (nodeId) {\n    console.log(`clicked node ${nodeId}`);\n  };\n\n  const onRightClickNode = function (event, nodeId) {\n    window.alert(`Right clicked node ${nodeId}`);\n  };\n\n  const onClickLink = function (source, target) {\n    window.alert(`Clicked link between ${source} and ${target}`);\n  };\n\n  const onRightClickLink = function (event, source, target) {\n    window.alert(`Right clicked link between ${source} and ${target}`);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputWithLabel, {\n    id: \"search\",\n    type: \"text\",\n    isFocuse: true,\n    value: state.searchTerm,\n    onInputChange: handleSearchChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, \"Search:\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    disable: !state.searchTerm,\n    onClick: handleSearchSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, \"Search\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputWithLabel, {\n    id: \"destination\",\n    type: \"text\",\n    value: state.destinationTerm,\n    onInputChange: handleDestinationChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, \"Destination:\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    disable: !state.destinationTerm,\n    onClick: handlePathSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, \"Get path\")), /*#__PURE__*/React.createElement(Graph, {\n    id: \"graph-id\" // id is mandatory, if no id is defined rd3g will throw an error\n    ,\n    data: state,\n    config: myConfig,\n    onClickNode: onClickNode,\n    onRightClickNode: onRightClickNode,\n    onClickLink: onClickLink,\n    onRightClickLink: onRightClickLink,\n    backgroundColor: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }));\n}\n\nconst InputWithLabel = ({\n  id,\n  type,\n  value,\n  onInputChange,\n  isFocused,\n  children\n}) => {\n  /* A component with the Input and a Label */\n  // Define an input ref for passing to input component\n  const inputRef = React.useRef(); // set up a side effect it is updates if the focus changes\n\n  React.useEffect(() => {\n    if (isFocused && inputRef.current) inputRef.current.focused();\n  }, [isFocused]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 5\n    }\n  }, \" \", children, \" \"), \"\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    id: id,\n    ref: inputRef,\n    type: type,\n    value: value,\n    onChange: onInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/telix/dictio-grapho/frontend/src/App.js"],"names":["React","Graph","myConfig","API_ENDPOINT","initial_state","nodes","links","isError","isLoading","searchTerm","DestinationTerm","App","stateReducer","state","action","type","payload","node","link","destinationTerm","Error","dispatchState","useReducer","processNode","title","handleSearchChange","change","target","value","handleDestinationChange","handleSearchSubmit","fetch","then","outresult","json","synonyms","forEach","synonym","console","log","result","source","id","catch","handlePathSubmit","onClickNode","nodeId","onRightClickNode","event","window","alert","onClickLink","onRightClickLink","InputWithLabel","onInputChange","isFocused","children","inputRef","useRef","useEffect","current","focused"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { Graph } from \"react-d3-graph\";\nimport  myConfig  from \"./myConfig\";\nconst API_ENDPOINT = 'http://127.0.0.1:8000/api/v1/'\n\n// graph payload (with minimalist structure)\nconst initial_state = {\n\t\tnodes: [],\n\t\tlinks: [],\n\t\tisError: false,\n\t\tisLoading: true,\n\t\tsearchTerm: '',\n\t\tDestinationTerm: '',\n};\n\nfunction App() {\n\t\t// make reducer for the words data and internal state \n\t\tconst stateReducer = (state, action) =>{\n\t\t\t\tswitch (action.type){\n\t\t\t\t\t\tcase 'SET_NEW_NODES':\n\t\t\t\t\t\t\t\treturn { \n\t\t\t\t\t\t\t\t\t\t...state, \n\t\t\t\t\t\t\t\t\t\tnodes: [ ...state.nodes, ...action.payload ],\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'SET_NEW_LINKS':\n\t\t\t\t\t\t\t\treturn { \n\t\t\t\t\t\t\t\t\t\t...state, \n\t\t\t\t\t\t\t\t\t\tlinks: [ ...state.links, ...action.payload ]\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'SET_NODE_LINK':\n\t\t\t\t\t\t\t\treturn { \n\t\t\t\t\t\t\t\t\t\t...state, \n\t\t\t\t\t\t\t\t\t\tnodes: [ ...state.nodes, action.payload.node ],\n\t\t\t\t\t\t\t\t\t\tlinks: [ ...state.links, action.payload.link ]\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'SET_STATE':\n\t\t\t\t\t\t\t\treturn { \n\t\t\t\t\t\t\t\t\t\t...state, \n\t\t\t\t\t\t\t\t\t\tnodes: [ ...state.nodes, ...action.payload.nodes ],\n\t\t\t\t\t\t\t\t\t\tlinks: [ ...state.links, ...action.payload.links ]\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'SET_SEARCH_NODE':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\t\t\tnodes: [ action.payload ],\n\t\t\t\t\t\t\t\t\t\tlinks: [],\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'ERASE_NODES':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\t\t\tnodes: [],\n\t\t\t\t\t\t\t\t\t\tlinks: [],\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'SET_SEARCH_TERM':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\t\t\tsearchTerm: action.payload,\t\t\t\t\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'SET_DEST_TERM':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\t\t\tdestinationTerm: action.payload,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'SET_FETCH_FAILED':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\t\t\tisError: true,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tthrow new Error();\n\t\t\t\t}\n\t\t}\n\n\t\t/* define dispatcher for the Internal data */\n\t\tconst [state, dispatchState] = React.useReducer( stateReducer, initial_state );\n\n\t\tconst processNode = (node) =>{\n\t\t\t\t/* process a node from the api into one for the dispatcher\n\t\t\t\t * it changes title for id, for instance */\n\t\t\t\tnode['id'] = node.title\n\t\t\t\treturn node\n\t\t}\n\t\n\t\t// handle the change by seting the state variable to \n\t\tconst handleSearchChange = change => dispatchState({ type: 'SET_SEARCH_TERM', payload: change.target.value });\n\t\t// handle the change by seting the state variable to \n\t\tconst handleDestinationChange = change => dispatchState({ type: 'SET_DEST_TERM', payload: change.target.value });\n\n\t\t// handle submit search button\n\t\tconst handleSearchSubmit = () =>  {\n\t\t\t\tfetch(API_ENDPOINT + state.searchTerm)\n\t\t\t\t\t\t.then(outresult => outresult.json())\n\t\t\t\t\t\t.then(outresult => {\n\t\t\t\t\t\t\t\tdispatchState({type: 'SET_SEARCH_NODE', payload: processNode(outresult)})\n\t\t\t\t\t\t\t\treturn outresult\n\t\t\t\t\t\t}).then(outresult => {\n\t\t\t\t\t\t\t\toutresult.synonyms.forEach( \n\t\t\t\t\t\t\t\t\t\tsynonym => {\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(outresult);\n\t\t\t\t\t\t\t\t\t\t\t\tfetch(API_ENDPOINT + synonym['synonym'])\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.then(result => result.json())\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.then(result => processNode(result))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.then(result => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdispatchState({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'SET_NODE_LINK', \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpayload: { \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnode: result,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlink: { source: outresult.id , target: result.id }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}).catch(() => dispatchState({type:'SET_FETCH_FAILED'}))\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}).catch(() => dispatchState({type:'SET_FETCH_FAILED'}));\n\t\t}\n\n\t\t// handle path button\n\t\tconst handlePathSubmit = () => dispatchState({ type: 'RESET_NODE' });\n\n\t\tconst onClickNode = function(nodeId) {\n\t\t\t\tconsole.log(`clicked node ${nodeId}`);\n\t\t};\n\n\t\tconst onRightClickNode = function(event, nodeId) {\n\t\t\t\twindow.alert(`Right clicked node ${nodeId}`);\n\t\t};\n\n\t\tconst onClickLink = function(source, target) {\n\t\t\t\twindow.alert(`Clicked link between ${source} and ${target}`);\n\t\t};\n\n\t\tconst onRightClickLink = function(event, source, target) {\n\t\t\t\twindow.alert(`Right clicked link between ${source} and ${target}`);\n\t\t};\n\n\t\treturn (\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<InputWithLabel id=\"search\" type=\"text\" isFocuse value={state.searchTerm} onInputChange={handleSearchChange}>\n\t\t\t\t\t\t\t\t\t\t<strong>Search:</strong>\n\t\t\t\t\t\t\t\t</InputWithLabel>\n\t\t\t\t\t\t\t\t<button type=\"button\" disable={!state.searchTerm} onClick={handleSearchSubmit}>\n\t\t\t\t\t\t\t\t\t\tSearch\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<InputWithLabel id=\"destination\" type=\"text\" value={state.destinationTerm} onInputChange={handleDestinationChange}>\n\t\t\t\t\t\t\t\t\t\t<strong>Destination:</strong>\n\t\t\t\t\t\t\t\t</InputWithLabel>\n\t\t\t\t\t\t\t\t<button type=\"button\" disable={!state.destinationTerm} onClick={handlePathSubmit}>\n\t\t\t\t\t\t\t\t\t\tGet path\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Graph\n\t\t\t\t\t\t\t\tid=\"graph-id\" // id is mandatory, if no id is defined rd3g will throw an error\n\t\t\t\t\t\t\t\tdata={state}\n\t\t\t\t\t\t\t\tconfig={myConfig}\n\t\t\t\t\t\t\t\tonClickNode={onClickNode}\n\t\t\t\t\t\t\t\tonRightClickNode={onRightClickNode}\n\t\t\t\t\t\t\t\tonClickLink={onClickLink}\n\t\t\t\t\t\t\t\tonRightClickLink={onRightClickLink}\n\t\t\t\t\t\t\t\tbackgroundColor={\"black\"}\n\t\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t);\n}\n\nconst InputWithLabel = ({ id, type, value, onInputChange, isFocused, children }) => {\n\t\t/* A component with the Input and a Label */\n\t\t// Define an input ref for passing to input component\n\t\tconst inputRef = React.useRef()\n\t\t// set up a side effect it is updates if the focus changes\n\t\tReact.useEffect(() => { if(isFocused && inputRef.current) inputRef.current.focused(); }, [isFocused])\n\t\treturn <>\n\t\t\t\t<label htmlFor={id}> {children} </label>\n\t\t\t\t&nbsp;\n\t\t\t\t<input id={id} ref={inputRef} type={type} value={value} onChange={onInputChange}/>\n\t\t</>\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}