{"ast":null,"code":"var _jsxFileName = \"/home/telix/dictographo/frontend/src/Components/NavBar.js\";\nimport React from 'react';\nimport { queryNewWord, queryPath } from '../node_functions';\nimport { colors } from \"../myConfig\";\nimport { Nav, Navbar, NavDropdown, Form, FormControl, Button, InputGroup } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSlidersH } from '@fortawesome/free-solid-svg-icons';\n/*\n * =======================================\n *      NavBar Componente for React \n * =======================================\n * \t Using ReaactBootStrap to render the navbar\n */\n\nfunction NavBarContainer({\n  state,\n  dispatchState\n}) {\n  // handle the change by seting the state variable to \n  const handleSearchChange = change => dispatchState({\n    type: 'SET_SEARCH_TERM',\n    payload: change.target.value\n  });\n\n  const handleSearchSubmit = () => {\n    /* handle submit search button */\n    let words = getmultipleWords(state.searchTerm.toLowerCase()); // set all serches to lowercase\n\n    if (words.length > 1) {\n      //if it has more that two words\n      queryPath(words, state, dispatchState);\n    } else {\n      // if there is only one word\n      queryNewWord(words[0], state, dispatchState);\n    }\n  };\n\n  const getmultipleWords = string => {\n    /* determines qhereteher a string \n     * is compossed of multiple words */\n    //remove multiple spaces\n    //trim, remove multiple and seperate by spaces\n    return string.replace(/  +/g, ' ').trim().split(' ');\n  };\n\n  const handleToggleDeepLinks = () => {\n    /* hangles the toggle of the deep links, \n     * resets the graph if there is already a \n     * selected node */\n    let selectedNode = state.selected;\n    if (!state.isEmpty) queryNewWord(selectedNode.id, state, dispatchState);\n    dispatchState({\n      type: 'TOGGLE_DEEP_LINKS'\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Navbar, {\n    expand: \"lg\",\n    className: \"justify-content-center\",\n    variant: \"dark\",\n    style: {\n      backgroundColor: colors.black\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"index.html\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/logo.png\",\n    width: \"150\",\n    height: \"70\",\n    alt: \"React Bootstrap logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Navbar.Brand, {\n    href: \"index.html\",\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Dictographo\")), /*#__PURE__*/React.createElement(InputGroup, {\n    size: \"lg\",\n    md: \"auto\",\n    className: \"mx-3\",\n    style: {\n      maxWidth: \"600px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    size: \"lg\",\n    as: \"input\",\n    type: \"text\",\n    placeholder: \"Dog Cat\",\n    value: state.searchTerm,\n    onChange: handleSearchChange,\n    onKeyPress: event => event.key === \"Enter\" && handleSearchSubmit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"lg\",\n    variant: \"outline-info\",\n    onClick: handleSearchSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Search\"))), /*#__PURE__*/React.createElement(Navbar.Collapse, {\n    id: \"basic-navbar-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    className: \"ml-auto mx-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NavDropdown, {\n    variant: \"dark\",\n    size: \"lg\",\n    title: \"Options\",\n    icon: /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSlidersH,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }\n    }),\n    id: \"basic-nav-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NavDropdown.Item, {\n    href: \"#action/3.1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Action\"), /*#__PURE__*/React.createElement(NavDropdown.Item, {\n    href: \"#action/3.2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Another action\"), /*#__PURE__*/React.createElement(NavDropdown.Item, {\n    href: \"#action/3.3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Something\"), /*#__PURE__*/React.createElement(NavDropdown.Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"switch\",\n    id: \"custom-switch\",\n    label: \"Deep Links\",\n    value: state.isDeepLinks,\n    onChange: handleToggleDeepLinks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default NavBarContainer;","map":{"version":3,"sources":["/home/telix/dictographo/frontend/src/Components/NavBar.js"],"names":["React","queryNewWord","queryPath","colors","Nav","Navbar","NavDropdown","Form","FormControl","Button","InputGroup","FontAwesomeIcon","faSlidersH","NavBarContainer","state","dispatchState","handleSearchChange","change","type","payload","target","value","handleSearchSubmit","words","getmultipleWords","searchTerm","toLowerCase","length","string","replace","trim","split","handleToggleDeepLinks","selectedNode","selected","isEmpty","id","backgroundColor","black","maxWidth","event","key","isDeepLinks"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { queryNewWord, queryPath } from '../node_functions';\nimport { colors }  from \"../myConfig\";\nimport { Nav, Navbar, NavDropdown, Form, FormControl, Button, InputGroup } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon  } from '@fortawesome/react-fontawesome'\nimport { faSlidersH } from '@fortawesome/free-solid-svg-icons'\n/*\n * =======================================\n *      NavBar Componente for React \n * =======================================\n * \t Using ReaactBootStrap to render the navbar\n */\n\nfunction NavBarContainer({ state, dispatchState }){\n\n\t\t// handle the change by seting the state variable to \n\t\tconst handleSearchChange = change => dispatchState({ \n\t\t\t\ttype: 'SET_SEARCH_TERM',\n\t\t\t\tpayload: change.target.value });\n\n\t\tconst handleSearchSubmit = () =>  {\n\t\t\t\t/* handle submit search button */\n\t\t\t\tlet words = getmultipleWords(state.searchTerm.toLowerCase());\n\t\t\t\t// set all serches to lowercase\n\t\t\t\tif(words.length > 1){\n\t\t\t\t\t\t//if it has more that two words\n\t\t\t\t\t\tqueryPath(words, state, dispatchState);\n\t\t\t\t}else{ \n\t\t\t\t\t\t// if there is only one word\n\t\t\t\t\t\tqueryNewWord(words[0], state, dispatchState);\n\t\t\t\t}\n\t\t}\n\n\t\tconst getmultipleWords = (string) => {\n\t\t\t\t/* determines qhereteher a string \n\t\t\t\t * is compossed of multiple words */\n\t\t\t\t//remove multiple spaces\n\t\t\t\t//trim, remove multiple and seperate by spaces\n\t\t\t\treturn string.replace(/  +/g, ' ').trim().split(' ') \n\t\t}\n\n\t\tconst handleToggleDeepLinks = () => {\n\t\t\t\t/* hangles the toggle of the deep links, \n\t\t\t\t * resets the graph if there is already a \n\t\t\t\t * selected node */\n\t\t\t\tlet selectedNode = state.selected;\n\t\t\t\tif(!state.isEmpty) queryNewWord(selectedNode.id, state, dispatchState);\n\t\t\t\tdispatchState({type:'TOGGLE_DEEP_LINKS'});\n\t\t}\n\n\n\t\treturn(\n\t\t\t\t<Navbar expand=\"lg\" className=\"justify-content-center\"\n\t\t\t\t\t\tvariant=\"dark\" style={{backgroundColor: colors.black}}>\n\t\t\t\t\t\t<a href=\"index.html\">\n\t\t\t\t\t\t\t\t<img src=\"/logo.png\" width=\"150\"\n\t\t\t\t\t\t\t\t\t\theight=\"70\"\n\t\t\t\t\t\t\t\t\t\talt=\"React Bootstrap logo\" />\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<Navbar.Brand href=\"index.html\" className=\"row\"  >\n\t\t\t\t\t\t\t\t<h1>Dictographo</h1>\n\t\t\t\t\t\t</Navbar.Brand>\n\t\t\t\t\t\t<InputGroup  size='lg' md='auto' className=\"mx-3\" style={{maxWidth: \"600px\"}} >\n\t\t\t\t\t\t\t\t<FormControl size=\"lg\" as='input' type=\"text\" placeholder=\"Dog Cat\" \n\t\t\t\t\t\t\t\t\t\tvalue={state.searchTerm} onChange={handleSearchChange} \n\t\t\t\t\t\t\t\t\t\tonKeyPress={event => (event.key === \"Enter\") && handleSearchSubmit()}/>\n\t\t\t\t\t\t\t\t<InputGroup.Append>\n\t\t\t\t\t\t\t\t\t\t<Button size=\"lg\" variant=\"outline-info\" onClick={handleSearchSubmit}>Search</Button>\n\t\t\t\t\t\t\t\t</InputGroup.Append>\n\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t\t\t\t\t<Nav className=\"ml-auto mx-4\">\n\t\t\t\t\t\t\t\t\t\t<NavDropdown variant=\"dark\"\n\t\t\t\t\t\t\t\t\t\t\t\tsize=\"lg\" title=\"Options\" \n\t\t\t\t\t\t\t\t\t\t\t\ticon={<FontAwesomeIcon icon={faSlidersH}/>}\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"basic-nav-dropdown\">\n\t\t\t\t\t\t\t\t\t\t\t\t<NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t<NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t<NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t<NavDropdown.Divider />\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Check type=\"switch\" id=\"custom-switch\" label=\"Deep Links\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={state.isDeepLinks} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleToggleDeepLinks}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</NavDropdown>\n\t\t\t\t\t\t\t\t</Nav>\n\t\t\t\t\t\t</Navbar.Collapse>\n\t\t\t\t</Navbar>\n\t\t)\n}\n\nexport default NavBarContainer;\n"]},"metadata":{},"sourceType":"module"}