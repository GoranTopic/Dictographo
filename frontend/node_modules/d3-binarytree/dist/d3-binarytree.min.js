// https://github.com/vasturiano/d3-binarytree v0.1.8 Copyright 2020 Vasco Asturiano
!function(t,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define(["exports"],r):r((t=t||self).d3=t.d3||{})}(this,(function(t){"use strict";function r(t,r,e){if(isNaN(r))return t;var n,i,o,h,s,u,a=t._root,f={data:e},l=t._x0,x=t._x1;if(!a)return t._root=f,t;for(;a.length;)if((h=r>=(i=(l+x)/2))?l=i:x=i,n=a,!(a=a[s=+h]))return n[s]=f,t;if(r===(o=+t._x.call(null,a.data)))return f.next=a,n?n[s]=f:t._root=f,t;do{n=n?n[s]=new Array(2):t._root=new Array(2),(h=r>=(i=(l+x)/2))?l=i:x=i}while((s=+h)==(u=+(o>=i)));return n[u]=a,n[s]=f,t}function e(t,r,e){this.node=t,this.x0=r,this.x1=e}function n(t){return t[0]}function i(t,r){var e=new o(null==r?n:r,NaN,NaN);return null==t?e:e.addAll(t)}function o(t,r,e){this._x=t,this._x0=r,this._x1=e,this._root=void 0}function h(t){for(var r={data:t.data},e=r;t=t.next;)e=e.next={data:t.data};return r}var s=i.prototype=o.prototype;s.copy=function(){var t,r,e=new o(this._x,this._x0,this._x1),n=this._root;if(!n)return e;if(!n.length)return e._root=h(n),e;for(t=[{source:n,target:e._root=new Array(2)}];n=t.pop();)for(var i=0;i<2;++i)(r=n.source[i])&&(r.length?t.push({source:r,target:n.target[i]=new Array(2)}):n.target[i]=h(r));return e},s.add=function(t){var e=+this._x.call(null,t);return r(this.cover(e),e,t)},s.addAll=function(t){var e,n,i=t.length,o=new Array(i),h=1/0,s=-1/0;for(e=0;e<i;++e)isNaN(n=+this._x.call(null,t[e]))||(o[e]=n,n<h&&(h=n),n>s&&(s=n));for(s<h&&(h=this._x0,s=this._x1),this.cover(h).cover(s),e=0;e<i;++e)r(this,o[e],t[e]);return this},s.cover=function(t){if(isNaN(t=+t))return this;var r=this._x0,e=this._x1;if(isNaN(r))e=(r=Math.floor(t))+1;else{if(!(r>t||t>e))return this;var n,i,o=e-r,h=this._root;switch(i=+(t<(r+e)/2)){case 0:do{(n=new Array(2))[i]=h,h=n}while(t>(e=r+(o*=2)));break;case 1:do{(n=new Array(2))[i]=h,h=n}while((r=e-(o*=2))>t)}this._root&&this._root.length&&(this._root=h)}return this._x0=r,this._x1=e,this},s.data=function(){var t=[];return this.visit((function(r){if(!r.length)do{t.push(r.data)}while(r=r.next)})),t},s.extent=function(t){return arguments.length?this.cover(+t[0][0]).cover(+t[1][0]):isNaN(this._x0)?void 0:[[this._x0],[this._x1]]},s.find=function(t,r){var n,i,o,h,s,u=this._x0,a=this._x1,f=[],l=this._root;for(l&&f.push(new e(l,u,a)),null==r?r=1/0:(u=t-r,a=t+r);h=f.pop();)if(!(!(l=h.node)||(i=h.x0)>a||(o=h.x1)<u))if(l.length){var x=(i+o)/2;f.push(new e(l[1],x,o),new e(l[0],i,x)),(s=+(t>=x))&&(h=f[f.length-1],f[f.length-1]=f[f.length-1-s],f[f.length-1-s]=h)}else{var _=Math.abs(t-+this._x.call(null,l.data));_<r&&(r=_,u=t-_,a=t+_,n=l.data)}return n},s.remove=function(t){if(isNaN(o=+this._x.call(null,t)))return this;var r,e,n,i,o,h,s,u,a,f=this._root,l=this._x0,x=this._x1;if(!f)return this;if(f.length)for(;;){if((s=o>=(h=(l+x)/2))?l=h:x=h,r=f,!(f=f[u=+s]))return this;if(!f.length)break;r[u+1&1]&&(e=r,a=u)}for(;f.data!==t;)if(n=f,!(f=f.next))return this;return(i=f.next)&&delete f.next,n?(i?n.next=i:delete n.next,this):r?(i?r[u]=i:delete r[u],(f=r[0]||r[1])&&f===(r[1]||r[0])&&!f.length&&(e?e[a]=f:this._root=f),this):(this._root=i,this)},s.removeAll=function(t){for(var r=0,e=t.length;r<e;++r)this.remove(t[r]);return this},s.root=function(){return this._root},s.size=function(){var t=0;return this.visit((function(r){if(!r.length)do{++t}while(r=r.next)})),t},s.visit=function(t){var r,n,i,o,h=[],s=this._root;for(s&&h.push(new e(s,this._x0,this._x1));r=h.pop();)if(!t(s=r.node,i=r.x0,o=r.x1)&&s.length){var u=(i+o)/2;(n=s[1])&&h.push(new e(n,u,o)),(n=s[0])&&h.push(new e(n,i,u))}return this},s.visitAfter=function(t){var r,n=[],i=[];for(this._root&&n.push(new e(this._root,this._x0,this._x1));r=n.pop();){var o=r.node;if(o.length){var h,s=r.x0,u=r.x1,a=(s+u)/2;(h=o[0])&&n.push(new e(h,s,a)),(h=o[1])&&n.push(new e(h,a,u))}i.push(r)}for(;r=i.pop();)t(r.node,r.x0,r.x1);return this},s.x=function(t){return arguments.length?(this._x=t,this):this._x},t.binarytree=i,Object.defineProperty(t,"__esModule",{value:!0})}));
